{"2410.08760": {"publish_time": "2024-10-11", "title": "Unlocking FedNL: Self-Contained Compute-Optimized Implementation", "paper_summary": "Federated Learning (FL) is an emerging paradigm that enables intelligent\nagents to collaboratively train Machine Learning (ML) models in a distributed\nmanner, eliminating the need for sharing their local data. The recent work\n(arXiv:2106.02969) introduces a family of Federated Newton Learn (FedNL)\nalgorithms, marking a significant step towards applying second-order methods to\nFL and large-scale optimization. However, the reference FedNL prototype\nexhibits three serious practical drawbacks: (i) It requires 4.8 hours to launch\na single experiment in a sever-grade workstation; (ii) The prototype only\nsimulates multi-node setting; (iii) Prototype integration into\nresource-constrained applications is challenging. To bridge the gap between\ntheory and practice, we present a self-contained implementation of FedNL,\nFedNL-LS, FedNL-PP for single-node and multi-node settings. Our work resolves\nthe aforementioned issues and reduces the wall clock time by x1000. With this\nFedNL outperforms alternatives for training logistic regression in a\nsingle-node -- CVXPY (arXiv:1603.00943), and in a multi-node -- Apache Spark\n(arXiv:1505.06807), Ray/Scikit-Learn (arXiv:1712.05889). Finally, we propose\ntwo practical-orientated compressors for FedNL - adaptive TopLEK and\ncache-aware RandSeqK, which fulfill the theory of FedNL.", "paper_summary_zh": "\u806f\u90a6\u5b78\u7fd2 (FL) \u662f\u4e00\u7a2e\u65b0\u8208\u7bc4\u4f8b\uff0c\u5b83\u8b93\u667a\u80fd\u4ee3\u7406\u80fd\u5920\u4ee5\u5206\u5e03\u5f0f\u65b9\u5f0f\u5354\u4f5c\u8a13\u7df4\u6a5f\u5668\u5b78\u7fd2 (ML) \u6a21\u578b\uff0c\u7121\u9700\u5206\u4eab\u5176\u672c\u5730\u6578\u64da\u3002\u6700\u65b0\u7814\u7a76 (arXiv:2106.02969) \u4ecb\u7d39\u4e86\u4e00\u7cfb\u5217\u806f\u90a6\u725b\u9813\u5b78\u7fd2 (FedNL) \u6f14\u7b97\u6cd5\uff0c\u6a19\u8a8c\u8457\u5c07\u4e8c\u968e\u65b9\u6cd5\u61c9\u7528\u65bc FL \u548c\u5927\u898f\u6a21\u6700\u4f73\u5316\u7684\u91cd\u8981\u4e00\u6b65\u3002\u7136\u800c\uff0c\u53c3\u8003 FedNL \u539f\u578b\u5c55\u793a\u4e86\u4e09\u500b\u56b4\u91cd\u7684\u5be6\u969b\u7f3a\u9ede\uff1a(i) \u5b83\u9700\u8981 4.8 \u5c0f\u6642\u624d\u80fd\u5728\u4f3a\u670d\u5668\u7d1a\u5de5\u4f5c\u7ad9\u4e2d\u555f\u52d5\u55ae\u4e00\u5be6\u9a57\uff1b(ii) \u539f\u578b\u50c5\u6a21\u64ec\u591a\u7bc0\u9ede\u8a2d\u5b9a\uff1b(iii) \u5c07\u539f\u578b\u6574\u5408\u5230\u8cc7\u6e90\u53d7\u9650\u7684\u61c9\u7528\u7a0b\u5f0f\u4e2d\u5177\u6709\u6311\u6230\u6027\u3002\u70ba\u4e86\u5f4c\u5408\u7406\u8ad6\u8207\u5be6\u52d9\u4e4b\u9593\u7684\u5dee\u8ddd\uff0c\u6211\u5011\u63d0\u51fa\u4e86 FedNL \u7684\u81ea\u5305\u542b\u5be6\u4f5c\uff0cFedNL-LS\u3001FedNL-PP\uff0c\u9069\u7528\u65bc\u55ae\u7bc0\u9ede\u548c\u591a\u7bc0\u9ede\u8a2d\u5b9a\u3002\u6211\u5011\u7684\u7814\u7a76\u89e3\u6c7a\u4e86\u4e0a\u8ff0\u554f\u984c\uff0c\u4e26\u5c07\u6642\u8108\u6642\u9593\u6e1b\u5c11\u4e86 x1000\u3002\u6709\u4e86\u9019\u500b FedNL\uff0c\u5b83\u512a\u65bc\u5728\u55ae\u7bc0\u9ede\u4e2d\u8a13\u7df4\u908f\u8f2f\u8ff4\u6b78\u7684\u66ff\u4ee3\u65b9\u6848 -- CVXPY (arXiv:1603.00943)\uff0c\u4ee5\u53ca\u5728\u591a\u7bc0\u9ede\u4e2d\u8a13\u7df4\u908f\u8f2f\u8ff4\u6b78\u7684\u66ff\u4ee3\u65b9\u6848 -- Apache Spark (arXiv:1505.06807)\u3001Ray/Scikit-Learn (arXiv:1712.05889)\u3002\u6700\u5f8c\uff0c\u6211\u5011\u70ba FedNL \u63d0\u51fa\u5169\u500b\u5be6\u52d9\u5c0e\u5411\u7684\u58d3\u7e2e\u5668 - \u81ea\u9069\u61c9 TopLEK \u548c\u5feb\u53d6\u611f\u77e5 RandSeqK\uff0c\u5b83\u5011\u6eff\u8db3\u4e86 FedNL \u7684\u7406\u8ad6\u3002", "author": "Konstantin Burlachenko et.al.", "authors": "Konstantin Burlachenko, Peter Richt\u00e1rik", "id": "2410.08760v1", "paper_url": "http://arxiv.org/abs/2410.08760v1", "repo": "null"}}