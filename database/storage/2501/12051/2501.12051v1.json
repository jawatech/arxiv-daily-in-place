{"2501.12051": {"publish_time": "2025-01-21", "title": "MedS$^3$: Towards Medical Small Language Models with Self-Evolved Slow Thinking", "paper_summary": "Medical language models (MLMs) have become pivotal in advancing medical\nnatural language processing. However, prior models that rely on pre-training or\nsupervised fine-tuning often exhibit low data efficiency and limited\npracticality in real-world clinical applications. While OpenAIs O1 highlights\ntest-time scaling in mathematics, attempts to replicate this approach in\nmedicine typically distill responses from GPT-series models to open-source\nmodels, focusing primarily on multiple-choice tasks. This strategy, though\nstraightforward, neglects critical concerns like data privacy and realistic\ndeployment in clinical settings. In this work, we present a deployable,\nsmall-scale medical language model, \\mone, designed for long-chain reasoning in\nclinical tasks using a self-evolution paradigm. Starting with a seed dataset of\naround 8,000 instances spanning five domains and 16 datasets, we prompt a base\npolicy model to perform Monte Carlo Tree Search (MCTS) to construct verifiable\nreasoning chains. Each reasoning step is assigned an evolution rollout value,\nallowing verified trajectories to train the policy model and the reward model.\nDuring inference, the policy model generates multiple responses, and the reward\nmodel selects the one with the highest reward score. Experiments on eleven\nevaluation datasets demonstrate that \\mone outperforms prior open-source models\nby 2 points, with the addition of the reward model further boosting performance\n($\\sim$13 points), surpassing GPT-4o-mini. Code and data are available at\n\\url{https://github.com/pixas/MedSSS}.", "paper_summary_zh": "<paragraph>\u91ab\u7642\u8a9e\u8a00\u6a21\u578b (MLM) \u5df2\u6210\u70ba\u63a8\u9032\u91ab\u7642\u81ea\u7136\u8a9e\u8a00\u8655\u7406\u7684\u95dc\u9375\u3002\u7136\u800c\uff0c\u4f9d\u8cf4\u65bc\u9810\u8a13\u7df4\u6216\u76e3\u7763\u5fae\u8abf\u7684\u5148\u524d\u6a21\u578b\u901a\u5e38\u8868\u73fe\u51fa\u4f4e\u8cc7\u6599\u6548\u7387\uff0c\u4e14\u5728\u73fe\u5be6\u4e16\u754c\u7684\u81e8\u5e8a\u61c9\u7528\u4e2d\u5be6\u7528\u6027\u6709\u9650\u3002\u5118\u7ba1 OpenAI \u7684 O1 \u5f37\u8abf\u6578\u5b78\u4e2d\u7684\u6e2c\u8a66\u6642\u9593\u7e2e\u653e\uff0c\u4f46\u5617\u8a66\u5728\u91ab\u5b78\u4e2d\u8907\u88fd\u6b64\u65b9\u6cd5\u901a\u5e38\u6703\u5c07 GPT \u7cfb\u5217\u6a21\u578b\u7684\u56de\u61c9\u63d0\u7149\u5230\u958b\u6e90\u6a21\u578b\uff0c\u4e3b\u8981\u95dc\u6ce8\u65bc\u591a\u9078\u984c\u4efb\u52d9\u3002\u9019\u7a2e\u7b56\u7565\u96d6\u7136\u7c21\u55ae\uff0c\u4f46\u5ffd\u7565\u4e86\u8cc7\u6599\u96b1\u79c1\u548c\u81e8\u5e8a\u74b0\u5883\u4e2d\u7684\u5be6\u969b\u90e8\u7f72\u7b49\u95dc\u9375\u554f\u984c\u3002\u5728\u9019\u9805\u5de5\u4f5c\u4e2d\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u500b\u53ef\u90e8\u7f72\u7684\u5c0f\u898f\u6a21\u91ab\u7642\u8a9e\u8a00\u6a21\u578b \\mone\uff0c\u5b83\u4f7f\u7528\u81ea\u6f14\u5316\u7bc4\u4f8b\u91dd\u5c0d\u81e8\u5e8a\u4efb\u52d9\u4e2d\u7684\u9577\u93c8\u63a8\u7406\u800c\u8a2d\u8a08\u3002\u5f9e\u8de8\u8d8a\u4e94\u500b\u9818\u57df\u548c 16 \u500b\u8cc7\u6599\u96c6\u7684\u5927\u7d04 8,000 \u500b\u5be6\u4f8b\u7684\u7a2e\u5b50\u8cc7\u6599\u96c6\u958b\u59cb\uff0c\u6211\u5011\u63d0\u793a\u4e00\u500b\u57fa\u672c\u7b56\u7565\u6a21\u578b\u57f7\u884c\u8499\u5730\u5361\u7f85\u6a39\u72c0\u641c\u5c0b (MCTS) \u4ee5\u5efa\u69cb\u53ef\u9a57\u8b49\u7684\u63a8\u7406\u93c8\u3002\u6bcf\u500b\u63a8\u7406\u6b65\u9a5f\u90fd\u6307\u5b9a\u4e86\u4e00\u500b\u6f14\u5316\u5c55\u958b\u503c\uff0c\u5141\u8a31\u9a57\u8b49\u7684\u8ecc\u8de1\u8a13\u7df4\u7b56\u7565\u6a21\u578b\u548c\u734e\u52f5\u6a21\u578b\u3002\u5728\u63a8\u7406\u671f\u9593\uff0c\u7b56\u7565\u6a21\u578b\u6703\u7522\u751f\u591a\u500b\u56de\u61c9\uff0c\u800c\u734e\u52f5\u6a21\u578b\u6703\u9078\u64c7\u734e\u52f5\u5206\u6578\u6700\u9ad8\u7684\u56de\u61c9\u3002\u5c0d 11 \u500b\u8a55\u4f30\u8cc7\u6599\u96c6\u7684\u5be6\u9a57\u8868\u660e\uff0c\\mone \u7684\u8868\u73fe\u512a\u65bc\u5148\u524d\u7684\u958b\u6e90\u6a21\u578b 2 \u5206\uff0c\u800c\u734e\u52f5\u6a21\u578b\u7684\u52a0\u5165\u9032\u4e00\u6b65\u63d0\u5347\u4e86\u6548\u80fd\uff08$\\sim$13 \u5206\uff09\uff0c\u8d85\u8d8a\u4e86 GPT-4o-mini\u3002\u7a0b\u5f0f\u78bc\u548c\u8cc7\u6599\u53ef\u4ee5\u5728 \\url{https://github.com/pixas/MedSSS} \u53d6\u5f97\u3002</paragraph>", "author": "Shuyang Jiang et.al.", "authors": "Shuyang Jiang, Yusheng Liao, Zhe Chen, Ya Zhang, Yanfeng Wang, Yu Wang", "id": "2501.12051v1", "paper_url": "http://arxiv.org/abs/2501.12051v1", "repo": "https://github.com/pixas/medsss"}}