{"2409.02451": {"publish_time": "2024-09-04", "title": "Fast, High-Quality and Parameter-Efficient Articulatory Synthesis using Differentiable DSP", "paper_summary": "Articulatory trajectories like electromagnetic articulography (EMA) provide a\nlow-dimensional representation of the vocal tract filter and have been used as\nnatural, grounded features for speech synthesis. Differentiable digital signal\nprocessing (DDSP) is a parameter-efficient framework for audio synthesis.\nTherefore, integrating low-dimensional EMA features with DDSP can significantly\nenhance the computational efficiency of speech synthesis. In this paper, we\npropose a fast, high-quality, and parameter-efficient DDSP articulatory vocoder\nthat can synthesize speech from EMA, F0, and loudness. We incorporate several\ntechniques to solve the harmonics / noise imbalance problem, and add a\nmulti-resolution adversarial loss for better synthesis quality. Our model\nachieves a transcription word error rate (WER) of 6.67% and a mean opinion\nscore (MOS) of 3.74, with an improvement of 1.63% and 0.16 compared to the\nstate-of-the-art (SOTA) baseline. Our DDSP vocoder is 4.9x faster than the\nbaseline on CPU during inference, and can generate speech of comparable quality\nwith only 0.4M parameters, in contrast to the 9M parameters required by the\nSOTA.", "paper_summary_zh": "\u8a9e\u97f3\u8ecc\u8de1\uff0c\u4f8b\u5982\u96fb\u78c1\u95dc\u7bc0\u63cf\u8a18\u8853 (EMA)\uff0c\u63d0\u4f9b\u8072\u9053\u6ffe\u6ce2\u5668\u7684\u4f4e\u7dad\u5ea6\u8868\u793a\uff0c\u4e26\u5df2\u7528\u4f5c\u8a9e\u97f3\u5408\u6210\u7684\u81ea\u7136\u3001\u57fa\u790e\u7279\u5fb5\u3002\u53ef\u5fae\u5206\u6578\u4f4d\u8a0a\u865f\u8655\u7406 (DDSP) \u662f\u4e00\u7a2e\u53c3\u6578\u6548\u7387\u9ad8\u7684\u97f3\u8a0a\u5408\u6210\u67b6\u69cb\u3002\u56e0\u6b64\uff0c\u5c07\u4f4e\u7dad\u5ea6 EMA \u7279\u5fb5\u8207 DDSP \u6574\u5408\uff0c\u53ef\u4ee5\u5927\u5e45\u63d0\u5347\u8a9e\u97f3\u5408\u6210\u7684\u904b\u7b97\u6548\u7387\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u63d0\u51fa\u4e00\u500b\u5feb\u901f\u3001\u9ad8\u54c1\u8cea\u4e14\u53c3\u6578\u6548\u7387\u9ad8\u7684 DDSP \u95dc\u7bc0\u8a9e\u97f3\u7de8\u78bc\u5668\uff0c\u53ef\u5f9e EMA\u3001F0 \u548c\u97ff\u5ea6\u5408\u6210\u8a9e\u97f3\u3002\u6211\u5011\u7d50\u5408\u4e86\u591a\u7a2e\u6280\u8853\u4f86\u89e3\u6c7a\u8ae7\u6ce2/\u96dc\u8a0a\u4e0d\u5e73\u8861\u554f\u984c\uff0c\u4e26\u52a0\u5165\u4e00\u500b\u591a\u89e3\u6790\u5ea6\u5c0d\u6297\u640d\u5931\uff0c\u4ee5\u7372\u5f97\u66f4\u597d\u7684\u5408\u6210\u54c1\u8cea\u3002\u6211\u5011\u7684\u6a21\u578b\u5728\u8f49\u9304\u5b57\u5143\u932f\u8aa4\u7387 (WER) \u9054\u5230 6.67%\uff0c\u5e73\u5747\u610f\u898b\u5206\u6578 (MOS) \u9054\u5230 3.74\uff0c\u8207\u73fe\u6709\u6280\u8853 (SOTA) \u57fa\u6e96\u76f8\u6bd4\uff0c\u5206\u5225\u63d0\u5347\u4e86 1.63% \u548c 0.16\u3002\u6211\u5011\u7684 DDSP \u8a9e\u97f3\u7de8\u78bc\u5668\u5728\u63a8\u8ad6\u671f\u9593\u6bd4 CPU \u4e0a\u7684\u57fa\u6e96\u5feb 4.9 \u500d\uff0c\u4e14\u50c5\u4f7f\u7528 0.4M \u500b\u53c3\u6578\u5c31\u80fd\u7522\u751f\u54c1\u8cea\u76f8\u7576\u7684\u8a9e\u97f3\uff0c\u9019\u8207 SOTA \u6240\u9700\u7684 9M \u500b\u53c3\u6578\u5f62\u6210\u5c0d\u6bd4\u3002", "author": "Yisi Liu et.al.", "authors": "Yisi Liu, Bohan Yu, Drake Lin, Peter Wu, Cheol Jun Cho, Gopala Krishna Anumanchipalli", "id": "2409.02451v1", "paper_url": "http://arxiv.org/abs/2409.02451v1", "repo": "null"}}