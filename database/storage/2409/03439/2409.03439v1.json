{"2409.03439": {"publish_time": "2024-09-05", "title": "KiloBot: A Programming Language for Deploying Perception-Guided Industrial Manipulators at Scale", "paper_summary": "We would like industrial robots to handle unstructured environments with\ncameras and perception pipelines. In contrast to traditional industrial robots\nthat replay offline-crafted trajectories, online behavior planning is required\nfor these perception-guided industrial applications. Aside from perception and\nplanning algorithms, deploying perception-guided manipulators also requires\nsubstantial effort in integration. One approach is writing scripts in a\ntraditional language (such as Python) to construct the planning problem and\nperform integration with other algorithmic modules & external devices. While\nscripting in Python is feasible for a handful of robots and applications,\ndeploying perception-guided manipulation at scale (e.g., more than 10000 robot\nworkstations in over 2000 customer sites) becomes intractable. To resolve this\nchallenge, we propose a Domain-Specific Language (DSL) for perception-guided\nmanipulation applications. To scale up the deployment,our DSL provides: 1) an\neasily accessible interface to construct & solve a sub-class of Task and Motion\nPlanning (TAMP) problems that are important in practical applications; and 2) a\nmechanism to implement flexible control flow to perform integration and address\ncustomized requirements of distinct industrial application. Combined with an\nintuitive graphical programming frontend, our DSL is mainly used by machine\noperators without coding experience in traditional programming languages.\nWithin hours of training, operators are capable of orchestrating interesting\nsophisticated manipulation behaviors with our DSL. Extensive practical\ndeployments demonstrate the efficacy of our method.", "paper_summary_zh": "\u6211\u5011\u5e0c\u671b\u5de5\u696d\u6a5f\u5668\u4eba\u80fd\u900f\u904e\u76f8\u6a5f\u548c\u611f\u77e5\u7ba1\u9053\u4f86\u8655\u7406\u975e\u7d50\u69cb\u5316\u74b0\u5883\u3002\u8207\u50b3\u7d71\u5de5\u696d\u6a5f\u5668\u4eba\u91cd\u64ad\u96e2\u7dda\u88fd\u4f5c\u7684\u8ecc\u8de1\u4e0d\u540c\uff0c\u9019\u4e9b\u611f\u77e5\u5c0e\u5411\u7684\u5de5\u696d\u61c9\u7528\u9700\u8981\u7dda\u4e0a\u884c\u70ba\u898f\u5283\u3002\u9664\u4e86\u611f\u77e5\u548c\u898f\u5283\u6f14\u7b97\u6cd5\u5916\uff0c\u90e8\u7f72\u611f\u77e5\u5c0e\u5411\u7684\u6a5f\u68b0\u624b\u9084\u9700\u8981\u5927\u91cf\u7684\u6574\u5408\u5de5\u4f5c\u3002\u4e00\u7a2e\u65b9\u6cd5\u662f\u7528\u50b3\u7d71\u8a9e\u8a00\uff08\u4f8b\u5982 Python\uff09\u64b0\u5beb\u8173\u672c\uff0c\u4ee5\u5efa\u69cb\u898f\u5283\u554f\u984c\u4e26\u8207\u5176\u4ed6\u6f14\u7b97\u6cd5\u6a21\u7d44\u548c\u5916\u90e8\u88dd\u7f6e\u9032\u884c\u6574\u5408\u3002\u96d6\u7136\u7528 Python \u64b0\u5beb\u8173\u672c\u5c0d\u5c11\u6578\u6a5f\u5668\u4eba\u548c\u61c9\u7528\u7a0b\u5f0f\u4f86\u8aaa\u662f\u53ef\u884c\u7684\uff0c\u4f46\u8981\u5927\u898f\u6a21\u90e8\u7f72\u611f\u77e5\u5c0e\u5411\u7684\u6a5f\u68b0\u624b\uff08\u4f8b\u5982\uff0c\u8d85\u904e 2000 \u500b\u5ba2\u6236\u5730\u9ede\u7684 10000 \u500b\u6a5f\u5668\u4eba\u5de5\u4f5c\u7ad9\uff09\u5c31\u6703\u8b8a\u5f97\u96e3\u4ee5\u8655\u7406\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u6311\u6230\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u500b\u611f\u77e5\u5c0e\u5411\u6a5f\u68b0\u624b\u61c9\u7528\u7a0b\u5f0f\u7684\u7279\u5b9a\u9818\u57df\u8a9e\u8a00 (DSL)\u3002\u70ba\u4e86\u64f4\u5927\u90e8\u7f72\u898f\u6a21\uff0c\u6211\u5011\u7684 DSL \u63d0\u4f9b\uff1a1) \u4e00\u500b\u6613\u65bc\u5b58\u53d6\u7684\u4ecb\u9762\uff0c\u7528\u65bc\u5efa\u69cb\u548c\u89e3\u6c7a\u5728\u5be6\u969b\u61c9\u7528\u4e2d\u5f88\u91cd\u8981\u7684\u4efb\u52d9\u548c\u52d5\u4f5c\u898f\u5283 (TAMP) \u554f\u984c\u7684\u5b50\u985e\u5225\uff1b\u4ee5\u53ca 2) \u4e00\u500b\u5be6\u4f5c\u5f48\u6027\u63a7\u5236\u6d41\u7a0b\u7684\u6a5f\u5236\uff0c\u4ee5\u57f7\u884c\u6574\u5408\u4e26\u6eff\u8db3\u4e0d\u540c\u5de5\u696d\u61c9\u7528\u7a0b\u5f0f\u7684\u81ea\u8a02\u9700\u6c42\u3002\u6211\u5011\u7684 DSL \u7d50\u5408\u4e86\u4e00\u500b\u76f4\u89ba\u7684\u5716\u5f62\u5316\u7a0b\u5f0f\u8a2d\u8a08\u524d\u7aef\uff0c\u4e3b\u8981\u7531\u6c92\u6709\u50b3\u7d71\u7a0b\u5f0f\u8a9e\u8a00\u7de8\u78bc\u7d93\u9a57\u7684\u6a5f\u5668\u64cd\u4f5c\u54e1\u4f7f\u7528\u3002\u7d93\u904e\u6578\u5c0f\u6642\u7684\u8a13\u7df4\uff0c\u64cd\u4f5c\u54e1\u5c31\u80fd\u7528\u6211\u5011\u7684 DSL \u7de8\u6392\u51fa\u6709\u8da3\u4e14\u8907\u96dc\u7684\u6a5f\u68b0\u624b\u884c\u70ba\u3002\u5ee3\u6cdb\u7684\u5be6\u969b\u90e8\u7f72\u8b49\u660e\u4e86\u6211\u5011\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002", "author": "Wei Gao et.al.", "authors": "Wei Gao, Jingqiang Wang, Xinv Zhu, Jun Zhong, Yue Shen, Youshuang Ding", "id": "2409.03439v1", "paper_url": "http://arxiv.org/abs/2409.03439v1", "repo": "null"}}