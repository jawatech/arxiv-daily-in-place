{"2411.07066": {"publish_time": "2024-11-11", "title": "Zeroth-Order Adaptive Neuron Alignment Based Pruning without Re-Training", "paper_summary": "Network pruning is a set of computational techniques that aim to reduce a\ngiven model's computational cost by removing a subset of its parameters while\nhaving minimal impact on performance. Throughout the last decade, the most\nwidely used pruning paradigm has focused on pruning and re-training, which\nnowadays is inconvenient due to the vast amount of pre-trained models, which\nare in any case too expensive to re-train. In this paper, we exploit functional\ninformation from dense pre-trained models, i.e., their activations, to obtain\nsparse models that maximize the activations' alignment w.r.t. their\ncorresponding dense models. Hence, we propose \\textsc{NeuroAl}, a \\emph{top-up}\nalgorithm that can be used on top of any given pruning algorithm for LLMs, that\nmodifies the block-wise and row-wise sparsity ratios to maximize the\n\\emph{neuron alignment} among activations. Moreover, differently from existing\nmethods, our approach adaptively selects the best parameters for the block-wise\nand row-wise sparsity ratios w.r.t. to the model and the desired sparsity\n(given as input), and requires \\emph{no re-training}. We test our method on 4\ndifferent LLM families and 3 different sparsity ratios, showing how it\nconsistently outperforms the latest state-of-the-art techniques. The code is\navailable at https://github.com/eliacunegatti/NeuroAL.", "paper_summary_zh": "\u7db2\u8def\u526a\u679d\u662f\u4e00\u7d44\u8a08\u7b97\u6280\u8853\uff0c\u65e8\u5728\u900f\u904e\u79fb\u9664\u6a21\u578b\u53c3\u6578\u5b50\u96c6\u4f86\u964d\u4f4e\u7d66\u5b9a\u6a21\u578b\u7684\u8a08\u7b97\u6210\u672c\uff0c\u540c\u6642\u5c0d\u6548\u80fd\u7684\u5f71\u97ff\u964d\u5230\u6700\u4f4e\u3002\u5728\u904e\u53bb\u5341\u5e74\u4e2d\uff0c\u4f7f\u7528\u6700\u5ee3\u6cdb\u7684\u526a\u679d\u7bc4\u4f8b\u8457\u91cd\u65bc\u526a\u679d\u548c\u91cd\u65b0\u8a13\u7df4\uff0c\u9019\u5728\u73fe\u4eca\u7531\u65bc\u5927\u91cf\u7684\u9810\u8a13\u7df4\u6a21\u578b\u800c\u8b8a\u5f97\u4e0d\u65b9\u4fbf\uff0c\u800c\u9019\u4e9b\u6a21\u578b\u5728\u4efb\u4f55\u60c5\u6cc1\u4e0b\u90fd\u592a\u6602\u8cb4\u800c\u7121\u6cd5\u91cd\u65b0\u8a13\u7df4\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u5229\u7528\u7a20\u5bc6\u9810\u8a13\u7df4\u6a21\u578b\u4e2d\u7684\u529f\u80fd\u8cc7\u8a0a\uff0c\u5373\u5b83\u5011\u7684\u6d3b\u5316\uff0c\u4ee5\u53d6\u5f97\u7a00\u758f\u6a21\u578b\uff0c\u6700\u5927\u5316\u6d3b\u5316\u8207\u5176\u5c0d\u61c9\u7a20\u5bc6\u6a21\u578b\u7684\u5c0d\u9f4a\u3002\u56e0\u6b64\uff0c\u6211\u5011\u63d0\u51fa \\textsc{NeuroAl}\uff0c\u4e00\u7a2e\u53ef\u4ee5\u91dd\u5c0d\u4efb\u4f55\u7d66\u5b9a\u7684 LLM \u526a\u679d\u6f14\u7b97\u6cd5\u4f7f\u7528\u7684 \\emph{\u88dc\u5145} \u6f14\u7b97\u6cd5\uff0c\u5b83\u4fee\u6539\u5340\u584a\u548c\u5217\u7684\u7a00\u758f\u7387\u4ee5\u6700\u5927\u5316\u6d3b\u5316\u4e4b\u9593\u7684 \\emph{\u795e\u7d93\u5143\u5c0d\u9f4a}\u3002\u6b64\u5916\uff0c\u8207\u73fe\u6709\u65b9\u6cd5\u4e0d\u540c\uff0c\u6211\u5011\u7684\u505a\u6cd5\u81ea\u9069\u61c9\u5730\u91dd\u5c0d\u5340\u584a\u548c\u5217\u7684\u7a00\u758f\u7387\u9078\u64c7\u6700\u4f73\u53c3\u6578\uff0c\u4e14\u8207\u6a21\u578b\u548c\u6240\u9700\u7684\u7a00\u758f\u7387\uff08\u4f5c\u70ba\u8f38\u5165\u63d0\u4f9b\uff09\u6709\u95dc\uff0c\u4e26\u4e14\u9700\u8981 \\emph{\u7121\u91cd\u65b0\u8a13\u7df4}\u3002\u6211\u5011\u5728 4 \u500b\u4e0d\u540c\u7684 LLM \u7cfb\u5217\u548c 3 \u500b\u4e0d\u540c\u7684\u7a00\u758f\u7387\u4e0a\u6e2c\u8a66\u6211\u5011\u7684\u505a\u6cd5\uff0c\u986f\u793a\u5b83\u5982\u4f55\u6301\u7e8c\u512a\u65bc\u6700\u65b0\u7684\u6700\u5148\u9032\u6280\u8853\u3002\u7a0b\u5f0f\u78bc\u53ef\u5728 https://github.com/eliacunegatti/NeuroAL \u53d6\u5f97\u3002", "author": "Elia Cunegatti et.al.", "authors": "Elia Cunegatti, Leonardo Lucio Custode, Giovanni Iacca", "id": "2411.07066v1", "paper_url": "http://arxiv.org/abs/2411.07066v1", "repo": "https://github.com/eliacunegatti/neuroal"}}