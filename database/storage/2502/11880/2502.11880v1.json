{"2502.11880": {"publish_time": "2025-02-17", "title": "Bitnet.cpp: Efficient Edge Inference for Ternary LLMs", "paper_summary": "The advent of 1-bit large language models (LLMs), led by BitNet b1.58, has\nspurred interest in ternary LLMs. Despite this, research and practical\napplications focusing on efficient edge inference for ternary LLMs remain\nscarce. To bridge this gap, we introduce Bitnet.cpp, an inference system\noptimized for BitNet b1.58 and ternary LLMs. Given that mixed-precision matrix\nmultiplication (mpGEMM) constitutes the bulk of inference time in ternary LLMs,\nBitnet.cpp incorporates a novel mpGEMM library to facilitate\nsub-2-bits-per-weight, efficient and lossless inference. The library features\ntwo core solutions: Ternary Lookup Table (TL), which addresses spatial\ninefficiencies of previous bit-wise methods, and Int2 with a Scale (I2_S),\nwhich ensures lossless edge inference, both enabling high-speed inference. Our\nexperiments show that Bitnet.cpp achieves up to a 6.25x increase in speed over\nfull-precision baselines and up to 2.32x over low-bit baselines, setting new\nbenchmarks in the field. Additionally, we expand TL to element-wise lookup\ntable (ELUT) for low-bit LLMs in the appendix, presenting both theoretical and\nempirical evidence of its considerable potential. Bitnet.cpp is publicly\navailable at https://github.com/microsoft/BitNet/tree/paper , offering a\nsophisticated solution for the efficient and practical deployment of edge LLMs.", "paper_summary_zh": "\u96a8\u8457\u7531 BitNet b1.58 \u9818\u5148\u7684 1 \u4f4d\u5143\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u51fa\u73fe\uff0c\u5df2\u6fc0\u767c\u4e86\u5c0d\u4e09\u5143 LLM \u7684\u8208\u8da3\u3002\u5118\u7ba1\u5982\u6b64\uff0c\u5c08\u6ce8\u65bc\u4e09\u5143 LLM \u7684\u9ad8\u6548\u80fd\u908a\u7de3\u63a8\u8ad6\u7684\u7814\u7a76\u548c\u5be6\u969b\u61c9\u7528\u4ecd\u7136\u5f88\u5c11\u898b\u3002\u70ba\u4e86\u5f4c\u88dc\u9019\u500b\u5dee\u8ddd\uff0c\u6211\u5011\u5f15\u5165\u4e86 Bitnet.cpp\uff0c\u9019\u662f\u4e00\u500b\u91dd\u5c0d BitNet b1.58 \u548c\u4e09\u5143 LLM \u6700\u4f73\u5316\u7684\u63a8\u8ad6\u7cfb\u7d71\u3002\u7531\u65bc\u6df7\u5408\u7cbe\u5ea6\u77e9\u9663\u4e58\u6cd5 (mpGEMM) \u69cb\u6210\u4e09\u5143 LLM \u4e2d\u63a8\u8ad6\u6642\u9593\u7684\u5927\u90e8\u5206\uff0cBitnet.cpp \u7d50\u5408\u4e86\u4e00\u500b\u65b0\u7a4e\u7684 mpGEMM \u51fd\u5f0f\u5eab\uff0c\u4ee5\u5229\u65bc\u6bcf\u6b0a\u91cd\u4f4e\u65bc 2 \u4f4d\u5143\u3001\u9ad8\u6548\u80fd\u4e14\u7121\u640d\u5931\u7684\u63a8\u8ad6\u3002\u8a72\u51fd\u5f0f\u5eab\u5177\u6709\u5169\u500b\u6838\u5fc3\u89e3\u6c7a\u65b9\u6848\uff1a\u4e09\u5143\u67e5\u8a62\u8868 (TL)\uff0c\u5b83\u89e3\u6c7a\u4e86\u5148\u524d\u9010\u4f4d\u5143\u65b9\u6cd5\u7684\u7a7a\u9593\u4f4e\u6548\u7387\uff0c\u4ee5\u53ca\u5177\u6709\u6bd4\u4f8b\u7684 Int2 (I2_S)\uff0c\u5b83\u78ba\u4fdd\u7121\u640d\u5931\u7684\u908a\u7de3\u63a8\u8ad6\uff0c\u5169\u8005\u90fd\u80fd\u5be6\u73fe\u9ad8\u901f\u63a8\u8ad6\u3002\u6211\u5011\u7684\u5be6\u9a57\u986f\u793a\uff0cBitnet.cpp \u7684\u901f\u5ea6\u6bd4\u5168\u7cbe\u5ea6\u7684\u57fa\u6e96\u5feb\u4e86 6.25 \u500d\uff0c\u6bd4\u4f4e\u4f4d\u5143\u57fa\u6e96\u5feb\u4e86 2.32 \u500d\uff0c\u6a39\u7acb\u4e86\u8a72\u9818\u57df\u7684\u65b0\u57fa\u6e96\u3002\u6b64\u5916\uff0c\u6211\u5011\u5728\u9644\u9304\u4e2d\u5c07 TL \u64f4\u5145\u5230\u9010\u5143\u7d20\u67e5\u8a62\u8868 (ELUT) \u4ee5\u7528\u65bc\u4f4e\u4f4d\u5143 LLM\uff0c\u4e26\u63d0\u51fa\u5176\u5de8\u5927\u6f5b\u529b\u7684\u7406\u8ad6\u548c\u5be6\u8b49\u8b49\u64da\u3002Bitnet.cpp \u5df2\u516c\u958b\u65bc https://github.com/microsoft/BitNet/tree/paper\uff0c\u63d0\u4f9b\u4e86\u4e00\u500b\u7cbe\u5bc6\u7684\u89e3\u6c7a\u65b9\u6848\uff0c\u7528\u65bc\u908a\u7de3 LLM \u7684\u9ad8\u6548\u80fd\u548c\u5be6\u969b\u90e8\u7f72\u3002", "author": "Jinheng Wang et.al.", "authors": "Jinheng Wang, Hansong Zhou, Ting Song, Shijie Cao, Yan Xia, Ting Cao, Jianyu Wei, Shuming Ma, Hongyu Wang, Furu Wei", "id": "2502.11880v1", "paper_url": "http://arxiv.org/abs/2502.11880v1", "repo": "null"}}