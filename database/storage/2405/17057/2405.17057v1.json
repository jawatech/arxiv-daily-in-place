{"2405.17057": {"publish_time": "2024-05-27", "title": "ReflectionCoder: Learning from Reflection Sequence for Enhanced One-off Code Generation", "paper_summary": "Code generation plays a crucial role in various tasks, such as code\nauto-completion and mathematical reasoning. Previous work has proposed numerous\nmethods to enhance code generation performance, including integrating feedback\nfrom the compiler. Inspired by this, we present ReflectionCoder, a novel\napproach that effectively leverages reflection sequences constructed by\nintegrating compiler feedback to improve one-off code generation performance.\nFurthermore, we propose reflection self-distillation and dynamically masked\ndistillation to effectively utilize these reflection sequences. Extensive\nexperiments on three benchmarks, i.e., HumanEval (+), MBPP (+), and MultiPl-E,\ndemonstrate that models fine-tuned with our method achieve state-of-the-art\nperformance. Notably, ReflectionCoder-DeepSeek-Coder-33B reaches pass@1 of 82.9\n(76.8) on HumanEval (+) and 84.1 (72.0) on MBPP (+), on par with GPT-3.5-Turbo\nand Claude-3-opus, and surpasses early GPT-4. Beyond the code domain, we\nbelieve this approach can benefit other domains that focus on final results and\nrequire long reasoning paths. Code and data are available at\nhttps://github.com/SenseLLM/ReflectionCoder.", "paper_summary_zh": "\u7a0b\u5f0f\u78bc\u751f\u6210\u5728\u5404\u7a2e\u4efb\u52d9\u4e2d\u626e\u6f14\u81f3\u95dc\u91cd\u8981\u7684\u89d2\u8272\uff0c\u4f8b\u5982\u7a0b\u5f0f\u78bc\u81ea\u52d5\u5b8c\u6210\u548c\u6578\u5b78\u63a8\u7406\u3002\u5148\u524d\u7684\u7814\u7a76\u5df2\u7d93\u63d0\u51fa\u8a31\u591a\u65b9\u6cd5\u4f86\u589e\u5f37\u7a0b\u5f0f\u78bc\u751f\u6210\u6548\u80fd\uff0c\u5305\u62ec\u6574\u5408\u7de8\u8b6f\u5668\u7684\u56de\u994b\u3002\u53d7\u5230\u6b64\u555f\u767c\uff0c\u6211\u5011\u63d0\u51fa ReflectionCoder\uff0c\u4e00\u7a2e\u5275\u65b0\u7684\u65b9\u6cd5\uff0c\u5b83\u6709\u6548\u5730\u5229\u7528\u6574\u5408\u7de8\u8b6f\u5668\u56de\u994b\u6240\u5efa\u69cb\u7684\u53cd\u601d\u5e8f\u5217\u4f86\u63d0\u5347\u4e00\u6b21\u6027\u7a0b\u5f0f\u78bc\u751f\u6210\u6548\u80fd\u3002\u6b64\u5916\uff0c\u6211\u5011\u63d0\u51fa\u53cd\u601d\u81ea\u6211\u8403\u53d6\u548c\u52d5\u614b\u906e\u7f69\u8403\u53d6\u4f86\u6709\u6548\u5229\u7528\u9019\u4e9b\u53cd\u601d\u5e8f\u5217\u3002\u5728\u4e09\u500b\u57fa\u6e96 HumanEval (+)\u3001MBPP (+) \u548c MultiPl-E \u4e0a\u7684\u5ee3\u6cdb\u5be6\u9a57\u8b49\u660e\uff0c\u4f7f\u7528\u6211\u5011\u7684\u65b9\u6cd5\u5fae\u8abf\u7684\u6a21\u578b\u9054\u5230\u4e86\u6700\u5148\u9032\u7684\u6548\u80fd\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cReflectionCoder-DeepSeek-Coder-33B \u5728 HumanEval (+) \u4e0a\u9054\u5230 82.9 (76.8) \u7684 pass@1\uff0c\u5728 MBPP (+) \u4e0a\u9054\u5230 84.1 (72.0)\uff0c\u8207 GPT-3.5-Turbo \u548c Claude-3-opus \u76f8\u7576\uff0c\u4e26\u8d85\u8d8a\u65e9\u671f\u7684 GPT-4\u3002\u9664\u4e86\u7a0b\u5f0f\u78bc\u9818\u57df\u4e4b\u5916\uff0c\u6211\u5011\u76f8\u4fe1\u9019\u7a2e\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u5c08\u6ce8\u65bc\u6700\u7d42\u7d50\u679c\u4e14\u9700\u8981\u9577\u6642\u9593\u63a8\u7406\u8def\u5f91\u7684\u5176\u4ed6\u9818\u57df\u53d7\u76ca\u3002\u7a0b\u5f0f\u78bc\u548c\u8cc7\u6599\u53ef\u5728 https://github.com/SenseLLM/ReflectionCoder \u53d6\u5f97\u3002", "author": "Houxing Ren et.al.", "authors": "Houxing Ren, Mingjie Zhan, Zhongyuan Wu, Aojun Zhou, Junting Pan, Hongsheng Li", "id": "2405.17057v1", "paper_url": "http://arxiv.org/abs/2405.17057v1", "repo": "https://github.com/sensellm/reflectioncoder"}}