{"2409.11190": {"publish_time": "2024-09-17", "title": "SuperCoder2.0: Technical Report on Exploring the feasibility of LLMs as Autonomous Programmer", "paper_summary": "We present SuperCoder2.0, an advanced autonomous system designed to enhance\nsoftware development through artificial intelligence. The system combines an\nAI-native development approach with intelligent agents to enable fully\nautonomous coding. Key focus areas include a retry mechanism with error output\ntraceback, comprehensive code rewriting and replacement using Abstract Syntax\nTree (ast) parsing to minimize linting issues, code embedding technique for\nretrieval-augmented generation, and a focus on localizing methods for\nproblem-solving rather than identifying specific line numbers. The methodology\nemploys a three-step hierarchical search space reduction approach for code base\nnavigation and bug localization:utilizing Retrieval Augmented Generation (RAG)\nand a Repository File Level Map to identify candidate files, (2) narrowing down\nto the most relevant files using a File Level Schematic Map, and (3) extracting\n'relevant locations' within these files. Code editing is performed through a\ntwo-part module comprising CodeGeneration and CodeEditing, which generates\nmultiple solutions at different temperature values and replaces entire methods\nor classes to maintain code integrity. A feedback loop executes\nrepository-level test cases to validate and refine solutions. Experiments\nconducted on the SWE-bench Lite dataset demonstrate SuperCoder2.0's\neffectiveness, achieving correct file localization in 84.33% of cases within\nthe top 5 candidates and successfully resolving 34% of test instances. This\nperformance places SuperCoder2.0 fourth globally on the SWE-bench leaderboard.\nThe system's ability to handle diverse repositories and problem types\nhighlights its potential as a versatile tool for autonomous software\ndevelopment. Future work will focus on refining the code editing process and\nexploring advanced embedding models for improved natural language to code\nmapping.", "paper_summary_zh": "<paragraph>\u6211\u5011\u63d0\u51fa SuperCoder2.0\uff0c\u4e00\u500b\u5148\u9032\u7684\u81ea\u4e3b\u7cfb\u7d71\uff0c\u65e8\u5728\u900f\u904e\u4eba\u5de5\u667a\u6167\u63d0\u5347\u8edf\u9ad4\u958b\u767c\u3002\u8a72\u7cfb\u7d71\u7d50\u5408\u4e86\u539f\u751f AI \u958b\u767c\u65b9\u6cd5\u8207\u667a\u6167\u4ee3\u7406\u4eba\uff0c\u4ee5\u5be6\u73fe\u5b8c\u5168\u81ea\u4e3b\u7de8\u78bc\u3002\u4e3b\u8981\u7684\u91cd\u9ede\u9818\u57df\u5305\u62ec\u5177\u6709\u932f\u8aa4\u8f38\u51fa\u8ffd\u8e64\u7684\u91cd\u8a66\u6a5f\u5236\u3001\u4f7f\u7528\u62bd\u8c61\u8a9e\u6cd5\u6a39 (ast) \u89e3\u6790\u7684\u5168\u9762\u7a0b\u5f0f\u78bc\u6539\u5beb\u548c\u66ff\u63db\uff0c\u4ee5\u6700\u5c0f\u5316\u7a0b\u5f0f\u78bc\u6aa2\u67e5\u554f\u984c\u3001\u7528\u65bc\u6aa2\u7d22\u64f4\u5145\u7522\u751f\u6280\u8853\u7684\u7a0b\u5f0f\u78bc\u5d4c\u5165\u6280\u8853\uff0c\u4ee5\u53ca\u5c08\u6ce8\u65bc\u5b9a\u4f4d\u65b9\u6cd5\u4ee5\u89e3\u6c7a\u554f\u984c\uff0c\u800c\u975e\u8b58\u5225\u7279\u5b9a\u884c\u865f\u3002\u8a72\u65b9\u6cd5\u63a1\u7528\u4e09\u6b65\u9a5f\u968e\u5c64\u5f0f\u641c\u5c0b\u7a7a\u9593\u7e2e\u6e1b\u65b9\u6cd5\uff0c\u7528\u65bc\u7a0b\u5f0f\u78bc\u5eab\u5c0e\u89bd\u548c\u932f\u8aa4\u5b9a\u4f4d\uff1a\u5229\u7528\u6aa2\u7d22\u64f4\u5145\u7522\u751f (RAG) \u548c\u5132\u5b58\u5eab\u6a94\u6848\u5c64\u7d1a\u5c0d\u61c9\uff0c\u4ee5\u8b58\u5225\u5019\u9078\u6a94\u6848\uff0c(2) \u4f7f\u7528\u6a94\u6848\u5c64\u7d1a\u6982\u89c0\u5c0d\u61c9\u7e2e\u5c0f\u7bc4\u570d\u81f3\u6700\u76f8\u95dc\u7684\u6a94\u6848\uff0c\u4ee5\u53ca (3) \u5f9e\u9019\u4e9b\u6a94\u6848\u4e2d\u64f7\u53d6\u300c\u76f8\u95dc\u4f4d\u7f6e\u300d\u3002\u7a0b\u5f0f\u78bc\u7de8\u8f2f\u900f\u904e\u5305\u542b\u7a0b\u5f0f\u78bc\u7522\u751f\u548c\u7a0b\u5f0f\u78bc\u7de8\u8f2f\u7684\u5169\u90e8\u5206\u6a21\u7d44\u57f7\u884c\uff0c\u8a72\u6a21\u7d44\u6703\u5728\u4e0d\u540c\u7684\u6eab\u5ea6\u503c\u7522\u751f\u591a\u91cd\u89e3\uff0c\u4e26\u66ff\u63db\u6574\u500b\u65b9\u6cd5\u6216\u985e\u5225\u4ee5\u7dad\u8b77\u7a0b\u5f0f\u78bc\u5b8c\u6574\u6027\u3002\u56de\u994b\u8ff4\u8def\u6703\u57f7\u884c\u5132\u5b58\u5eab\u5c64\u7d1a\u6e2c\u8a66\u6848\u4f8b\uff0c\u4ee5\u9a57\u8b49\u4e26\u6539\u5584\u89e3\u3002\u5728 SWE-bench Lite \u8cc7\u6599\u96c6\u4e0a\u57f7\u884c\u7684\u5be6\u9a57\u8b49\u660e\u4e86 SuperCoder2.0 \u7684\u6548\u80fd\uff0c\u5728 84.33% \u7684\u6848\u4f8b\u4e2d\uff0c\u65bc\u524d 5 \u540d\u5019\u9078\u8005\u4e2d\u9054\u6210\u6b63\u78ba\u6a94\u6848\u5b9a\u4f4d\uff0c\u4e26\u6210\u529f\u89e3\u6c7a 34% \u7684\u6e2c\u8a66\u6848\u4f8b\u3002\u6b64\u6548\u80fd\u8b93 SuperCoder2.0 \u5728 SWE-bench \u6392\u884c\u699c\u4e0a\u6392\u540d\u5168\u7403\u7b2c\u56db\u3002\u8a72\u7cfb\u7d71\u8655\u7406\u4e0d\u540c\u5132\u5b58\u5eab\u548c\u554f\u984c\u985e\u578b\u7684\u80fd\u529b\uff0c\u7a81\u986f\u4e86\u5176\u4f5c\u70ba\u81ea\u4e3b\u8edf\u9ad4\u958b\u767c\u901a\u7528\u5de5\u5177\u7684\u6f5b\u529b\u3002\u672a\u4f86\u7684\u7814\u7a76\u5c07\u5c08\u6ce8\u65bc\u6539\u5584\u7a0b\u5f0f\u78bc\u7de8\u8f2f\u6d41\u7a0b\uff0c\u4e26\u63a2\u7d22\u9032\u968e\u5d4c\u5165\u6a21\u578b\uff0c\u4ee5\u63d0\u5347\u81ea\u7136\u8a9e\u8a00\u5c0d\u7a0b\u5f0f\u78bc\u7684\u5c0d\u61c9\u3002</paragraph>", "author": "Anmol Gautam et.al.", "authors": "Anmol Gautam, Kishore Kumar, Adarsh Jha, Mukunda NS, Ishaan Bhola", "id": "2409.11190v1", "paper_url": "http://arxiv.org/abs/2409.11190v1", "repo": "null"}}