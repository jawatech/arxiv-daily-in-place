{"2404.19146": {"publish_time": "2024-04-29", "title": "Automated Construction of Theme-specific Knowledge Graphs", "paper_summary": "Despite widespread applications of knowledge graphs (KGs) in various tasks\nsuch as question answering and intelligent conversational systems, existing KGs\nface two major challenges: information granularity and deficiency in\ntimeliness. These hinder considerably the retrieval and analysis of in-context,\nfine-grained, and up-to-date knowledge from KGs, particularly in highly\nspecialized themes (e.g., specialized scientific research) and rapidly evolving\ncontexts (e.g., breaking news or disaster tracking). To tackle such challenges,\nwe propose a theme-specific knowledge graph (i.e., ThemeKG), a KG constructed\nfrom a theme-specific corpus, and design an unsupervised framework for ThemeKG\nconstruction (named TKGCon). The framework takes raw theme-specific corpus and\ngenerates a high-quality KG that includes salient entities and relations under\nthe theme. Specifically, we start with an entity ontology of the theme from\nWikipedia, based on which we then generate candidate relations by Large\nLanguage Models (LLMs) to construct a relation ontology. To parse the documents\nfrom the theme corpus, we first map the extracted entity pairs to the ontology\nand retrieve the candidate relations. Finally, we incorporate the context and\nontology to consolidate the relations for entity pairs. We observe that\ndirectly prompting GPT-4 for theme-specific KG leads to inaccurate entities\n(such as \"two main types\" as one entity in the query result) and unclear (such\nas \"is\", \"has\") or wrong relations (such as \"have due to\", \"to start\"). In\ncontrast, by constructing the theme-specific KG step by step, our model\noutperforms GPT-4 and could consistently identify accurate entities and\nrelations. Experimental results also show that our framework excels in\nevaluations compared with various KG construction baselines.", "paper_summary_zh": "\u5118\u7ba1\u77e5\u8b58\u5716\u8b5c (KG) \u5ee3\u6cdb\u61c9\u7528\u65bc\u5404\u7a2e\u4efb\u52d9\uff0c\u4f8b\u5982\u554f\u7b54\u548c\u667a\u6167\u5c0d\u8a71\u7cfb\u7d71\uff0c\u73fe\u6709\u7684 KG \u4ecd\u9762\u81e8\u5169\u9805\u91cd\u5927\u6311\u6230\uff1a\u8cc7\u8a0a\u7c92\u5ea6\u548c\u5373\u6642\u6027\u4e0d\u8db3\u3002\u9019\u4e9b\u554f\u984c\u56b4\u91cd\u963b\u7919\u4e86\u5f9e KG \u4e2d\u64f7\u53d6\u548c\u5206\u6790\u60c5\u5883\u4e2d\u7684\u3001\u7d30\u7c92\u5ea6\u7684\u548c\u6700\u65b0\u7684\u77e5\u8b58\uff0c\u7279\u5225\u662f\u5728\u9ad8\u5ea6\u5c08\u696d\u7684\u4e3b\u984c\uff08\u4f8b\u5982\uff0c\u5c08\u696d\u79d1\u5b78\u7814\u7a76\uff09\u548c\u5feb\u901f\u8b8a\u5316\u7684\u60c5\u5883\uff08\u4f8b\u5982\uff0c\u7a81\u767c\u65b0\u805e\u6216\u707d\u96e3\u8ffd\u8e64\uff09\u4e2d\u3002\u70ba\u4e86\u61c9\u5c0d\u9019\u4e9b\u6311\u6230\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u500b\u4e3b\u984c\u7279\u5b9a\u77e5\u8b58\u5716\u8b5c\uff08\u4ea6\u5373 ThemeKG\uff09\uff0c\u4e00\u500b\u7531\u4e3b\u984c\u7279\u5b9a\u8a9e\u6599\u5eab\u5efa\u69cb\u7684 KG\uff0c\u4e26\u8a2d\u8a08\u4e86\u4e00\u500b\u975e\u76e3\u7763\u5f0f\u6846\u67b6 TKGCon\uff0c\u7528\u65bc\u5efa\u69cb ThemeKG\u3002\u6b64\u6846\u67b6\u63a1\u7528\u539f\u59cb\u7684\u4e3b\u984c\u7279\u5b9a\u8a9e\u6599\u5eab\uff0c\u4e26\u7522\u751f\u4e00\u500b\u9ad8\u54c1\u8cea\u7684 KG\uff0c\u5176\u4e2d\u5305\u542b\u8a72\u4e3b\u984c\u4e0b\u7684\u986f\u8457\u5be6\u9ad4\u548c\u95dc\u4fc2\u3002\u5177\u9ad4\u4f86\u8aaa\uff0c\u6211\u5011\u5f9e\u7dad\u57fa\u767e\u79d1\u4e2d\u63d0\u53d6\u8a72\u4e3b\u984c\u7684\u5be6\u9ad4\u672c\u4f53\uff0c\u7136\u5f8c\u6839\u64da\u8a72\u672c\u4f53\uff0c\u6211\u5011\u518d\u7531\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u7522\u751f\u5019\u9078\u95dc\u4fc2\uff0c\u4ee5\u5efa\u69cb\u95dc\u4fc2\u672c\u4f53\u3002\u70ba\u4e86\u89e3\u6790\u4e3b\u984c\u8a9e\u6599\u5eab\u4e2d\u7684\u6587\u4ef6\uff0c\u6211\u5011\u9996\u5148\u5c07\u63d0\u53d6\u7684\u5be6\u9ad4\u5c0d\u61c9\u5230\u672c\u4f53\uff0c\u4e26\u64f7\u53d6\u5019\u9078\u95dc\u4fc2\u3002\u6700\u5f8c\uff0c\u6211\u5011\u7d50\u5408\u60c5\u5883\u548c\u672c\u4f53\uff0c\u4ee5\u5408\u4f75\u5be6\u9ad4\u5c0d\u7684\u95dc\u4fc2\u3002\u6211\u5011\u89c0\u5bdf\u5230\uff0c\u76f4\u63a5\u63d0\u793a GPT-4 \u7522\u751f\u4e3b\u984c\u7279\u5b9a KG \u6703\u5c0e\u81f4\u4e0d\u6e96\u78ba\u7684\u5be6\u9ad4\uff08\u4f8b\u5982\uff0c\u67e5\u8a62\u7d50\u679c\u4e2d\u5c07\u300c\u5169\u500b\u4e3b\u8981\u985e\u578b\u300d\u8996\u70ba\u4e00\u500b\u5be6\u9ad4\uff09\uff0c\u4ee5\u53ca\u4e0d\u660e\u78ba\uff08\u4f8b\u5982\uff0c\u300c\u662f\u300d\u3001\u300c\u6709\u300d\uff09\u6216\u932f\u8aa4\u7684\u95dc\u4fc2\uff08\u4f8b\u5982\uff0c\u300c\u6b78\u56e0\u65bc\u300d\u3001\u300c\u958b\u59cb\u300d\uff09\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u900f\u904e\u9010\u6b65\u5efa\u69cb\u4e3b\u984c\u7279\u5b9a KG\uff0c\u6211\u5011\u7684\u6a21\u578b\u512a\u65bc GPT-4\uff0c\u4e26\u80fd\u6301\u7e8c\u8b58\u5225\u6e96\u78ba\u7684\u5be6\u9ad4\u548c\u95dc\u4fc2\u3002\u5be6\u9a57\u7d50\u679c\u4e5f\u986f\u793a\uff0c\u8207\u5404\u7a2e KG \u5efa\u69cb\u57fa\u6e96\u76f8\u6bd4\uff0c\u6211\u5011\u7684\u6846\u67b6\u5728\u8a55\u4f30\u4e2d\u8868\u73fe\u51fa\u8272\u3002", "author": "Linyi Ding et.al.", "authors": "Linyi Ding, Sizhe Zhou, Jinfeng Xiao, Jiawei Han", "id": "2404.19146v1", "paper_url": "http://arxiv.org/abs/2404.19146v1", "repo": "null"}}