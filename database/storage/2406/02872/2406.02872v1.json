{"2406.02872": {"publish_time": "2024-06-05", "title": "Combinatorial Optimization with Automated Graph Neural Networks", "paper_summary": "In recent years, graph neural networks (GNNs) have become increasingly\npopular for solving NP-hard combinatorial optimization (CO) problems, such as\nmaximum cut and maximum independent set. The core idea behind these methods is\nto represent a CO problem as a graph and then use GNNs to learn the node/graph\nembedding with combinatorial information. Although these methods have achieved\npromising results, given a specific CO problem, the design of GNN architectures\nstill requires heavy manual work with domain knowledge. Existing automated GNNs\nare mostly focused on traditional graph learning problems, which is\ninapplicable to solving NP-hard CO problems. To this end, we present a new\nclass of \\textbf{AUTO}mated \\textbf{G}NNs for solving \\textbf{NP}-hard\nproblems, namely \\textbf{AutoGNP}. We represent CO problems by GNNs and focus\non two specific problems, i.e., mixed integer linear programming and quadratic\nunconstrained binary optimization. The idea of AutoGNP is to use graph neural\narchitecture search algorithms to automatically find the best GNNs for a given\nNP-hard combinatorial optimization problem. Compared with existing graph neural\narchitecture search algorithms, AutoGNP utilizes two-hop operators in the\narchitecture search space. Moreover, AutoGNP utilizes simulated annealing and a\nstrict early stopping policy to avoid local optimal solutions. Empirical\nresults on benchmark combinatorial problems demonstrate the superiority of our\nproposed model.", "paper_summary_zh": "<paragraph>\u8fd1\u5e74\u4f86\uff0c\u5716\u795e\u7d93\u7db2\u8def (GNN) \u5c0d\u65bc\u89e3\u6c7a NP \u96e3\u7d44\u5408\u6700\u4f73\u5316 (CO) \u554f\u984c\uff08\u5982\u6700\u5927\u5272\u548c\u6700\u5927\u7368\u7acb\u96c6\uff09\u8b8a\u5f97\u8d8a\u4f86\u8d8a\u53d7\u6b61\u8fce\u3002\u9019\u4e9b\u65b9\u6cd5\u80cc\u5f8c\u7684\u4e3b\u8981\u6982\u5ff5\u662f\u5c07 CO \u554f\u984c\u8868\u793a\u70ba\u5716\u5f62\uff0c\u7136\u5f8c\u4f7f\u7528 GNN \u5b78\u7fd2\u5177\u6709\u7d44\u5408\u8cc7\u8a0a\u7684\u7bc0\u9ede/\u5716\u5f62\u5d4c\u5165\u3002\u5118\u7ba1\u9019\u4e9b\u65b9\u6cd5\u5df2\u53d6\u5f97\u4ee4\u4eba\u6eff\u610f\u7684\u7d50\u679c\uff0c\u4f46\u91dd\u5c0d\u7279\u5b9a CO \u554f\u984c\uff0cGNN \u67b6\u69cb\u7684\u8a2d\u8a08\u4ecd\u9700\u8981\u5927\u91cf\u5177\u5099\u9818\u57df\u77e5\u8b58\u7684\u624b\u52d5\u5de5\u4f5c\u3002\u73fe\u6709\u7684\u81ea\u52d5\u5316 GNN \u4e3b\u8981\u96c6\u4e2d\u65bc\u50b3\u7d71\u5716\u5f62\u5b78\u7fd2\u554f\u984c\uff0c\u9019\u4e0d\u9069\u7528\u65bc\u89e3\u6c7a NP \u96e3 CO \u554f\u984c\u3002\u70ba\u6b64\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u985e\u65b0\u7684\u7528\u65bc\u89e3\u6c7a NP \u96e3\u554f\u984c\u7684\u81ea\u52d5\u5316 GNN\uff0c\u5373 AutoGNP\u3002\u6211\u5011\u4f7f\u7528 GNN \u8868\u793a CO \u554f\u984c\uff0c\u4e26\u5c08\u6ce8\u65bc\u5169\u500b\u7279\u5b9a\u554f\u984c\uff0c\u5373\u6df7\u5408\u6574\u6578\u7dda\u6027\u898f\u5283\u548c\u4e8c\u6b21\u7121\u7d04\u675f\u4e8c\u5143\u6700\u4f73\u5316\u3002AutoGNP \u7684\u6982\u5ff5\u662f\u4f7f\u7528\u5716\u5f62\u795e\u7d93\u67b6\u69cb\u641c\u5c0b\u6f14\u7b97\u6cd5\u81ea\u52d5\u70ba\u7d66\u5b9a\u7684 NP \u96e3\u7d44\u5408\u6700\u4f73\u5316\u554f\u984c\u627e\u51fa\u6700\u4f73 GNN\u3002\u8207\u73fe\u6709\u7684\u5716\u5f62\u795e\u7d93\u67b6\u69cb\u641c\u5c0b\u6f14\u7b97\u6cd5\u76f8\u6bd4\uff0cAutoGNP \u5728\u67b6\u69cb\u641c\u5c0b\u7a7a\u9593\u4e2d\u4f7f\u7528\u5169\u8df3\u904b\u7b97\u5b50\u3002\u6b64\u5916\uff0cAutoGNP \u5229\u7528\u6a21\u64ec\u9000\u706b\u548c\u56b4\u683c\u7684\u63d0\u524d\u505c\u6b62\u7b56\u7565\u4f86\u907f\u514d\u5c40\u90e8\u6700\u4f73\u89e3\u3002\u57fa\u6e96\u7d44\u5408\u554f\u984c\u7684\u7d93\u9a57\u7d50\u679c\u8b49\u660e\u4e86\u6211\u5011\u63d0\u51fa\u7684\u6a21\u578b\u7684\u512a\u8d8a\u6027\u3002</paragraph>", "author": "Yang Liu et.al.", "authors": "Yang Liu, Peng Zhang, Yang Gao, Chuan Zhou, Zhao Li, Hongyang Chen", "id": "2406.02872v1", "paper_url": "http://arxiv.org/abs/2406.02872v1", "repo": "https://github.com/amazon-science/co-with-gnns-example"}}