{"2409.19894": {"publish_time": "2024-09-30", "title": "TRANSAGENT: An LLM-Based Multi-Agent System for Code Translation", "paper_summary": "Code translation converts code from one programming language to another while\nmaintaining its original functionality, which is crucial for software\nmigration, system refactoring, and cross-platform development. Traditional\nrule-based methods rely on manually-written rules, which can be time-consuming\nand often result in less readable code. To overcome this, learning-based\nmethods have been developed, leveraging parallel data to train models for\nautomated code translation. More recently, the advance of Large Language Models\n(LLMs) further boosts learning-based code translation. Although promising,\nLLM-translated program still suffers from diverse quality issues (e.g., syntax\nerrors and semantic errors). In particular, it can be challenging for LLMs to\nself-debug these errors when simply provided with the corresponding error\nmessages.\n  In this work, we propose a novel LLM-based multi-agent system TRANSAGENT,\nwhich enhances LLM-based code translation by fixing the syntax errors and\nsemantic errors with the synergy between four LLM-based agents, including\nInitial Code Translator, Syntax Error Fixer, Code Aligner, and Semantic Error\nFixer. The main insight of TRANSAGENT is to first localize the error code block\nin the target program based on the execution alignment between the target and\nsource program, which can narrow down the fixing space and thus lower down the\nfixing difficulties. To evaluate TRANSAGENT, we first construct a new benchmark\nfrom recent programming tasks to mitigate the potential data leakage issue. On\nour benchmark, TRANSAGENT outperforms the latest LLM-based code translation\ntechnique UniTrans in both translation effectiveness and efficiency;\nadditionally, our evaluation on different LLMs show the generalization of\nTRANSAGENT and our ablation study shows the contribution of each agent.", "paper_summary_zh": "<paragraph>\u7a0b\u5f0f\u78bc\u8f49\u8b6f\u6703\u5c07\u7a0b\u5f0f\u78bc\u5f9e\u4e00\u7a2e\u7a0b\u5f0f\u8a9e\u8a00\u8f49\u63db\u5230\u53e6\u4e00\u7a2e\u7a0b\u5f0f\u8a9e\u8a00\uff0c\u540c\u6642\u4fdd\u6301\u5176\u539f\u59cb\u529f\u80fd\uff0c\u9019\u5c0d\u65bc\u8edf\u9ad4\u9077\u79fb\u3001\u7cfb\u7d71\u91cd\u69cb\u548c\u8de8\u5e73\u53f0\u958b\u767c\u81f3\u95dc\u91cd\u8981\u3002\u50b3\u7d71\u7684\u57fa\u65bc\u898f\u5247\u7684\u65b9\u6cd5\u4ef0\u8cf4\u624b\u5beb\u898f\u5247\uff0c\u9019\u53ef\u80fd\u6703\u8017\u6642\u4e14\u7d93\u5e38\u5c0e\u81f4\u53ef\u8b80\u6027\u8f03\u5dee\u7684\u7a0b\u5f0f\u78bc\u3002\u70ba\u4e86\u514b\u670d\u9019\u500b\u554f\u984c\uff0c\u5df2\u7d93\u958b\u767c\u51fa\u57fa\u65bc\u5b78\u7fd2\u7684\u65b9\u6cd5\uff0c\u5229\u7528\u5e73\u884c\u8cc7\u6599\u4f86\u8a13\u7df4\u81ea\u52d5\u7a0b\u5f0f\u78bc\u8f49\u8b6f\u7684\u6a21\u578b\u3002\u6700\u8fd1\uff0c\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u7684\u9032\u6b65\u9032\u4e00\u6b65\u63d0\u5347\u4e86\u57fa\u65bc\u5b78\u7fd2\u7684\u7a0b\u5f0f\u78bc\u8f49\u8b6f\u3002\u5118\u7ba1\u6709\u524d\u666f\uff0cLLM \u8f49\u8b6f\u7684\u7a0b\u5f0f\u4ecd\u7136\u5b58\u5728\u5404\u7a2e\u54c1\u8cea\u554f\u984c\uff08\u4f8b\u5982\uff0c\u8a9e\u6cd5\u932f\u8aa4\u548c\u8a9e\u610f\u932f\u8aa4\uff09\u3002\u7279\u5225\u662f\uff0c\u7576\u50c5\u63d0\u4f9b\u5c0d\u61c9\u7684\u932f\u8aa4\u8a0a\u606f\u6642\uff0cLLM \u53ef\u80fd\u96e3\u4ee5\u81ea\u884c\u9664\u932f\u9019\u4e9b\u932f\u8aa4\u3002\n\u5728\u9019\u9805\u5de5\u4f5c\u4e2d\uff0c\u6211\u5011\u63d0\u51fa\u4e00\u500b\u65b0\u7a4e\u7684\u57fa\u65bc LLM \u7684\u591a\u4ee3\u7406\u7cfb\u7d71 TRANSAGENT\uff0c\u5b83\u900f\u904e\u56db\u500b\u57fa\u65bc LLM \u7684\u4ee3\u7406\u4e4b\u9593\u7684\u5354\u540c\u4f5c\u7528\u4f86\u4fee\u6b63\u8a9e\u6cd5\u932f\u8aa4\u548c\u8a9e\u610f\u932f\u8aa4\uff0c\u5f9e\u800c\u589e\u5f37\u57fa\u65bc LLM \u7684\u7a0b\u5f0f\u78bc\u8f49\u8b6f\uff0c\u5305\u62ec\u521d\u59cb\u7a0b\u5f0f\u78bc\u8f49\u8b6f\u5668\u3001\u8a9e\u6cd5\u932f\u8aa4\u4fee\u6b63\u5668\u3001\u7a0b\u5f0f\u78bc\u6bd4\u5c0d\u5668\u548c\u8a9e\u610f\u932f\u8aa4\u4fee\u6b63\u5668\u3002TRANSAGENT \u7684\u4e3b\u8981\u898b\u89e3\u662f\u9996\u5148\u6839\u64da\u76ee\u6a19\u7a0b\u5f0f\u548c\u539f\u59cb\u7a0b\u5f0f\u7684\u57f7\u884c\u6bd4\u5c0d\uff0c\u5728\u76ee\u6a19\u7a0b\u5f0f\u4e2d\u627e\u51fa\u932f\u8aa4\u7a0b\u5f0f\u78bc\u5340\u584a\uff0c\u9019\u53ef\u4ee5\u7e2e\u5c0f\u4fee\u6b63\u7bc4\u570d\uff0c\u5f9e\u800c\u964d\u4f4e\u4fee\u6b63\u96e3\u5ea6\u3002\u70ba\u4e86\u8a55\u4f30 TRANSAGENT\uff0c\u6211\u5011\u9996\u5148\u5f9e\u6700\u8fd1\u7684\u7a0b\u5f0f\u8a2d\u8a08\u4efb\u52d9\u4e2d\u5efa\u69cb\u4e00\u500b\u65b0\u7684\u57fa\u6e96\uff0c\u4ee5\u6e1b\u8f15\u6f5b\u5728\u7684\u8cc7\u6599\u5916\u6d29\u554f\u984c\u3002\u5728\u6211\u5011\u7684\u57fa\u6e96\u4e0a\uff0cTRANSAGENT \u5728\u8f49\u8b6f\u6548\u80fd\u548c\u6548\u7387\u65b9\u9762\u90fd\u512a\u65bc\u6700\u65b0\u7684\u57fa\u65bc LLM \u7684\u7a0b\u5f0f\u78bc\u8f49\u8b6f\u6280\u8853 UniTrans\uff1b\u6b64\u5916\uff0c\u6211\u5011\u5c0d\u4e0d\u540c LLM \u7684\u8a55\u4f30\u986f\u793a\u4e86 TRANSAGENT \u7684\u6982\u5316\uff0c\u800c\u6211\u5011\u7684\u6d88\u878d\u7814\u7a76\u986f\u793a\u4e86\u6bcf\u500b\u4ee3\u7406\u7684\u8ca2\u737b\u3002</paragraph>", "author": "Zhiqiang Yuan et.al.", "authors": "Zhiqiang Yuan, Weitong Chen, Hanlin Wang, Kai Yu, Xin Peng, Yiling Lou", "id": "2409.19894v1", "paper_url": "http://arxiv.org/abs/2409.19894v1", "repo": "null"}}