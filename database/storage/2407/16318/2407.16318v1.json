{"2407.16318": {"publish_time": "2024-07-23", "title": "PrimeGuard: Safe and Helpful LLMs through Tuning-Free Routing", "paper_summary": "Deploying language models (LMs) necessitates outputs to be both high-quality\nand compliant with safety guidelines. Although Inference-Time Guardrails (ITG)\noffer solutions that shift model output distributions towards compliance, we\nfind that current methods struggle in balancing safety with helpfulness. ITG\nMethods that safely address non-compliant queries exhibit lower helpfulness\nwhile those that prioritize helpfulness compromise on safety. We refer to this\ntrade-off as the guardrail tax, analogous to the alignment tax. To address\nthis, we propose PrimeGuard, a novel ITG method that utilizes structured\ncontrol flow.\n  PrimeGuard routes requests to different self-instantiations of the LM with\nvarying instructions, leveraging its inherent instruction-following\ncapabilities and in-context learning. Our tuning-free approach dynamically\ncompiles system-designer guidelines for each query. We construct and release\nsafe-eval, a diverse red-team safety benchmark. Extensive evaluations\ndemonstrate that PrimeGuard, without fine-tuning, overcomes the guardrail tax\nby (1) significantly increasing resistance to iterative jailbreak attacks and\n(2) achieving state-of-the-art results in safety guardrailing while (3)\nmatching helpfulness scores of alignment-tuned models. Extensive evaluations\ndemonstrate that PrimeGuard, without fine-tuning, outperforms all competing\nbaselines and overcomes the guardrail tax by improving the fraction of safe\nresponses from 61% to 97% and increasing average helpfulness scores from 4.17\nto 4.29 on the largest models, while reducing attack success rate from 100% to\n8%.\n  PrimeGuard implementation is available at\nhttps://github.com/dynamofl/PrimeGuard and safe-eval dataset is available at\nhttps://huggingface.co/datasets/dynamoai/safe_eval.", "paper_summary_zh": "<paragraph>\u90e8\u7f72\u8a9e\u8a00\u6a21\u578b (LM) \u9700\u8981\u8f38\u51fa\u65e2\u8981\u9ad8\u54c1\u8cea\uff0c\u53c8\u8981\u7b26\u5408\u5b89\u5168\u6e96\u5247\u3002\u5118\u7ba1\u63a8\u8ad6\u6642\u9593\u8b77\u6b04 (ITG) \u63d0\u4f9b\u4e86\u89e3\u6c7a\u65b9\u6848\uff0c\u5c07\u6a21\u578b\u8f38\u51fa\u5206\u4f48\u8f49\u79fb\u5230\u5408\u898f\u6027\uff0c\u6211\u5011\u767c\u73fe\u7576\u524d\u65b9\u6cd5\u5728\u5e73\u8861\u5b89\u5168\u6027\u8207\u5be6\u7528\u6027\u65b9\u9762\u9047\u5230\u56f0\u96e3\u3002ITG \u65b9\u6cd5\u5b89\u5168\u5730\u8655\u7406\u4e0d\u7b26\u5408\u898f\u7bc4\u7684\u67e5\u8a62\uff0c\u8868\u73fe\u51fa\u8f03\u4f4e\u7684\u5be6\u7528\u6027\uff0c\u800c\u512a\u5148\u8003\u616e\u5be6\u7528\u6027\u7684\u65b9\u6cd5\u5247\u6703\u5f71\u97ff\u5b89\u5168\u6027\u3002\u6211\u5011\u5c07\u9019\u7a2e\u6b0a\u8861\u7a31\u70ba\u8b77\u6b04\u7a05\uff0c\u985e\u4f3c\u65bc\u5c0d\u9f4a\u7a05\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u6211\u5011\u63d0\u51fa\u4e86 PrimeGuard\uff0c\u9019\u662f\u4e00\u7a2e\u5229\u7528\u7d50\u69cb\u5316\u63a7\u5236\u6d41\u7684\u65b0\u578b ITG \u65b9\u6cd5\u3002\nPrimeGuard \u5c07\u8acb\u6c42\u8def\u7531\u5230 LM \u7684\u4e0d\u540c\u81ea\u5be6\u4f8b\u5316\uff0c\u4e26\u9644\u6709\u4e0d\u540c\u7684\u6307\u793a\uff0c\u5229\u7528\u5176\u56fa\u6709\u7684\u6307\u4ee4\u9075\u5faa\u80fd\u529b\u548c\u60c5\u5883\u5b78\u7fd2\u3002\u6211\u5011\u7684\u7121\u8abf\u6821\u65b9\u6cd5\u6703\u52d5\u614b\u7de8\u8b6f\u6bcf\u500b\u67e5\u8a62\u7684\u7cfb\u7d71\u8a2d\u8a08\u4eba\u54e1\u6307\u5357\u3002\u6211\u5011\u69cb\u5efa\u4e26\u767c\u5e03 safe-eval\uff0c\u9019\u662f\u4e00\u500b\u591a\u6a23\u5316\u7684\u7d05\u968a\u5b89\u5168\u57fa\u6e96\u3002\u5ee3\u6cdb\u7684\u8a55\u4f30\u8868\u660e\uff0cPrimeGuard \u5728\u6c92\u6709\u5fae\u8abf\u7684\u60c5\u6cc1\u4e0b\uff0c\u901a\u904e (1) \u5927\u5e45\u63d0\u9ad8\u5c0d\u53cd\u8986\u8d8a\u7344\u653b\u64ca\u7684\u62b5\u6297\u529b\uff0c\u4ee5\u53ca (2) \u5728\u5b89\u5168\u8b77\u6b04\u4e2d\u53d6\u5f97\u6700\u5148\u9032\u7684\u6210\u679c\uff0c\u540c\u6642 (3) \u5339\u914d\u5c0d\u9f4a\u8abf\u6574\u6a21\u578b\u7684\u5be6\u7528\u6027\u5206\u6578\uff0c\u514b\u670d\u4e86\u8b77\u6b04\u7a05\u3002\u5ee3\u6cdb\u7684\u8a55\u4f30\u8868\u660e\uff0cPrimeGuard \u5728\u6c92\u6709\u5fae\u8abf\u7684\u60c5\u6cc1\u4e0b\uff0c\u512a\u65bc\u6240\u6709\u7af6\u722d\u57fa\u6e96\uff0c\u4e26\u901a\u904e\u5c07\u5b89\u5168\u56de\u61c9\u7684\u6bd4\u4f8b\u5f9e 61% \u63d0\u9ad8\u5230 97%\uff0c\u4e26\u5c07\u5e73\u5747\u5be6\u7528\u6027\u5206\u6578\u5f9e 4.17 \u63d0\u9ad8\u5230 4.29\uff08\u5728\u6700\u5927\u7684\u6a21\u578b\u4e0a\uff09\uff0c\u540c\u6642\u5c07\u653b\u64ca\u6210\u529f\u7387\u5f9e 100% \u964d\u4f4e\u5230 8%\uff0c\u514b\u670d\u4e86\u8b77\u6b04\u7a05\u3002\nPrimeGuard \u5be6\u4f5c\u53ef\u4ee5\u5728 https://github.com/dynamofl/PrimeGuard \u53d6\u5f97\uff0c\u800c safe-eval \u8cc7\u6599\u96c6\u53ef\u4ee5\u5728 https://huggingface.co/datasets/dynamoai/safe_eval \u53d6\u5f97\u3002</paragraph>", "author": "Blazej Manczak et.al.", "authors": "Blazej Manczak, Eliott Zemour, Eric Lin, Vaikkunth Mugunthan", "id": "2407.16318v1", "paper_url": "http://arxiv.org/abs/2407.16318v1", "repo": "https://github.com/dynamofl/primeguard"}}