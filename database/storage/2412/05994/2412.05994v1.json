{"2412.05994": {"publish_time": "2024-12-08", "title": "PIG: Physics-Informed Gaussians as Adaptive Parametric Mesh Representations", "paper_summary": "The approximation of Partial Differential Equations (PDEs) using neural\nnetworks has seen significant advancements through Physics-Informed Neural\nNetworks (PINNs). Despite their straightforward optimization framework and\nflexibility in implementing various PDEs, PINNs often suffer from limited\naccuracy due to the spectral bias of Multi-Layer Perceptrons (MLPs), which\nstruggle to effectively learn high-frequency and non-linear components.\nRecently, parametric mesh representations in combination with neural networks\nhave been investigated as a promising approach to eliminate the inductive\nbiases of neural networks. However, they usually require very high-resolution\ngrids and a large number of collocation points to achieve high accuracy while\navoiding overfitting issues. In addition, the fixed positions of the mesh\nparameters restrict their flexibility, making it challenging to accurately\napproximate complex PDEs. To overcome these limitations, we propose\nPhysics-Informed Gaussians (PIGs), which combine feature embeddings using\nGaussian functions with a lightweight neural network. Our approach uses\ntrainable parameters for the mean and variance of each Gaussian, allowing for\ndynamic adjustment of their positions and shapes during training. This\nadaptability enables our model to optimally approximate PDE solutions, unlike\nmodels with fixed parameter positions. Furthermore, the proposed approach\nmaintains the same optimization framework used in PINNs, allowing us to benefit\nfrom their excellent properties. Experimental results show the competitive\nperformance of our model across various PDEs, demonstrating its potential as a\nrobust tool for solving complex PDEs. Our project page is available at\nhttps://namgyukang.github.io/Physics-Informed-Gaussians/", "paper_summary_zh": "\u5229\u7528\u795e\u7ecf\u7db2\u8def\u8fd1\u4f3c\u504f\u5fae\u5206\u65b9\u7a0b\u5f0f (PDE) \u5df2\u900f\u904e\u7269\u7406\u8cc7\u8a0a\u795e\u7d93\u7db2\u8def (PINN) \u770b\u898b\u986f\u8457\u9032\u6b65\u3002\u5118\u7ba1\u5176\u6700\u4f73\u5316\u67b6\u69cb\u7c21\u55ae\u660e\u77ad\uff0c\u4e14\u5728\u5be6\u4f5c\u5404\u7a2e PDE \u4e0a\u5177\u6709\u5f48\u6027\uff0c\u4f46 PINN \u537b\u5e38\u56e0\u591a\u5c64\u611f\u77e5\u5668 (MLP) \u7684\u5149\u8b5c\u504f\u5dee\u800c\u5c0e\u81f4\u7cbe\u78ba\u5ea6\u53d7\u9650\uff0c\u96e3\u4ee5\u6709\u6548\u5b78\u7fd2\u9ad8\u983b\u7387\u8207\u975e\u7dda\u6027\u5143\u4ef6\u3002\u8fd1\u671f\uff0c\u5df2\u7814\u7a76\u5c07\u53c3\u6578\u7db2\u683c\u8868\u793a\u6cd5\u7d50\u5408\u795e\u7d93\u7db2\u8def\u4f5c\u70ba\u4e00\u7a2e\u6d88\u9664\u795e\u7d93\u7db2\u8def\u6b78\u7d0d\u504f\u5dee\u7684\u7b56\u7565\u3002\u7136\u800c\uff0c\u5b83\u5011\u901a\u5e38\u9700\u8981\u6975\u9ad8\u89e3\u6790\u5ea6\u7684\u7db2\u683c\u548c\u5927\u91cf\u7684\u914d\u7f6e\u9ede\u624d\u80fd\u9054\u6210\u9ad8\u7cbe\u78ba\u5ea6\uff0c\u540c\u6642\u907f\u514d\u904e\u5ea6\u64ec\u5408\u554f\u984c\u3002\u6b64\u5916\uff0c\u7db2\u683c\u53c3\u6578\u7684\u56fa\u5b9a\u4f4d\u7f6e\u9650\u5236\u4e86\u5176\u5f48\u6027\uff0c\u4f7f\u5f97\u7cbe\u78ba\u8fd1\u4f3c\u8907\u96dc PDE \u5145\u6eff\u6311\u6230\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u4e9b\u9650\u5236\uff0c\u6211\u5011\u63d0\u51fa\u7269\u7406\u8cc7\u8a0a\u9ad8\u65af\u51fd\u6578 (PIG)\uff0c\u5b83\u7d50\u5408\u4f7f\u7528\u9ad8\u65af\u51fd\u6578\u8207\u8f15\u91cf\u7d1a\u795e\u7d93\u7db2\u8def\u9032\u884c\u7279\u5fb5\u5d4c\u5165\u3002\u6211\u5011\u7684\u7b56\u7565\u4f7f\u7528\u53ef\u8a13\u7df4\u53c3\u6578\u4f5c\u70ba\u6bcf\u500b\u9ad8\u65af\u51fd\u6578\u7684\u5e73\u5747\u503c\u548c\u8b8a\u7570\u6578\uff0c\u5141\u8a31\u5728\u8a13\u7df4\u671f\u9593\u52d5\u614b\u8abf\u6574\u5176\u4f4d\u7f6e\u548c\u5f62\u72c0\u3002\u9019\u7a2e\u9069\u61c9\u6027\u4f7f\u6211\u5011\u7684\u6a21\u578b\u80fd\u5920\u6700\u4f73\u5316\u8fd1\u4f3c PDE \u89e3\uff0c\u9019\u8207\u5177\u6709\u56fa\u5b9a\u53c3\u6578\u4f4d\u7f6e\u7684\u6a21\u578b\u4e0d\u540c\u3002\u6b64\u5916\uff0c\u5efa\u8b70\u7684\u65b9\u6cd5\u7dad\u6301\u8207 PINN \u76f8\u540c\u7684\u6700\u4f73\u5316\u67b6\u69cb\uff0c\u8b93\u6211\u5011\u80fd\u5920\u53d7\u76ca\u65bc\u5176\u512a\u7570\u7684\u7279\u6027\u3002\u5be6\u9a57\u7d50\u679c\u986f\u793a\u4e86\u6211\u5011\u6a21\u578b\u5728\u5404\u7a2e PDE \u4e0a\u7684\u7af6\u722d\u529b\uff0c\u8b49\u660e\u5176\u4f5c\u70ba\u89e3\u6c7a\u8907\u96dc PDE \u7684\u5f37\u5927\u5de5\u5177\u7684\u6f5b\u529b\u3002\u6211\u5011\u7684\u5c08\u6848\u9801\u9762\u53ef\u65bc https://namgyukang.github.io/Physics-Informed-Gaussians/ \u53d6\u5f97\u3002", "author": "Namgyu Kang et.al.", "authors": "Namgyu Kang, Jaemin Oh, Youngjoon Hong, Eunbyung Park", "id": "2412.05994v1", "paper_url": "http://arxiv.org/abs/2412.05994v1", "repo": "null"}}