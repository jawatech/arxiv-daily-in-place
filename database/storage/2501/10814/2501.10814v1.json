{"2501.10814": {"publish_time": "2025-01-18", "title": "No More Sliding Window: Efficient 3D Medical Image Segmentation with Differentiable Top-k Patch Sampling", "paper_summary": "3D models are favored over 2D for 3D medical image segmentation tasks due to\ntheir ability to leverage inter-slice relationship, yielding higher\nsegmentation accuracy. However, 3D models demand significantly more GPU memory\nwith increased model size and intermediate tensors. A common solution is to use\npatch-based training and make whole-volume predictions with sliding window (SW)\ninference. SW inference reduces memory usage but is slower due to equal\nresource allocation across patches and less accurate as it overlooks global\nfeatures beyond patches.\n  We propose NMSW-Net (No-More-Sliding-Window-Net), a novel framework that\nenhances efficiency and accuracy of any given 3D segmentation model by\neliminating SW inference and incorporating global predictions when necessary.\nNMSW-Net incorporates a differentiable Top-k module to sample only the relevant\npatches that enhance segmentation accuracy, thereby minimizing redundant\ncomputations. Additionally, it learns to leverage coarse global predictions\nwhen patch prediction alone is insufficient. NMSW-Net is model-agnostic, making\nit compatible with any 3D segmentation model that previously relied on SW\ninference.\n  Evaluated across 3 tasks with 3 segmentation backbones, NMSW-Net achieves\ncompetitive or sometimes superior accuracy compared to SW, while reducing\ncomputational complexity by 90% (87.5 to 7.95 TFLOPS), delivering 4x faster\ninference on the H100 GPU (19.0 to 4.3 sec), and 7x faster inference on the\nIntel Xeon Gold CPU (1710 to 230 seconds).", "paper_summary_zh": "<paragraph>3D \u6a21\u578b\u5728 3D \u533b\u5b66\u5f71\u50cf\u5206\u5272\u4efb\u52a1\u4e2d\u4f18\u4e8e 2D\uff0c\u56e0\u4e3a\n\u5b83\u4eec\u80fd\u591f\u5229\u7528\u5207\u7247\u95f4\u5173\u7cfb\uff0c\u4ece\u800c\u4ea7\u751f\u66f4\u9ad8\u7684\n\u5206\u5272\u7cbe\u5ea6\u3002\u7136\u800c\uff0c3D \u6a21\u578b\u9700\u8981\u5927\u91cf GPU \u5185\u5b58\n\u968f\u7740\u6a21\u578b\u5927\u5c0f\u548c\u4e2d\u95f4\u5f20\u91cf\u7684\u589e\u52a0\u3002\u4e00\u79cd\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528\n\u57fa\u4e8e patch \u7684\u8bad\u7ec3\u5e76\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3 (SW)\n\u63a8\u7406\u8fdb\u884c\u5168\u5377\u9884\u6d4b\u3002SW \u63a8\u7406\u51cf\u5c11\u4e86\u5185\u5b58\u4f7f\u7528\u91cf\uff0c\u4f46\u7531\u4e8e\n\u5728 patch \u4e4b\u95f4\u5e73\u5747\u5206\u914d\u8d44\u6e90\u5e76\u4e14\u7531\u4e8e\u5ffd\u7565\u4e86 patch \u4e4b\u5916\u7684\u5168\u5c40\n\u7279\u5f81\u800c\u5bfc\u81f4\u901f\u5ea6\u8f83\u6162\u4e14\u51c6\u786e\u5ea6\u8f83\u4f4e\u3002\n\u6211\u4eec\u63d0\u51fa\u4e86 NMSW-Net\uff08\u65e0\u6ed1\u52a8\u7a97\u53e3\u7f51\u7edc\uff09\uff0c\u8fd9\u662f\u4e00\u79cd\u65b0\u9896\u7684\u6846\u67b6\uff0c\u5b83\n\u901a\u8fc7\u6d88\u9664 SW \u63a8\u7406\u5e76\u5728\u5fc5\u8981\u65f6\u5408\u5e76\u5168\u5c40\u9884\u6d4b\u6765\u63d0\u9ad8\u4efb\u4f55\u7ed9\u5b9a 3D \u5206\u5272\u6a21\u578b\u7684\u6548\u7387\u548c\u51c6\u786e\u6027\u3002\nNMSW-Net \u7ed3\u5408\u4e86\u4e00\u4e2a\u53ef\u5fae\u5206\u7684 Top-k \u6a21\u5757\u6765\u4ec5\u91c7\u6837\u76f8\u5173\npatch\uff0c\u4ee5\u63d0\u9ad8\u5206\u5272\u7cbe\u5ea6\uff0c\u4ece\u800c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5197\u4f59\n\u8ba1\u7b97\u3002\u6b64\u5916\uff0c\u5b83\u5b66\u4f1a\u4e86\u5728\u4ec5 patch \u9884\u6d4b\u4e0d\u8db3\u65f6\u5229\u7528\u7c97\u7565\u7684\u5168\u5c40\u9884\u6d4b\u3002NMSW-Net \u4e0e\u6a21\u578b\u65e0\u5173\uff0c\u4f7f\u5176\n\u4e0e\u4ee5\u524d\u4f9d\u8d56 SW \u7684\u4efb\u4f55 3D \u5206\u5272\u6a21\u578b\u517c\u5bb9\n\u63a8\u7406\u3002\n\u5728 3 \u4e2a\u5e26\u6709 3 \u4e2a\u5206\u5272\u4e3b\u5e72\u7684\u4efb\u52a1\u4e2d\u8fdb\u884c\u8bc4\u4f30\uff0cNMSW-Net \u5b9e\u73b0\u4e86\n\u4e0e SW \u76f8\u6bd4\u5177\u6709\u7ade\u4e89\u529b\u6216\u6709\u65f6\u66f4\u9ad8\u7684\u51c6\u786e\u6027\uff0c\u540c\u65f6\u51cf\u5c11\n\u8ba1\u7b97\u590d\u6742\u5ea6\u964d\u4f4e\u4e86 90%\uff0887.5 \u5230 7.95 TFLOPS\uff09\uff0c\u5728 H100 GPU \u4e0a\u63d0\u4f9b 4 \u500d\u66f4\u5feb\u7684\n\u63a8\u7406\uff0819.0 \u5230 4.3 \u79d2\uff09\uff0c\u4ee5\u53ca\u5728\n\u82f1\u7279\u5c14\u81f3\u5f3a\u91d1 CPU \u4e0a\u63a8\u7406\u901f\u5ea6\u63d0\u9ad8 7 \u500d\uff081710 \u5230 230 \u79d2\uff09\u3002</paragraph>", "author": "Young Seok Jeon et.al.", "authors": "Young Seok Jeon, Hongfei Yang, Huazhu Fu, Mengling Feng", "id": "2501.10814v1", "paper_url": "http://arxiv.org/abs/2501.10814v1", "repo": "null"}}