{"2405.19815": {"publish_time": "2024-05-30", "title": "Efficient Stimuli Generation using Reinforcement Learning in Design Verification", "paper_summary": "The increasing design complexity of System-on-Chips (SoCs) has led to\nsignificant verification challenges, particularly in meeting coverage targets\nwithin a timely manner. At present, coverage closure is heavily dependent on\nconstrained random and coverage driven verification methodologies where the\nrandomized stimuli are bounded to verify certain scenarios and to reach\ncoverage goals. This process is said to be exhaustive and to consume a lot of\nproject time. In this paper, a novel methodology is proposed to generate\nefficient stimuli with the help of Reinforcement Learning (RL) to reach the\nmaximum code coverage of the Design Under Verification (DUV). Additionally, an\nautomated framework is created using metamodeling to generate a SystemVerilog\ntestbench and an RL environment for any given design. The proposed approach is\napplied to various designs and the produced results proves that the RL agent\nprovides effective stimuli to achieve code coverage faster in comparison with\nbaseline random simulations. Furthermore, various RL agents and reward schemes\nare analyzed in our work.", "paper_summary_zh": "\u7531\u65bc\u7cfb\u7d71\u6676\u7247 (SoC) \u7684\u8a2d\u8a08\u8907\u96dc\u5ea6\u65e5\u76ca\u63d0\u5347\uff0c\u5c0e\u81f4\u9a57\u8b49\u9762\u81e8\u91cd\u5927\u6311\u6230\uff0c\u7279\u5225\u662f\u5728\u53ca\u6642\u9054\u6210\u6db5\u84cb\u7387\u76ee\u6a19\u65b9\u9762\u3002\u76ee\u524d\uff0c\u6db5\u84cb\u7387\u5c01\u9589\u9ad8\u5ea6\u4f9d\u8cf4\u65bc\u53d7\u9650\u96a8\u6a5f\u548c\u6db5\u84cb\u7387\u9a45\u52d5\u7684\u9a57\u8b49\u65b9\u6cd5\uff0c\u5176\u4e2d\u96a8\u6a5f\u523a\u6fc0\u53d7\u5230\u7d04\u675f\uff0c\u4ee5\u9a57\u8b49\u7279\u5b9a\u60c5\u5883\u4e26\u9054\u6210\u6db5\u84cb\u7387\u76ee\u6a19\u3002\u9019\u500b\u6d41\u7a0b\u88ab\u8a8d\u70ba\u662f\u8a73\u76e1\u7684\uff0c\u4e14\u6703\u8017\u8cbb\u5927\u91cf\u5c08\u6848\u6642\u9593\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u7a2e\u5275\u65b0\u7684\u65b9\u6cd5\uff0c\u4ee5\u5229\u7528\u5f37\u5316\u5b78\u7fd2 (RL) \u7522\u751f\u6709\u6548\u523a\u6fc0\uff0c\u4ee5\u9054\u6210\u5f85\u9a57\u8b49\u8a2d\u8a08 (DUV) \u7684\u6700\u5927\u7a0b\u5f0f\u78bc\u6db5\u84cb\u7387\u3002\u6b64\u5916\uff0c\u4f7f\u7528\u5143\u5efa\u6a21\u5efa\u7acb\u4e86\u4e00\u500b\u81ea\u52d5\u5316\u67b6\u69cb\uff0c\u4ee5\u91dd\u5c0d\u4efb\u4f55\u7d66\u5b9a\u7684\u8a2d\u8a08\u7522\u751f SystemVerilog \u6e2c\u8a66\u5e73\u53f0\u548c RL \u74b0\u5883\u3002\u5c07\u6240\u63d0\u51fa\u7684\u65b9\u6cd5\u61c9\u7528\u65bc\u5404\u7a2e\u8a2d\u8a08\uff0c\u7522\u751f\u7684\u7d50\u679c\u8b49\u660e\uff0c\u8207\u57fa\u7dda\u96a8\u6a5f\u6a21\u64ec\u76f8\u6bd4\uff0cRL \u4ee3\u7406\u7a0b\u5f0f\u63d0\u4f9b\u4e86\u6709\u6548\u7684\u523a\u6fc0\uff0c\u53ef\u4ee5\u66f4\u5feb\u9054\u6210\u7a0b\u5f0f\u78bc\u6db5\u84cb\u7387\u3002\u6b64\u5916\uff0c\u6211\u5011\u7684\u7814\u7a76\u5206\u6790\u4e86\u5404\u7a2e RL \u4ee3\u7406\u7a0b\u5f0f\u548c\u734e\u52f5\u6a5f\u5236\u3002", "author": "Deepak Narayan Gadde et.al.", "authors": "Deepak Narayan Gadde, Thomas Nalapat, Aman Kumar, Djones Lettnin, Wolfgang Kunz, Sebastian Simon", "id": "2405.19815v1", "paper_url": "http://arxiv.org/abs/2405.19815v1", "repo": "null"}}