{"2408.10119": {"publish_time": "2024-08-19", "title": "Factorized-Dreamer: Training A High-Quality Video Generator with Limited and Low-Quality Data", "paper_summary": "Text-to-video (T2V) generation has gained significant attention due to its\nwide applications to video generation, editing, enhancement and translation,\n\\etc. However, high-quality (HQ) video synthesis is extremely challenging\nbecause of the diverse and complex motions existed in real world. Most existing\nworks struggle to address this problem by collecting large-scale HQ videos,\nwhich are inaccessible to the community. In this work, we show that publicly\navailable limited and low-quality (LQ) data are sufficient to train a HQ video\ngenerator without recaptioning or finetuning. We factorize the whole T2V\ngeneration process into two steps: generating an image conditioned on a highly\ndescriptive caption, and synthesizing the video conditioned on the generated\nimage and a concise caption of motion details. Specifically, we present\n\\emph{Factorized-Dreamer}, a factorized spatiotemporal framework with several\ncritical designs for T2V generation, including an adapter to combine text and\nimage embeddings, a pixel-aware cross attention module to capture pixel-level\nimage information, a T5 text encoder to better understand motion description,\nand a PredictNet to supervise optical flows. We further present a noise\nschedule, which plays a key role in ensuring the quality and stability of video\ngeneration. Our model lowers the requirements in detailed captions and HQ\nvideos, and can be directly trained on limited LQ datasets with noisy and brief\ncaptions such as WebVid-10M, largely alleviating the cost to collect\nlarge-scale HQ video-text pairs. Extensive experiments in a variety of T2V and\nimage-to-video generation tasks demonstrate the effectiveness of our proposed\nFactorized-Dreamer. Our source codes are available at\n\\url{https://github.com/yangxy/Factorized-Dreamer/}.", "paper_summary_zh": "<paragraph>\u6587\u672c\u8f6c\u89c6\u9891 (T2V) \u751f\u6210\u56e0\u5176\u5728\u89c6\u9891\u751f\u6210\u3001\u7f16\u8f91\u3001\u589e\u5f3a\u548c\u7ffb\u8bd1\u7b49\u65b9\u9762\u7684\u5e7f\u6cdb\u5e94\u7528\u800c\u5907\u53d7\u5173\u6ce8\uff0c\\\u7b49\u3002\u7136\u800c\uff0c\u9ad8\u8d28\u91cf (HQ) \u89c6\u9891\u5408\u6210\u6781\u5177\u6311\u6218\u6027\uff0c\u56e0\u4e3a\u73b0\u5b9e\u4e16\u754c\u4e2d\u5b58\u5728\u591a\u6837\u4e14\u590d\u6742\u7684\u8fd0\u52a8\u3002\u5927\u591a\u6570\u73b0\u6709\u4f5c\u54c1\u901a\u8fc7\u6536\u96c6\u793e\u533a\u65e0\u6cd5\u83b7\u53d6\u7684\u5927\u89c4\u6a21 HQ \u89c6\u9891\u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u4f46\u8fd9\u5f88\u56f0\u96be\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u8868\u660e\u516c\u5f00\u53ef\u7528\u7684\u6709\u9650\u4e14\u4f4e\u8d28\u91cf (LQ) \u6570\u636e\u8db3\u4ee5\u8bad\u7ec3 HQ \u89c6\u9891\u751f\u6210\u5668\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u52a0\u6807\u9898\u6216\u5fae\u8c03\u3002\u6211\u4eec\u5c06\u6574\u4e2a T2V \u751f\u6210\u8fc7\u7a0b\u5206\u89e3\u4e3a\u4e24\u4e2a\u6b65\u9aa4\uff1a\u751f\u6210\u57fa\u4e8e\u9ad8\u5ea6\u63cf\u8ff0\u6027\u6807\u9898\u7684\u56fe\u50cf\uff0c\u5e76\u57fa\u4e8e\u751f\u6210\u7684\u56fe\u50cf\u548c\u7b80\u6d01\u7684\u8fd0\u52a8\u7ec6\u8282\u6807\u9898\u5408\u6210\u89c6\u9891\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\\emph{Factorized-Dreamer}\uff0c\u8fd9\u662f\u4e00\u4e2a\u5206\u89e3\u7684\u65f6\u7a7a\u6846\u67b6\uff0c\u5177\u6709\u51e0\u4e2a\u5173\u952e\u8bbe\u8ba1\u7528\u4e8e T2V \u751f\u6210\uff0c\u5305\u62ec\u4e00\u4e2a\u5c06\u6587\u672c\u548c\u56fe\u50cf\u5d4c\u5165\u76f8\u7ed3\u5408\u7684\u9002\u914d\u5668\u3001\u4e00\u4e2a\u50cf\u7d20\u611f\u77e5\u4ea4\u53c9\u6ce8\u610f\u6a21\u5757\u6765\u6355\u83b7\u50cf\u7d20\u7ea7\u56fe\u50cf\u4fe1\u606f\u3001\u4e00\u4e2a T5 \u6587\u672c\u7f16\u7801\u5668\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u8fd0\u52a8\u63cf\u8ff0\uff0c\u4ee5\u53ca\u4e00\u4e2a PredictNet \u6765\u76d1\u7763\u5149\u6d41\u3002\u6211\u4eec\u8fdb\u4e00\u6b65\u63d0\u51fa\u4e86\u4e00\u4e2a\u566a\u58f0\u65f6\u95f4\u8868\uff0c\u5b83\u5728\u786e\u4fdd\u89c6\u9891\u751f\u6210\u8d28\u91cf\u548c\u7a33\u5b9a\u6027\u65b9\u9762\u53d1\u6325\u7740\u5173\u952e\u4f5c\u7528\u3002\u6211\u4eec\u7684\u6a21\u578b\u964d\u4f4e\u4e86\u5bf9\u8be6\u7ec6\u6807\u9898\u548c HQ \u89c6\u9891\u7684\u8981\u6c42\uff0c\u5e76\u4e14\u53ef\u4ee5\u76f4\u63a5\u5728\u5177\u6709\u566a\u58f0\u548c\u7b80\u77ed\u6807\u9898\u7684\u6709\u9650 LQ \u6570\u636e\u96c6\uff08\u4f8b\u5982 WebVid-10M\uff09\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u4ece\u800c\u5927\u5927\u964d\u4f4e\u4e86\u6536\u96c6\u5927\u89c4\u6a21 HQ \u89c6\u9891-\u6587\u672c\u5bf9\u7684\u6210\u672c\u3002\u5728\u5404\u79cd T2V \u548c\u56fe\u50cf\u5230\u89c6\u9891\u751f\u6210\u4efb\u52a1\u4e2d\u7684\u5927\u91cf\u5b9e\u9a8c\u8868\u660e\u4e86\u6211\u4eec\u63d0\u51fa\u7684 Factorized-Dreamer \u7684\u6709\u6548\u6027\u3002\u6211\u4eec\u7684\u6e90\u4ee3\u7801\u53ef\u5728\\url{https://github.com/yangxy/Factorized-Dreamer/}\u83b7\u5f97\u3002</paragraph>", "author": "Tao Yang et.al.", "authors": "Tao Yang, Yangming Shi, Yunwen Huang, Feng Chen, Yin Zheng, Lei Zhang", "id": "2408.10119v1", "paper_url": "http://arxiv.org/abs/2408.10119v1", "repo": "null"}}