{"2411.02124": {"publish_time": "2024-11-04", "title": "Adaptive Sparse Allocation with Mutual Choice & Feature Choice Sparse Autoencoders", "paper_summary": "Sparse autoencoders (SAEs) are a promising approach to extracting features\nfrom neural networks, enabling model interpretability as well as causal\ninterventions on model internals. SAEs generate sparse feature representations\nusing a sparsifying activation function that implicitly defines a set of\ntoken-feature matches. We frame the token-feature matching as a resource\nallocation problem constrained by a total sparsity upper bound. For example,\nTopK SAEs solve this allocation problem with the additional constraint that\neach token matches with at most $k$ features. In TopK SAEs, the $k$ active\nfeatures per token constraint is the same across tokens, despite some tokens\nbeing more difficult to reconstruct than others. To address this limitation, we\npropose two novel SAE variants, Feature Choice SAEs and Mutual Choice SAEs,\nwhich each allow for a variable number of active features per token. Feature\nChoice SAEs solve the sparsity allocation problem under the additional\nconstraint that each feature matches with at most $m$ tokens. Mutual Choice\nSAEs solve the unrestricted allocation problem where the total sparsity budget\ncan be allocated freely between tokens and features. Additionally, we introduce\na new auxiliary loss function, $\\mathtt{aux\\_zipf\\_loss}$, which generalises\nthe $\\mathtt{aux\\_k\\_loss}$ to mitigate dead and underutilised features. Our\nmethods result in SAEs with fewer dead features and improved reconstruction\nloss at equivalent sparsity levels as a result of the inherent adaptive\ncomputation. More accurate and scalable feature extraction methods provide a\npath towards better understanding and more precise control of foundation\nmodels.", "paper_summary_zh": "<paragraph>\u7a00\u758f\u81ea\u7f16\u7801\u5668 (SAE) \u662f\u4e00\u79cd\u4ece\u795e\u7ecf\u7f51\u7edc\u4e2d\u63d0\u53d6\u7279\u5f81\u7684\u6709\u524d\u9014\u7684\u65b9\u6cd5\uff0c\u5b83\u652f\u6301\u6a21\u578b\u53ef\u89e3\u91ca\u6027\u4ee5\u53ca\u5bf9\u6a21\u578b\u5185\u90e8\u7684\u56e0\u679c\u5e72\u9884\u3002SAE \u4f7f\u7528\u7a00\u758f\u5316\u6fc0\u6d3b\u51fd\u6570\u751f\u6210\u7a00\u758f\u7279\u5f81\u8868\u5f81\uff0c\u8be5\u51fd\u6570\u9690\u5f0f\u5b9a\u4e49\u4e86\u4e00\u7ec4\u6807\u8bb0\u7279\u5f81\u5339\u914d\u3002\u6211\u4eec\u5c06\u6807\u8bb0\u7279\u5f81\u5339\u914d\u6784\u5efa\u4e3a\u53d7\u603b\u7a00\u758f\u5ea6\u4e0a\u9650\u7ea6\u675f\u7684\u8d44\u6e90\u5206\u914d\u95ee\u9898\u3002\u4f8b\u5982\uff0cTopK SAE \u4f7f\u7528\u9644\u52a0\u7ea6\u675f\u6765\u89e3\u51b3\u6b64\u5206\u914d\u95ee\u9898\uff0c\u5373\u6bcf\u4e2a\u6807\u8bb0\u6700\u591a\u4e0e $k$ \u4e2a\u7279\u5f81\u5339\u914d\u3002\u5728 TopK SAE \u4e2d\uff0c\u6bcf\u4e2a\u6807\u8bb0\u7684 $k$ \u4e2a\u6d3b\u52a8\u7279\u5f81\u7ea6\u675f\u5728\u6240\u6709\u6807\u8bb0\u4e2d\u90fd\u662f\u76f8\u540c\u7684\uff0c\u5c3d\u7ba1\u6709\u4e9b\u6807\u8bb0\u6bd4\u5176\u4ed6\u6807\u8bb0\u66f4\u96be\u91cd\u5efa\u3002\u4e3a\u4e86\u89e3\u51b3\u6b64\u9650\u5236\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e24\u79cd\u65b0\u9896\u7684 SAE \u53d8\u4f53\uff0c\u5373\u7279\u5f81\u9009\u62e9 SAE \u548c\u76f8\u4e92\u9009\u62e9 SAE\uff0c\u5b83\u4eec\u6bcf\u4e2a\u90fd\u5141\u8bb8\u6bcf\u4e2a\u6807\u8bb0\u6709\u53ef\u53d8\u6570\u91cf\u7684\u6d3b\u52a8\u7279\u5f81\u3002\u7279\u5f81\u9009\u62e9 SAE \u5728\u9644\u52a0\u7ea6\u675f\u4e0b\u89e3\u51b3\u7a00\u758f\u5ea6\u5206\u914d\u95ee\u9898\uff0c\u5373\u6bcf\u4e2a\u7279\u5f81\u6700\u591a\u4e0e $m$ \u4e2a\u6807\u8bb0\u5339\u914d\u3002\u76f8\u4e92\u9009\u62e9 SAE \u89e3\u51b3\u4e0d\u53d7\u9650\u5236\u7684\u5206\u914d\u95ee\u9898\uff0c\u5176\u4e2d\u603b\u7a00\u758f\u5ea6\u9884\u7b97\u53ef\u4ee5\u5728\u6807\u8bb0\u548c\u7279\u5f81\u4e4b\u95f4\u81ea\u7531\u5206\u914d\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u8f85\u52a9\u635f\u5931\u51fd\u6570 $\\mathtt{aux\\_zipf\\_loss}$\uff0c\u5b83\u6982\u62ec\u4e86 $\\mathtt{aux\\_k\\_loss}$ \u4ee5\u51cf\u8f7b\u6b7b\u7279\u5f81\u548c\u5229\u7528\u4e0d\u8db3\u7684\u7279\u5f81\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u5bfc\u81f4 SAE \u5177\u6709\u66f4\u5c11\u7684\u6b7b\u7279\u5f81\uff0c\u5e76\u4e14\u7531\u4e8e\u56fa\u6709\u7684\u81ea\u9002\u5e94\u8ba1\u7b97\uff0c\u5728\u540c\u7b49\u7a00\u758f\u5ea6\u7ea7\u522b\u4e0b\u6539\u8fdb\u4e86\u91cd\u5efa\u635f\u5931\u3002\u66f4\u51c6\u786e\u548c\u53ef\u6269\u5c55\u7684\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\u63d0\u4f9b\u4e86\u4e00\u6761\u9014\u5f84\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3\u548c\u66f4\u7cbe\u786e\u5730\u63a7\u5236\u57fa\u7840\u6a21\u578b\u3002</paragraph>", "author": "Kola Ayonrinde et.al.", "authors": "Kola Ayonrinde", "id": "2411.02124v1", "paper_url": "http://arxiv.org/abs/2411.02124v1", "repo": "null"}}