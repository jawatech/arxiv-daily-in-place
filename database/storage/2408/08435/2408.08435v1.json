{"2408.08435": {"publish_time": "2024-08-15", "title": "Automated Design of Agentic Systems", "paper_summary": "Researchers are investing substantial effort in developing powerful\ngeneral-purpose agents, wherein Foundation Models are used as modules within\nagentic systems (e.g. Chain-of-Thought, Self-Reflection, Toolformer). However,\nthe history of machine learning teaches us that hand-designed solutions are\neventually replaced by learned solutions. We formulate a new research area,\nAutomated Design of Agentic Systems (ADAS), which aims to automatically create\npowerful agentic system designs, including inventing novel building blocks\nand/or combining them in new ways. We further demonstrate that there is an\nunexplored yet promising approach within ADAS where agents can be defined in\ncode and new agents can be automatically discovered by a meta agent programming\never better ones in code. Given that programming languages are Turing Complete,\nthis approach theoretically enables the learning of any possible agentic\nsystem: including novel prompts, tool use, control flows, and combinations\nthereof. We present a simple yet effective algorithm named Meta Agent Search to\ndemonstrate this idea, where a meta agent iteratively programs interesting new\nagents based on an ever-growing archive of previous discoveries. Through\nextensive experiments across multiple domains including coding, science, and\nmath, we show that our algorithm can progressively invent agents with novel\ndesigns that greatly outperform state-of-the-art hand-designed agents.\nImportantly, we consistently observe the surprising result that agents invented\nby Meta Agent Search maintain superior performance even when transferred across\ndomains and models, demonstrating their robustness and generality. Provided we\ndevelop it safely, our work illustrates the potential of an exciting new\nresearch direction toward automatically designing ever-more powerful agentic\nsystems to benefit humanity.", "paper_summary_zh": "\u7814\u7a76\u4eba\u54e1\u6295\u5165\u5927\u91cf\u5fc3\u529b\u958b\u767c\u529f\u80fd\u5f37\u5927\u7684\u901a\u7528\u4ee3\u7406\uff0c\u5176\u4e2d\u57fa\u790e\u6a21\u578b\u88ab\u7528\u4f5c\u4ee3\u7406\u7cfb\u7d71\u4e2d\u7684\u6a21\u7d44\uff08\u4f8b\u5982\u601d\u8003\u93c8\u3001\u81ea\u6211\u53cd\u7701\u3001\u5de5\u5177\u5f62\u6210\u5668\uff09\u3002\u7136\u800c\uff0c\u6a5f\u5668\u5b78\u7fd2\u7684\u6b77\u53f2\u544a\u8a34\u6211\u5011\uff0c\u4eba\u5de5\u8a2d\u8a08\u7684\u89e3\u6c7a\u65b9\u6848\u6700\u7d42\u6703\u88ab\u5b78\u7fd2\u5230\u7684\u89e3\u6c7a\u65b9\u6848\u53d6\u4ee3\u3002\u6211\u5011\u5236\u5b9a\u4e86\u4e00\u500b\u65b0\u7684\u7814\u7a76\u9818\u57df\uff0c\u5373\u4ee3\u7406\u7cfb\u7d71\u81ea\u52d5\u8a2d\u8a08 (ADAS)\uff0c\u5176\u76ee\u6a19\u662f\u81ea\u52d5\u5efa\u7acb\u5f37\u5927\u7684\u4ee3\u7406\u7cfb\u7d71\u8a2d\u8a08\uff0c\u5305\u62ec\u767c\u660e\u65b0\u7a4e\u7684\u5efa\u69cb\u5340\u584a\u548c/\u6216\u4ee5\u65b0\u65b9\u5f0f\u7d44\u5408\u5b83\u5011\u3002\u6211\u5011\u9032\u4e00\u6b65\u8b49\u660e\uff0cADAS \u4e2d\u5b58\u5728\u4e00\u7a2e\u5c1a\u672a\u63a2\u7d22\u4f46\u5f88\u6709\u524d\u666f\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u4ee3\u7406\u53ef\u4ee5\u7528\u7a0b\u5f0f\u78bc\u5b9a\u7fa9\uff0c\u800c\u65b0\u7684\u4ee3\u7406\u53ef\u4ee5\u7531\u5143\u4ee3\u7406\u81ea\u52d5\u767c\u73fe\uff0c\u5728\u7a0b\u5f0f\u78bc\u4e2d\u7de8\u5beb\u51fa\u66f4\u597d\u7684\u4ee3\u7406\u3002\u7531\u65bc\u7a0b\u5f0f\u8a9e\u8a00\u662f\u5716\u9748\u5b8c\u5099\u7684\uff0c\u56e0\u6b64\u6b64\u65b9\u6cd5\u7406\u8ad6\u4e0a\u53ef\u4ee5\u5b78\u7fd2\u4efb\u4f55\u53ef\u80fd\u7684\u4ee3\u7406\u7cfb\u7d71\uff1a\u5305\u62ec\u65b0\u63d0\u793a\u3001\u5de5\u5177\u4f7f\u7528\u3001\u63a7\u5236\u6d41\u7a0b\u53ca\u5176\u7d44\u5408\u3002\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u500b\u7c21\u55ae\u4f46\u6709\u6548\u7684\u6f14\u7b97\u6cd5\uff0c\u540d\u70ba\u5143\u4ee3\u7406\u641c\u5c0b\uff0c\u4ee5\u5c55\u793a\u9019\u500b\u60f3\u6cd5\uff0c\u5176\u4e2d\u5143\u4ee3\u7406\u6839\u64da\u4e0d\u65b7\u6210\u9577\u7684\u5148\u524d\u767c\u73fe\u6a94\u6848\uff0c\u53cd\u8986\u7de8\u5beb\u51fa\u6709\u8da3\u7684\u65b0\u4ee3\u7406\u3002\u900f\u904e\u5728\u7de8\u78bc\u3001\u79d1\u5b78\u548c\u6578\u5b78\u7b49\u591a\u500b\u9818\u57df\u9032\u884c\u5ee3\u6cdb\u7684\u5be6\u9a57\uff0c\u6211\u5011\u8b49\u660e\u6211\u5011\u7684\u6f14\u7b97\u6cd5\u53ef\u4ee5\u9010\u6b65\u767c\u660e\u5177\u6709\u65b0\u7a4e\u8a2d\u8a08\u7684\u4ee3\u7406\uff0c\u5176\u6548\u80fd\u9060\u9060\u512a\u65bc\u6700\u5148\u9032\u7684\u4eba\u5de5\u8a2d\u8a08\u4ee3\u7406\u3002\u91cd\u8981\u7684\u662f\uff0c\u6211\u5011\u59cb\u7d42\u89c0\u5bdf\u5230\u4e00\u500b\u9a5a\u4eba\u7684\u7d50\u679c\uff1a\u5373\u4f7f\u5728\u8de8\u9818\u57df\u548c\u6a21\u578b\u50b3\u8f38\u6642\uff0c\u7531\u5143\u4ee3\u7406\u641c\u5c0b\u767c\u660e\u7684\u4ee3\u7406\u4ecd\u80fd\u7dad\u6301\u512a\u7570\u7684\u6548\u80fd\uff0c\u8b49\u660e\u5b83\u5011\u7684\u7a69\u5065\u6027\u548c\u666e\u904d\u6027\u3002\u53ea\u8981\u6211\u5011\u5b89\u5168\u5730\u958b\u767c\u5b83\uff0c\u6211\u5011\u7684\u7814\u7a76\u8aaa\u660e\u4e86\u4e00\u500b\u4ee4\u4eba\u8208\u596e\u7684\u65b0\u7814\u7a76\u65b9\u5411\u7684\u6f5b\u529b\uff0c\u5373\u81ea\u52d5\u8a2d\u8a08\u529f\u80fd\u66f4\u5f37\u5927\u7684\u4ee3\u7406\u7cfb\u7d71\uff0c\u4ee5\u9020\u798f\u4eba\u985e\u3002", "author": "Shengran Hu et.al.", "authors": "Shengran Hu, Cong Lu, Jeff Clune", "id": "2408.08435v1", "paper_url": "http://arxiv.org/abs/2408.08435v1", "repo": "https://github.com/shengranhu/adas"}}