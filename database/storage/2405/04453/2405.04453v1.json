{"2405.04453": {"publish_time": "2024-05-07", "title": "Towards Continual Knowledge Graph Embedding via Incremental Distillation", "paper_summary": "Traditional knowledge graph embedding (KGE) methods typically require\npreserving the entire knowledge graph (KG) with significant training costs when\nnew knowledge emerges. To address this issue, the continual knowledge graph\nembedding (CKGE) task has been proposed to train the KGE model by learning\nemerging knowledge efficiently while simultaneously preserving decent old\nknowledge. However, the explicit graph structure in KGs, which is critical for\nthe above goal, has been heavily ignored by existing CKGE methods. On the one\nhand, existing methods usually learn new triples in a random order, destroying\nthe inner structure of new KGs. On the other hand, old triples are preserved\nwith equal priority, failing to alleviate catastrophic forgetting effectively.\nIn this paper, we propose a competitive method for CKGE based on incremental\ndistillation (IncDE), which considers the full use of the explicit graph\nstructure in KGs. First, to optimize the learning order, we introduce a\nhierarchical strategy, ranking new triples for layer-by-layer learning. By\nemploying the inter- and intra-hierarchical orders together, new triples are\ngrouped into layers based on the graph structure features. Secondly, to\npreserve the old knowledge effectively, we devise a novel incremental\ndistillation mechanism, which facilitates the seamless transfer of entity\nrepresentations from the previous layer to the next one, promoting old\nknowledge preservation. Finally, we adopt a two-stage training paradigm to\navoid the over-corruption of old knowledge influenced by under-trained new\nknowledge. Experimental results demonstrate the superiority of IncDE over\nstate-of-the-art baselines. Notably, the incremental distillation mechanism\ncontributes to improvements of 0.2%-6.5% in the mean reciprocal rank (MRR)\nscore.", "paper_summary_zh": "<paragraph>\u50b3\u7d71\u77e5\u8b58\u5716\u8868\u5d4c\u5165 (KGE) \u65b9\u6cd5\u901a\u5e38\u9700\u8981\u5728\u51fa\u73fe\u65b0\u77e5\u8b58\u6642\u4fdd\u7559\u6574\u500b\u77e5\u8b58\u5716\u8868 (KG)\uff0c\u9019\u6703\u7522\u751f\u5927\u91cf\u7684\u8a13\u7df4\u6210\u672c\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u5df2\u7d93\u63d0\u51fa\u6301\u7e8c\u77e5\u8b58\u5716\u8868\u5d4c\u5165 (CKGE) \u4efb\u52d9\uff0c\u900f\u904e\u6709\u6548\u7387\u5730\u5b78\u7fd2\u65b0\u8208\u77e5\u8b58\u4e26\u540c\u6642\u4fdd\u7559\u826f\u597d\u7684\u820a\u77e5\u8b58\uff0c\u4f86\u8a13\u7df4 KGE \u6a21\u578b\u3002\u7136\u800c\uff0c\u73fe\u6709\u7684 CKGE \u65b9\u6cd5\u56b4\u91cd\u5ffd\u7565\u4e86 KG \u4e2d\u5c0d\u4e0a\u8ff0\u76ee\u6a19\u81f3\u95dc\u91cd\u8981\u7684\u660e\u78ba\u5716\u8868\u7d50\u69cb\u3002\u4e00\u65b9\u9762\uff0c\u73fe\u6709\u65b9\u6cd5\u901a\u5e38\u4ee5\u96a8\u6a5f\u9806\u5e8f\u5b78\u7fd2\u65b0\u7684\u4e09\u5143\u7d44\uff0c\u7834\u58de\u4e86\u65b0 KG \u7684\u5167\u90e8\u7d50\u69cb\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u820a\u7684\u4e09\u5143\u7d44\u4ee5\u540c\u7b49\u7684\u512a\u5148\u9806\u5e8f\u88ab\u4fdd\u7559\uff0c\u7121\u6cd5\u6709\u6548\u6e1b\u8f15\u707d\u96e3\u6027\u907a\u5fd8\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u500b\u57fa\u65bc\u589e\u91cf\u84b8\u993e (IncDE) \u7684 CKGE \u7af6\u722d\u65b9\u6cd5\uff0c\u5b83\u8003\u616e\u4e86 KG \u4e2d\u660e\u78ba\u5716\u8868\u7d50\u69cb\u7684\u5145\u5206\u5229\u7528\u3002\u9996\u5148\uff0c\u70ba\u4e86\u512a\u5316\u5b78\u7fd2\u9806\u5e8f\uff0c\u6211\u5011\u5f15\u5165\u4e86\u4e00\u7a2e\u5206\u5c64\u7b56\u7565\uff0c\u5c0d\u65b0\u7684\u4e09\u5143\u7d44\u9032\u884c\u5206\u5c64\u5b78\u7fd2\u7684\u6392\u5e8f\u3002\u900f\u904e\u540c\u6642\u4f7f\u7528\u5c64\u9593\u548c\u5c64\u5167\u9806\u5e8f\uff0c\u65b0\u7684\u4e09\u5143\u7d44\u6703\u6839\u64da\u5716\u8868\u7d50\u69cb\u7279\u5fb5\u5206\u7d44\u5230\u4e0d\u540c\u7684\u5c64\u4e2d\u3002\u5176\u6b21\uff0c\u70ba\u4e86\u6709\u6548\u4fdd\u7559\u820a\u77e5\u8b58\uff0c\u6211\u5011\u8a2d\u8a08\u4e86\u4e00\u7a2e\u65b0\u7684\u589e\u91cf\u84b8\u993e\u6a5f\u5236\uff0c\u5b83\u4fc3\u9032\u4e86\u5be6\u9ad4\u8868\u793a\u5f9e\u524d\u4e00\u5c64\u5230\u4e0b\u4e00\u5c64\u7684\u7121\u7e2b\u50b3\u905e\uff0c\u4fc3\u9032\u4e86\u820a\u77e5\u8b58\u7684\u4fdd\u7559\u3002\u6700\u5f8c\uff0c\u6211\u5011\u63a1\u7528\u5169\u968e\u6bb5\u8a13\u7df4\u7bc4\u4f8b\uff0c\u4ee5\u907f\u514d\u53d7\u8a13\u7df4\u4e0d\u8db3\u7684\u65b0\u77e5\u8b58\u5f71\u97ff\u800c\u5c0e\u81f4\u820a\u77e5\u8b58\u904e\u5ea6\u640d\u58de\u3002\u5be6\u9a57\u7d50\u679c\u8b49\u660e\u4e86 IncDE \u512a\u65bc\u6700\u5148\u9032\u7684\u57fa\u6e96\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u589e\u91cf\u84b8\u993e\u6a5f\u5236\u6709\u52a9\u65bc\u5e73\u5747\u5012\u6578\u6392\u540d (MRR) \u5206\u6578\u63d0\u9ad8 0.2%-6.5%\u3002</paragraph>", "author": "Jiajun Liu et.al.", "authors": "Jiajun Liu, Wenjun Ke, Peng Wang, Ziyu Shang, Jinhua Gao, Guozheng Li, Ke Ji, Yanhe Liu", "id": "2405.04453v1", "paper_url": "http://arxiv.org/abs/2405.04453v1", "repo": "https://github.com/seukgcode/incde"}}