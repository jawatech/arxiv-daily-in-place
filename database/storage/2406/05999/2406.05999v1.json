{"2406.05999": {"publish_time": "2024-06-10", "title": "fSEAD: a Composable FPGA-based Streaming Ensemble Anomaly Detection Library", "paper_summary": "Machine learning ensembles combine multiple base models to produce a more\naccurate output. They can be applied to a range of machine learning problems,\nincluding anomaly detection. In this paper, we investigate how to maximize the\ncomposability and scalability of an FPGA-based streaming ensemble anomaly\ndetector (fSEAD). To achieve this, we propose a flexible computing architecture\nconsisting of multiple partially reconfigurable regions, pblocks, which each\nimplement anomaly detectors. Our proof-of-concept design supports three\nstate-of-the-art anomaly detection algorithms: Loda, RS-Hash and xStream. Each\nalgorithm is scalable, meaning multiple instances can be placed within a pblock\nto improve performance. Moreover, fSEAD is implemented using High-level\nsynthesis (HLS), meaning further custom anomaly detectors can be supported.\nPblocks are interconnected via an AXI-switch, enabling them to be composed in\nan arbitrary fashion before combining and merging results at run-time to create\nan ensemble that maximizes the use of FPGA resources and accuracy. Through\nutilizing reconfigurable Dynamic Function eXchange (DFX), the detector can be\nmodified at run-time to adapt to changing environmental conditions. We compare\nfSEAD to an equivalent central processing unit (CPU) implementation using four\nstandard datasets, with speed-ups ranging from $3\\times$ to $8\\times$.", "paper_summary_zh": "\u6a5f\u5668\u5b78\u7fd2\u5408\u594f\u7d50\u5408\u591a\u500b\u57fa\u790e\u6a21\u578b\u4f86\u7522\u751f\u66f4\u6e96\u78ba\u7684\u8f38\u51fa\u3002\u5b83\u5011\u53ef\u4ee5\u61c9\u7528\u65bc\u5404\u7a2e\u6a5f\u5668\u5b78\u7fd2\u554f\u984c\uff0c\u5305\u62ec\u7570\u5e38\u5075\u6e2c\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u63a2\u8a0e\u5982\u4f55\u6700\u5927\u5316\u57fa\u65bc FPGA \u7684\u4e32\u6d41\u5408\u594f\u7570\u5e38\u5075\u6e2c\u5668 (fSEAD) \u7684\u53ef\u7d44\u5408\u6027\u548c\u53ef\u64f4\u5145\u6027\u3002\u70ba\u6b64\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u500b\u9748\u6d3b\u7684\u904b\u7b97\u67b6\u69cb\uff0c\u7531\u591a\u500b\u90e8\u5206\u53ef\u91cd\u65b0\u914d\u7f6e\u7684\u5340\u57df (pblock) \u7d44\u6210\uff0c\u6bcf\u500b\u5340\u57df\u90fd\u5be6\u4f5c\u7570\u5e38\u5075\u6e2c\u5668\u3002\u6211\u5011\u7684\u6982\u5ff5\u9a57\u8b49\u8a2d\u8a08\u652f\u63f4\u4e09\u7a2e\u6700\u5148\u9032\u7684\u7570\u5e38\u5075\u6e2c\u6f14\u7b97\u6cd5\uff1aLoda\u3001RS-Hash \u548c xStream\u3002\u6bcf\u500b\u6f14\u7b97\u6cd5\u90fd\u662f\u53ef\u64f4\u5145\u7684\uff0c\u8868\u793a\u53ef\u4ee5\u5c07\u591a\u500b\u57f7\u884c\u500b\u9ad4\u653e\u7f6e\u5728 pblock \u5167\u4ee5\u63d0\u5347\u6548\u80fd\u3002\u6b64\u5916\uff0cfSEAD \u662f\u4f7f\u7528\u9ad8\u968e\u7d9c\u5408 (HLS) \u5be6\u4f5c\u7684\uff0c\u8868\u793a\u53ef\u4ee5\u652f\u63f4\u66f4\u591a\u81ea\u8a02\u7570\u5e38\u5075\u6e2c\u5668\u3002Pblock \u900f\u904e AXI \u4ea4\u63db\u5668\u4e92\u9023\uff0c\u8b93\u5b83\u5011\u53ef\u4ee5\u5728\u57f7\u884c\u6642\u9593\u7d44\u5408\u548c\u5408\u4f75\u7d50\u679c\u4e4b\u524d\u4ee5\u4efb\u610f\u65b9\u5f0f\u7d44\u6210\uff0c\u4ee5\u5efa\u7acb\u4e00\u500b\u6700\u5927\u5316 FPGA \u8cc7\u6e90\u548c\u7cbe\u78ba\u5ea6\u4f7f\u7528\u7684\u5408\u594f\u3002\u900f\u904e\u5229\u7528\u53ef\u91cd\u65b0\u914d\u7f6e\u7684\u52d5\u614b\u529f\u80fd\u4ea4\u63db (DFX)\uff0c\u5075\u6e2c\u5668\u53ef\u4ee5\u5728\u57f7\u884c\u6642\u9593\u4fee\u6539\u4ee5\u9069\u61c9\u8b8a\u5316\u7684\u74b0\u5883\u689d\u4ef6\u3002\u6211\u5011\u4f7f\u7528\u56db\u500b\u6a19\u6e96\u8cc7\u6599\u96c6\u5c07 fSEAD \u8207\u7b49\u6548\u7684\u4e2d\u592e\u8655\u7406\u5668 (CPU) \u5be6\u4f5c\u9032\u884c\u6bd4\u8f03\uff0c\u52a0\u901f\u7bc4\u570d\u5f9e $3\\times$ \u5230 $8\\times$\u3002", "author": "Binglei Lou et.al.", "authors": "Binglei Lou, David Boland, Philip H. W. Leong", "id": "2406.05999v1", "paper_url": "http://arxiv.org/abs/2406.05999v1", "repo": "https://github.com/bingleilou/fsead"}}