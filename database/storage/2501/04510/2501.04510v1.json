{"2501.04510": {"publish_time": "2025-01-08", "title": "CGP-Tuning: Structure-Aware Soft Prompt Tuning for Code Vulnerability Detection", "paper_summary": "Large language models (LLMs) have been proposed as powerful tools for\ndetecting software vulnerabilities, where task-specific fine-tuning is\ntypically employed to provide vulnerability-specific knowledge to the LLMs for\nthis purpose. However, traditional full-parameter fine-tuning is inefficient\nfor modern, complex LLMs, which contain billions of parameters.\n  Soft prompt tuning has been suggested as a more efficient alternative for\nfine-tuning LLMs in general cases. However, pure soft prompt tuning treats\nsource code as plain text, losing structural information inherent in source\ncode. Meanwhile, graph-enhanced soft prompt tuning methods, which aim to\naddress this issue, are unable to preserve the rich semantic information within\ncode graphs, as they are primarily designed for general graph-related tasks and\nfocus more on adjacency information. They also fail to ensure computational\nefficiency while accounting for graph-text interactions.\n  This paper, therefore, introduces a new code graph-enhanced, structure-aware\nsoft prompt tuning method for vulnerability detection, referred to as\nCGP-Tuning. It employs innovative type-aware embeddings to capture the rich\nsemantic information within code graphs, along with a novel and efficient\ncross-modal alignment module that achieves linear computational cost while\nincorporating graph-text interactions. The proposed CGP-Tuning is evaluated on\nthe latest DiverseVul dataset and the most recent open-source code LLMs,\nCodeLlama and CodeGemma. Experimental results demonstrate that CGP-Tuning\noutperforms the best state-of-the-art method by an average of 3.5 percentage\npoints in accuracy, without compromising its vulnerability detection\ncapabilities for long source code.", "paper_summary_zh": "\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u5df2\u88ab\u63d0\u51fa\u7528\u65bc\u5075\u6e2c\u8edf\u9ad4\u6f0f\u6d1e\u7684\u5f37\u5927\u5de5\u5177\uff0c\u5176\u4e2d\u4efb\u52d9\u7279\u5b9a\u5fae\u8abf\u901a\u5e38\u7528\u65bc\u63d0\u4f9b\u6f0f\u6d1e\u7279\u5b9a\u77e5\u8b58\u7d66 LLM \u4ee5\u9054\u5230\u6b64\u76ee\u7684\u3002\u7136\u800c\uff0c\u50b3\u7d71\u7684\u5b8c\u6574\u53c3\u6578\u5fae\u8abf\u5c0d\u65bc\u5305\u542b\u6578\u5341\u5104\u500b\u53c3\u6578\u7684\u73fe\u4ee3\u8907\u96dc LLM \u4f86\u8aaa\u6548\u7387\u4f4e\u4e0b\u3002\n\u8edf\u63d0\u793a\u5fae\u8abf\u5df2\u88ab\u5efa\u8b70\u4f5c\u70ba\u4e00\u822c\u60c5\u6cc1\u4e0b\u5fae\u8abf LLM \u7684\u66f4\u6709\u6548\u66ff\u4ee3\u65b9\u6848\u3002\u7136\u800c\uff0c\u7d14\u8edf\u63d0\u793a\u5fae\u8abf\u5c07\u539f\u59cb\u78bc\u8996\u70ba\u7d14\u6587\u5b57\uff0c\u5931\u53bb\u4e86\u539f\u59cb\u78bc\u4e2d\u56fa\u6709\u7684\u7d50\u69cb\u8cc7\u8a0a\u3002\u540c\u6642\uff0c\u65e8\u5728\u89e3\u6c7a\u6b64\u554f\u984c\u7684\u5716\u5f62\u589e\u5f37\u8edf\u63d0\u793a\u5fae\u8abf\u65b9\u6cd5\u7121\u6cd5\u4fdd\u7559\u7a0b\u5f0f\u78bc\u5716\u5f62\u4e2d\u7684\u8c50\u5bcc\u8a9e\u7fa9\u8cc7\u8a0a\uff0c\u56e0\u70ba\u5b83\u5011\u4e3b\u8981\u8a2d\u8a08\u7528\u65bc\u4e00\u822c\u7684\u5716\u5f62\u76f8\u95dc\u4efb\u52d9\uff0c\u4e14\u66f4\u5c08\u6ce8\u65bc\u9130\u63a5\u8cc7\u8a0a\u3002\u5b83\u5011\u4e5f\u7121\u6cd5\u5728\u8003\u91cf\u5716\u5f62\u6587\u5b57\u4e92\u52d5\u7684\u540c\u6642\u78ba\u4fdd\u904b\u7b97\u6548\u7387\u3002\n\u56e0\u6b64\uff0c\u672c\u6587\u4ecb\u7d39\u4e86\u4e00\u7a2e\u65b0\u7684\u7a0b\u5f0f\u78bc\u5716\u5f62\u589e\u5f37\u3001\u7d50\u69cb\u611f\u77e5\u8edf\u63d0\u793a\u5fae\u8abf\u65b9\u6cd5\u4f86\u5075\u6e2c\u6f0f\u6d1e\uff0c\u7a31\u70ba CGP-Tuning\u3002\u5b83\u63a1\u7528\u5275\u65b0\u7684\u985e\u578b\u611f\u77e5\u5d4c\u5165\u4f86\u64f7\u53d6\u7a0b\u5f0f\u78bc\u5716\u5f62\u4e2d\u7684\u8c50\u5bcc\u8a9e\u7fa9\u8cc7\u8a0a\uff0c\u4ee5\u53ca\u4e00\u500b\u65b0\u7a4e\u4e14\u6709\u6548\u7684\u8de8\u6a21\u614b\u5c0d\u9f4a\u6a21\u7d44\uff0c\u8a72\u6a21\u7d44\u5728\u7d0d\u5165\u5716\u5f62\u6587\u5b57\u4e92\u52d5\u7684\u540c\u6642\u5be6\u73fe\u7dda\u6027\u904b\u7b97\u6210\u672c\u3002\u63d0\u8b70\u7684 CGP-Tuning \u5728\u6700\u65b0\u7684 DiverseVul \u8cc7\u6599\u96c6\u548c\u6700\u65b0\u7684\u958b\u6e90\u7a0b\u5f0f\u78bc LLM\uff08CodeLlama \u548c CodeGemma\uff09\u4e0a\u9032\u884c\u8a55\u4f30\u3002\u5be6\u9a57\u7d50\u679c\u8b49\u660e\uff0cCGP-Tuning \u5728\u6e96\u78ba\u5ea6\u65b9\u9762\u5e73\u5747\u6bd4\u6700\u4f73\u7684\u73fe\u6709\u6280\u8853\u9ad8\u51fa 3.5 \u500b\u767e\u5206\u9ede\uff0c\u540c\u6642\u4e0d\u640d\u5bb3\u5176\u5c0d\u9577\u539f\u59cb\u78bc\u7684\u6f0f\u6d1e\u5075\u6e2c\u80fd\u529b\u3002", "author": "Ruijun Feng et.al.", "authors": "Ruijun Feng, Hammond Pearce, Pietro Liguori, Yulei Sui", "id": "2501.04510v1", "paper_url": "http://arxiv.org/abs/2501.04510v1", "repo": "null"}}