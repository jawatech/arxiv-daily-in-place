{"2409.04181": {"publish_time": "2024-09-06", "title": "Combining LLMs and Knowledge Graphs to Reduce Hallucinations in Question Answering", "paper_summary": "Advancements in natural language processing have revolutionized the way we\ncan interact with digital information systems, such as databases, making them\nmore accessible. However, challenges persist, especially when accuracy is\ncritical, as in the biomedical domain. A key issue is the hallucination\nproblem, where models generate information unsupported by the underlying data,\npotentially leading to dangerous misinformation. This paper presents a novel\napproach designed to bridge this gap by combining Large Language Models (LLM)\nand Knowledge Graphs (KG) to improve the accuracy and reliability of\nquestion-answering systems, on the example of a biomedical KG. Built on the\nLangChain framework, our method incorporates a query checker that ensures the\nsyntactical and semantic validity of LLM-generated queries, which are then used\nto extract information from a Knowledge Graph, substantially reducing errors\nlike hallucinations. We evaluated the overall performance using a new benchmark\ndataset of 50 biomedical questions, testing several LLMs, including GPT-4 Turbo\nand llama3:70b. Our results indicate that while GPT-4 Turbo outperforms other\nmodels in generating accurate queries, open-source models like llama3:70b show\npromise with appropriate prompt engineering. To make this approach accessible,\na user-friendly web-based interface has been developed, allowing users to input\nnatural language queries, view generated and corrected Cypher queries, and\nverify the resulting paths for accuracy. Overall, this hybrid approach\neffectively addresses common issues such as data gaps and hallucinations,\noffering a reliable and intuitive solution for question answering systems. The\nsource code for generating the results of this paper and for the user-interface\ncan be found in our Git repository: https://git.zib.de/lpusch/cyphergenkg-gui", "paper_summary_zh": "\u81ea\u7136\u8a9e\u8a00\u8655\u7406\u7684\u9032\u5c55\u5fb9\u5e95\u6539\u8b8a\u4e86\u6211\u5011\u8207\u6578\u4f4d\u8cc7\u8a0a\u7cfb\u7d71\uff08\u4f8b\u5982\u8cc7\u6599\u5eab\uff09\u4e92\u52d5\u7684\u65b9\u5f0f\uff0c\u8b93\u9019\u4e9b\u7cfb\u7d71\u8b8a\u5f97\u66f4\u6613\u65bc\u5b58\u53d6\u3002\u7136\u800c\uff0c\u6311\u6230\u4ecd\u7136\u5b58\u5728\uff0c\u5c24\u5176\u662f\u5728\u6e96\u78ba\u6027\u81f3\u95dc\u91cd\u8981\u7684\u60c5\u6cc1\u4e0b\uff0c\u4f8b\u5982\u5728\u751f\u7269\u91ab\u5b78\u9818\u57df\u3002\u4e00\u500b\u95dc\u9375\u554f\u984c\u662f\u5e7b\u89ba\u554f\u984c\uff0c\u5176\u4e2d\u6a21\u578b\u6703\u7522\u751f\u672a\u7d93\u57fa\u790e\u8cc7\u6599\u9a57\u8b49\u7684\u8cc7\u8a0a\uff0c\u53ef\u80fd\u5c0e\u81f4\u5371\u96aa\u7684\u932f\u8aa4\u8cc7\u8a0a\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u7a2e\u65b0\u7a4e\u7684\u65b9\u6cd5\uff0c\u65e8\u5728\u900f\u904e\u7d50\u5408\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u548c\u77e5\u8b58\u5716\u8b5c (KG) \u4f86\u5f4c\u88dc\u9019\u500b\u5dee\u8ddd\uff0c\u4ee5\u63d0\u9ad8\u751f\u7269\u91ab\u5b78 KG \u4e2d\u554f\u7b54\u7cfb\u7d71\u7684\u6e96\u78ba\u6027\u548c\u53ef\u9760\u6027\u3002\u6211\u5011\u7684\u6280\u8853\u5efa\u7acb\u5728 LangChain \u6846\u67b6\u4e0a\uff0c\u7d50\u5408\u4e86\u4e00\u500b\u67e5\u8a62\u6aa2\u67e5\u5668\uff0c\u53ef\u78ba\u4fdd LLM \u751f\u6210\u7684\u67e5\u8a62\u5728\u8a9e\u6cd5\u548c\u8a9e\u610f\u4e0a\u6709\u6548\uff0c\u7136\u5f8c\u7528\u65bc\u5f9e\u77e5\u8b58\u5716\u8b5c\u4e2d\u8403\u53d6\u8cc7\u8a0a\uff0c\u5927\u5e45\u6e1b\u5c11\u5e7b\u89ba\u7b49\u932f\u8aa4\u3002\u6211\u5011\u4f7f\u7528\u4e00\u500b\u65b0\u7684 50 \u500b\u751f\u7269\u91ab\u5b78\u554f\u984c\u57fa\u6e96\u8cc7\u6599\u96c6\u8a55\u4f30\u4e86\u6574\u9ad4\u6548\u80fd\uff0c\u6e2c\u8a66\u4e86\u5305\u62ec GPT-4 Turbo \u548c llama3:70b \u5728\u5167\u7684\u5e7e\u500b LLM\u3002\u6211\u5011\u7684\u7d50\u679c\u986f\u793a\uff0c\u96d6\u7136 GPT-4 Turbo \u5728\u7522\u751f\u6e96\u78ba\u67e5\u8a62\u65b9\u9762\u512a\u65bc\u5176\u4ed6\u6a21\u578b\uff0c\u4f46\u50cf llama3:70b \u9019\u6a23\u7684\u958b\u6e90\u6a21\u578b\u5728\u9069\u7576\u7684\u63d0\u793a\u5de5\u7a0b\u4e0b\u986f\u793a\u51fa\u524d\u666f\u3002\u70ba\u4e86\u8b93\u9019\u7a2e\u65b9\u6cd5\u6613\u65bc\u4f7f\u7528\uff0c\u6211\u5011\u958b\u767c\u4e86\u4e00\u500b\u4f7f\u7528\u8005\u53cb\u5584\u7684\u7db2\u8def\u4ecb\u9762\uff0c\u8b93\u4f7f\u7528\u8005\u53ef\u4ee5\u8f38\u5165\u81ea\u7136\u8a9e\u8a00\u67e5\u8a62\u3001\u6aa2\u8996\u7522\u751f\u548c\u66f4\u6b63\u7684 Cypher \u67e5\u8a62\uff0c\u4e26\u9a57\u8b49\u7d50\u679c\u8def\u5f91\u7684\u6e96\u78ba\u6027\u3002\u7e3d\u9ad4\u800c\u8a00\uff0c\u9019\u7a2e\u6df7\u5408\u65b9\u6cd5\u6709\u6548\u5730\u89e3\u6c7a\u4e86\u8cc7\u6599\u5dee\u8ddd\u548c\u5e7b\u89ba\u7b49\u5e38\u898b\u554f\u984c\uff0c\u70ba\u554f\u7b54\u7cfb\u7d71\u63d0\u4f9b\u4e86\u4e00\u500b\u53ef\u9760\u4e14\u76f4\u89c0\u7684\u89e3\u6c7a\u65b9\u6848\u3002\u672c\u6587\u7d50\u679c\u7522\u751f\u7684\u539f\u59cb\u78bc\u548c\u4f7f\u7528\u8005\u4ecb\u9762\u7684\u539f\u59cb\u78bc\u53ef\u4ee5\u5728\u6211\u5011\u7684 Git \u5132\u5b58\u5eab\u4e2d\u627e\u5230\uff1ahttps://git.zib.de/lpusch/cyphergenkg-gui", "author": "Larissa Pusch et.al.", "authors": "Larissa Pusch, Tim O. F. Conrad", "id": "2409.04181v1", "paper_url": "http://arxiv.org/abs/2409.04181v1", "repo": "null"}}