{"2410.23918": {"publish_time": "2024-10-31", "title": "BitStack: Fine-Grained Size Control for Compressed Large Language Models in Variable Memory Environments", "paper_summary": "Large language models (LLMs) have revolutionized numerous applications, yet\ntheir deployment remains challenged by memory constraints on local devices.\nWhile scaling laws have enhanced LLM capabilities, the primary bottleneck has\nshifted from \\textit{capability} to \\textit{availability}, emphasizing the need\nfor efficient memory management. Traditional compression methods, such as\nquantization, often require predefined compression ratios and separate\ncompression processes for each setting, complicating deployment in variable\nmemory environments. In this paper, we introduce \\textbf{BitStack}, a novel,\ntraining-free weight compression approach that enables megabyte-level\ntrade-offs between memory usage and model performance. By leveraging weight\ndecomposition, BitStack can dynamically adjust the model size with minimal\ntransmission between running memory and storage devices. Our approach\niteratively decomposes weight matrices while considering the significance of\neach parameter, resulting in an approximately 1-bit per parameter residual\nblock in each decomposition iteration. These blocks are sorted and stacked in\nstorage as basic transmission units, with different quantities loaded based on\ncurrent memory availability. Extensive experiments across a wide range of tasks\ndemonstrate that, despite offering fine-grained size control, BitStack\nconsistently matches or surpasses strong quantization baselines, particularly\nat extreme compression ratios. To the best of our knowledge, this is the first\ndecomposition-based method that effectively bridges the gap to practical\ncompression techniques like quantization. Code is available at\nhttps://github.com/xinghaow99/BitStack.", "paper_summary_zh": "\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u5df2\u7d93\u9769\u65b0\u4e86\u8a31\u591a\u61c9\u7528\u7a0b\u5f0f\uff0c\u4f46\u7531\u65bc\u672c\u5730\u88dd\u7f6e\u7684\u8a18\u61b6\u9ad4\u9650\u5236\uff0c\u5176\u90e8\u7f72\u4ecd\u7136\u9762\u81e8\u6311\u6230\u3002\u5118\u7ba1\u898f\u6a21\u5b9a\u5f8b\u589e\u5f37\u4e86 LLM \u7684\u529f\u80fd\uff0c\u4f46\u4e3b\u8981\u7684\u74f6\u9838\u5df2\u5f9e\u300c\u529f\u80fd\u300d\u8f49\u79fb\u5230\u300c\u53ef\u7528\u6027\u300d\uff0c\u5f37\u8abf\u4e86\u6709\u6548\u8a18\u61b6\u9ad4\u7ba1\u7406\u7684\u9700\u6c42\u3002\u50b3\u7d71\u7684\u58d3\u7e2e\u65b9\u6cd5\uff0c\u4f8b\u5982\u91cf\u5316\uff0c\u901a\u5e38\u9700\u8981\u9810\u5b9a\u7fa9\u7684\u58d3\u7e2e\u7387\uff0c\u4ee5\u53ca\u91dd\u5c0d\u6bcf\u500b\u8a2d\u5b9a\u9032\u884c\u7368\u7acb\u7684\u58d3\u7e2e\u7a0b\u5e8f\uff0c\u9019\u4f7f\u5f97\u5728\u8b8a\u52d5\u7684\u8a18\u61b6\u9ad4\u74b0\u5883\u4e2d\u90e8\u7f72\u8b8a\u5f97\u8907\u96dc\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u4ecb\u7d39\u4e86 **BitStack**\uff0c\u9019\u662f\u4e00\u7a2e\u65b0\u7a4e\u7684\u514d\u8a13\u7df4\u6b0a\u91cd\u58d3\u7e2e\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u8a18\u61b6\u9ad4\u4f7f\u7528\u91cf\u548c\u6a21\u578b\u6548\u80fd\u4e4b\u9593\u9032\u884c\u5146\u4f4d\u5143\u7d44\u7b49\u7d1a\u7684\u6b0a\u8861\u3002\u900f\u904e\u5229\u7528\u6b0a\u91cd\u5206\u89e3\uff0cBitStack \u53ef\u4ee5\u52d5\u614b\u8abf\u6574\u6a21\u578b\u5927\u5c0f\uff0c\u540c\u6642\u5c07\u57f7\u884c\u8a18\u61b6\u9ad4\u548c\u5132\u5b58\u88dd\u7f6e\u4e4b\u9593\u7684\u50b3\u8f38\u964d\u5230\u6700\u4f4e\u3002\u6211\u5011\u7684\u505a\u6cd5\u662f\u53cd\u8986\u5206\u89e3\u6b0a\u91cd\u77e9\u9663\uff0c\u540c\u6642\u8003\u616e\u6bcf\u500b\u53c3\u6578\u7684\u91cd\u8981\u6027\uff0c\u5c0e\u81f4\u6bcf\u500b\u5206\u89e3\u53cd\u8986\u904b\u7b97\u4e2d\u7522\u751f\u5927\u7d04\u6bcf\u53c3\u6578 1 \u4f4d\u5143\u7684\u6b98\u5dee\u5340\u584a\u3002\u9019\u4e9b\u5340\u584a\u6703\u4f9d\u5e8f\u6392\u5217\u4e26\u5806\u758a\u5728\u5132\u5b58\u4e2d\uff0c\u4f5c\u70ba\u57fa\u672c\u7684\u50b3\u8f38\u55ae\u4f4d\uff0c\u6839\u64da\u76ee\u524d\u7684\u8a18\u61b6\u9ad4\u53ef\u7528\u91cf\u8f09\u5165\u4e0d\u540c\u7684\u6578\u91cf\u3002\u5728\u5404\u7a2e\u4efb\u52d9\u4e2d\u9032\u884c\u7684\u5ee3\u6cdb\u5be6\u9a57\u8b49\u660e\uff0c\u5118\u7ba1\u63d0\u4f9b\u4e86\u7d30\u7dfb\u7684\u5c3a\u5bf8\u63a7\u5236\uff0cBitStack \u59cb\u7d42\u7b26\u5408\u6216\u8d85\u8d8a\u5f37\u5927\u7684\u91cf\u5316\u57fa\u6e96\uff0c\u7279\u5225\u662f\u5728\u6975\u7aef\u7684\u58d3\u7e2e\u7387\u4e0b\u3002\u64da\u6211\u5011\u6240\u77e5\uff0c\u9019\u662f\u7b2c\u4e00\u500b\u57fa\u65bc\u5206\u89e3\u7684\u65b9\u6cd5\uff0c\u6709\u6548\u5730\u5f4c\u5408\u4e86\u91cf\u5316\u7b49\u5be6\u7528\u58d3\u7e2e\u6280\u8853\u7684\u5dee\u8ddd\u3002\u7a0b\u5f0f\u78bc\u53ef\u65bc https://github.com/xinghaow99/BitStack \u53d6\u5f97\u3002", "author": "Xinghao Wang et.al.", "authors": "Xinghao Wang, Pengyu Wang, Bo Wang, Dong Zhang, Yunhua Zhou, Xipeng Qiu", "id": "2410.23918v1", "paper_url": "http://arxiv.org/abs/2410.23918v1", "repo": "https://github.com/xinghaow99/bitstack"}}