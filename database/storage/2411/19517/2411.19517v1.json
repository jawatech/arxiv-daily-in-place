{"2411.19517": {"publish_time": "2024-11-29", "title": "RL-MILP Solver: A Reinforcement Learning Approach for Solving Mixed-Integer Linear Programs with Graph Neural Networks", "paper_summary": "Mixed-Integer Linear Programming (MILP) is an optimization technique widely\nused in various fields. Primal heuristics, which reduce the search space of\nMILP, have enabled traditional solvers (e.g., Gurobi) to efficiently find\nhigh-quality solutions. However, traditional primal heuristics rely on expert\nknowledge, motivating the advent of machine learning (ML)-based primal\nheuristics that learn repetitive patterns in MILP. Nonetheless, existing\nML-based primal heuristics do not guarantee solution feasibility (i.e.,\nsatisfying all constraints) and primarily focus on prediction for binary\ndecision variables. When addressing MILP involving non-binary integer variables\nusing ML-based approaches, feasibility issues can become even more pronounced.\nSince finding an optimal solution requires satisfying all constraints,\naddressing feasibility is critical. To overcome these limitations, we propose a\nnovel reinforcement learning (RL)-based solver that interacts with MILP to find\nfeasible solutions, rather than delegating sub-problems to traditional solvers.\nWe design reward functions tailored for MILP, which enables the RL agent to\nlearn relationships between decision variables and constraints. Additionally,\nto effectively model complex relationships among decision variables, we\nleverage a Transformer encoder-based graph neural network (GNN). Our\nexperimental results demonstrate that the proposed method can solve MILP\nproblems and find near-optimal solutions without delegating the remainder to\ntraditional solvers. The proposed method provides a meaningful step forward as\nan initial study in solving MILP problems end-to-end based solely on ML.", "paper_summary_zh": "\u6df7\u5408\u6574\u6578\u7dda\u6027\u898f\u5283 (MILP) \u662f\u4e00\u7a2e\u5ee3\u6cdb\u7528\u65bc\u5404\u500b\u9818\u57df\u7684\u6700\u4f73\u5316\u6280\u8853\u3002\u7c21\u5316 MILP \u641c\u5c0b\u7a7a\u9593\u7684\u539f\u59cb\u555f\u767c\u6cd5\u8b93\u50b3\u7d71\u6c42\u89e3\u5668 (\u4f8b\u5982 Gurobi) \u80fd\u5920\u6709\u6548\u7387\u5730\u627e\u5230\u9ad8\u54c1\u8cea\u7684\u89e3\u6cd5\u3002\u7136\u800c\uff0c\u50b3\u7d71\u7684\u539f\u59cb\u555f\u767c\u6cd5\u4ef0\u8cf4\u5c08\u5bb6\u77e5\u8b58\uff0c\u9019\u4fc3\u4f7f\u57fa\u65bc\u6a5f\u5668\u5b78\u7fd2 (ML) \u7684\u539f\u59cb\u555f\u767c\u6cd5\u51fa\u73fe\uff0c\u9019\u7a2e\u555f\u767c\u6cd5\u6703\u5b78\u7fd2 MILP \u4e2d\u7684\u91cd\u8907\u6a21\u5f0f\u3002\u5118\u7ba1\u5982\u6b64\uff0c\u73fe\u6709\u7684\u57fa\u65bc ML \u7684\u539f\u59cb\u555f\u767c\u6cd5\u7121\u6cd5\u4fdd\u8b49\u89e3\u6cd5\u7684\u53ef\u884c\u6027 (\u4ea6\u5373\u6eff\u8db3\u6240\u6709\u7d04\u675f\u689d\u4ef6)\uff0c\u800c\u4e14\u4e3b\u8981\u5c08\u6ce8\u65bc\u9810\u6e2c\u4e8c\u5143\u6c7a\u7b56\u8b8a\u6578\u3002\u7576\u4f7f\u7528\u57fa\u65bc ML \u7684\u65b9\u6cd5\u8655\u7406\u5305\u542b\u975e\u4e8c\u5143\u6574\u6578\u8b8a\u6578\u7684 MILP \u6642\uff0c\u53ef\u884c\u6027\u554f\u984c\u53ef\u80fd\u6703\u8b8a\u5f97\u66f4\u52a0\u660e\u986f\u3002\u7531\u65bc\u627e\u5230\u6700\u4f73\u89e3\u6cd5\u9700\u8981\u6eff\u8db3\u6240\u6709\u7d04\u675f\u689d\u4ef6\uff0c\u56e0\u6b64\u8655\u7406\u53ef\u884c\u6027\u81f3\u95dc\u91cd\u8981\u3002\u70ba\u4e86\u514b\u670d\u9019\u4e9b\u9650\u5236\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u7a2e\u65b0\u7684\u57fa\u65bc\u5f37\u5316\u5b78\u7fd2 (RL) \u7684\u6c42\u89e3\u5668\uff0c\u5b83\u6703\u8207 MILP \u4e92\u52d5\u4ee5\u627e\u5230\u53ef\u884c\u7684\u89e3\u6cd5\uff0c\u800c\u4e0d\u662f\u5c07\u5b50\u554f\u984c\u59d4\u6d3e\u7d66\u50b3\u7d71\u6c42\u89e3\u5668\u3002\u6211\u5011\u8a2d\u8a08\u4e86\u5c08\u9580\u91dd\u5c0d MILP \u7684\u734e\u52f5\u51fd\u6578\uff0c\u8b93 RL \u4ee3\u7406\u7a0b\u5f0f\u80fd\u5920\u5b78\u7fd2\u6c7a\u7b56\u8b8a\u6578\u8207\u7d04\u675f\u689d\u4ef6\u4e4b\u9593\u7684\u95dc\u4fc2\u3002\u6b64\u5916\uff0c\u70ba\u4e86\u6709\u6548\u5730\u6a21\u64ec\u6c7a\u7b56\u8b8a\u6578\u4e4b\u9593\u7684\u8907\u96dc\u95dc\u4fc2\uff0c\u6211\u5011\u5229\u7528\u4e86\u57fa\u65bc Transformer \u7de8\u78bc\u5668\u7684\u5716\u795e\u7d93\u7db2\u8def (GNN)\u3002\u6211\u5011\u7684\u5be6\u9a57\u7d50\u679c\u8b49\u660e\uff0c\u6240\u63d0\u51fa\u7684\u65b9\u6cd5\u53ef\u4ee5\u89e3\u6c7a MILP \u554f\u984c\uff0c\u4e26\u5728\u4e0d\u5c07\u5269\u9918\u554f\u984c\u59d4\u6d3e\u7d66\u50b3\u7d71\u6c42\u89e3\u5668\u7684\u72c0\u6cc1\u4e0b\u627e\u5230\u8fd1\u4e4e\u6700\u4f73\u7684\u89e3\u6cd5\u3002\u6240\u63d0\u51fa\u7684\u65b9\u6cd5\u4f5c\u70ba\u4e00\u500b\u7d14\u7cb9\u57fa\u65bc ML \u7684\u7aef\u5c0d\u7aef\u89e3\u6c7a MILP \u554f\u984c\u7684\u521d\u6b65\u7814\u7a76\uff0c\u63d0\u4f9b\u4e86\u6709\u610f\u7fa9\u7684\u9032\u5c55\u3002", "author": "Tae-Hoon Lee et.al.", "authors": "Tae-Hoon Lee, Min-Soo Kim", "id": "2411.19517v1", "paper_url": "http://arxiv.org/abs/2411.19517v1", "repo": "null"}}