{"2406.03482": {"publish_time": "2024-06-05", "title": "QJL: 1-Bit Quantized JL Transform for KV Cache Quantization with Zero Overhead", "paper_summary": "Serving LLMs requires substantial memory due to the storage requirements of\nKey-Value (KV) embeddings in the KV cache, which grows with sequence length. An\neffective approach to compress KV cache is quantization. However, traditional\nquantization methods face significant memory overhead due to the need to store\nquantization constants (at least a zero point and a scale) in full precision\nper data block. Depending on the block size, this overhead can add 1 or 2 bits\nper quantized number. We introduce QJL, a new quantization approach that\nconsists of a Johnson-Lindenstrauss (JL) transform followed by sign-bit\nquantization. In contrast to existing methods, QJL eliminates memory overheads\nby removing the need for storing quantization constants. We propose an\nasymmetric estimator for the inner product of two vectors and demonstrate that\napplying QJL to one vector and a standard JL transform without quantization to\nthe other provides an unbiased estimator with minimal distortion. We have\ndeveloped an efficient implementation of the QJL sketch and its corresponding\ninner product estimator, incorporating a lightweight CUDA kernel for optimized\ncomputation. When applied across various LLMs and NLP tasks to quantize the KV\ncache to only 3 bits, QJL demonstrates a more than fivefold reduction in KV\ncache memory usage without compromising accuracy, all while achieving faster\nruntime. Codes are available at \\url{https://github.com/amirzandieh/QJL}.", "paper_summary_zh": "\u670d\u52a1 LLM \u9700\u8981\u5927\u91cf\u7684\u5185\u5b58\uff0c\u8fd9\u662f\u56e0\u4e3a KV \u7f13\u5b58\u4e2d\u952e\u503c (KV) \u5d4c\u5165\u7684\u5b58\u50a8\u9700\u6c42\uff0c\u5b83\u4f1a\u968f\u7740\u5e8f\u5217\u957f\u5ea6\u589e\u957f\u800c\u589e\u52a0\u3002\u538b\u7f29 KV \u7f13\u5b58\u7684\u6709\u6548\u65b9\u6cd5\u662f\u91cf\u5316\u3002\u4f46\u662f\uff0c\u4f20\u7edf\u7684\u91cf\u5316\u65b9\u6cd5\u7531\u4e8e\u9700\u8981\u4ee5\u5b8c\u6574\u7cbe\u5ea6\u5b58\u50a8\u91cf\u5316\u5e38\u6570\uff08\u81f3\u5c11\u4e00\u4e2a\u96f6\u70b9\u548c\u4e00\u4e2a\u6bd4\u4f8b\uff09\u800c\u9762\u4e34\u5de8\u5927\u7684\u5185\u5b58\u5f00\u9500\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6570\u636e\u5757\u7684\u5927\u5c0f\uff0c\u6b64\u5f00\u9500\u53ef\u80fd\u4e3a\u6bcf\u4e2a\u91cf\u5316\u6570\u5b57\u589e\u52a0 1 \u6216 2 \u4f4d\u3002\u6211\u4eec\u5f15\u5165\u4e86 QJL\uff0c\u8fd9\u662f\u4e00\u79cd\u65b0\u7684\u91cf\u5316\u65b9\u6cd5\uff0c\u5b83\u5305\u62ec\u4e00\u4e2a Johnson-Lindenstrauss (JL) \u53d8\u6362\uff0c\u540e\u9762\u662f\u7b26\u53f7\u4f4d\u91cf\u5316\u3002\u4e0e\u73b0\u6709\u65b9\u6cd5\u76f8\u6bd4\uff0cQJL \u901a\u8fc7\u6d88\u9664\u5b58\u50a8\u91cf\u5316\u5e38\u6570\u7684\u9700\u8981\u6765\u6d88\u9664\u5185\u5b58\u5f00\u9500\u3002\u6211\u4eec\u4e3a\u4e24\u4e2a\u5411\u91cf\u7684\u5185\u79ef\u63d0\u51fa\u4e86\u4e00\u4e2a\u975e\u5bf9\u79f0\u4f30\u8ba1\u91cf\uff0c\u5e76\u8bc1\u660e\u5c06 QJL \u5e94\u7528\u4e8e\u4e00\u4e2a\u5411\u91cf\uff0c\u5e76\u5c06\u6807\u51c6 JL \u53d8\u6362\u5e94\u7528\u4e8e\u53e6\u4e00\u4e2a\u5411\u91cf\uff08\u4e0d\u91cf\u5316\uff09\u800c\u65e0\u5931\u771f\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65e0\u504f\u4f30\u8ba1\u91cf\u3002\u6211\u4eec\u5f00\u53d1\u4e86 QJL \u8349\u56fe\u53ca\u5176\u5bf9\u5e94\u7684\u5185\u79ef\u4f30\u8ba1\u91cf\u7684\u6709\u6548\u5b9e\u73b0\uff0c\u5e76\u52a0\u5165\u4e86\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 CUDA \u5185\u6838\u4ee5\u4f18\u5316\u8ba1\u7b97\u3002\u5f53\u5e94\u7528\u4e8e\u5404\u79cd LLM \u548c NLP \u4efb\u52a1\u4ee5\u5c06 KV \u7f13\u5b58\u91cf\u5316\u4e3a\u53ea\u6709 3 \u4f4d\u65f6\uff0cQJL \u5c55\u793a\u4e86 KV \u7f13\u5b58\u5185\u5b58\u4f7f\u7528\u91cf\u51cf\u5c11\u4e86\u4e94\u500d\u4ee5\u4e0a\uff0c\u800c\u6ca1\u6709\u5f71\u54cd\u51c6\u786e\u6027\uff0c\u540c\u65f6\u5b9e\u73b0\u4e86\u66f4\u5feb\u7684\u8fd0\u884c\u65f6\u3002\u4ee3\u7801\u53ef\u5728 \\url{https://github.com/amirzandieh/QJL} \u83b7\u5f97\u3002", "author": "Amir Zandieh et.al.", "authors": "Amir Zandieh, Majid Daliri, Insu Han", "id": "2406.03482v1", "paper_url": "http://arxiv.org/abs/2406.03482v1", "repo": "https://github.com/amirzandieh/qjl"}}