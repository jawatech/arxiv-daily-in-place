{"2410.08855": {"publish_time": "2024-10-11", "title": "MATCH: Model-Aware TVM-based Compilation for Heterogeneous Edge Devices", "paper_summary": "Streamlining the deployment of Deep Neural Networks (DNNs) on heterogeneous\nedge platforms, coupling within the same micro-controller unit (MCU)\ninstruction processors and hardware accelerators for tensor computations, is\nbecoming one of the crucial challenges of the TinyML field.\n  The best-performing DNN compilation toolchains are usually deeply customized\nfor a single MCU family, and porting to a different heterogeneous MCU family\nimplies labor-intensive re-development of almost the entire compiler. On the\nopposite side, retargetable toolchains, such as TVM, fail to exploit the\ncapabilities of custom accelerators, resulting in the generation of general but\nunoptimized code. To overcome this duality, we introduce MATCH, a novel\nTVM-based DNN deployment framework designed for easy agile retargeting across\ndifferent MCU processors and accelerators, thanks to a customizable model-based\nhardware abstraction.\n  We show that a general and retargetable mapping framework enhanced with\nhardware cost models can compete with and even outperform custom toolchains on\ndiverse targets while only needing the definition of an abstract hardware model\nand a SoC-specific API.\n  We tested MATCH on two state-of-the-art heterogeneous MCUs, GAP9 and DIANA.\n  On the four DNN models of the MLPerf Tiny suite MATCH reduces inference\nlatency by up to 60.88 times on DIANA, compared to using the plain TVM, thanks\nto the exploitation of the on-board HW accelerator. Compared to HTVM, a fully\ncustomized toolchain for DIANA, we still reduce the latency by 16.94%. On GAP9,\nusing the same benchmarks, we improve the latency by 2.15 times compared to the\ndedicated DORY compiler, thanks to our heterogeneous DNN mapping approach that\nsynergically exploits the DNN accelerator and the eight-cores cluster available\non board.", "paper_summary_zh": "<paragraph>\u512a\u5316\u7570\u8cea\u908a\u7de3\u5e73\u53f0\u4e0a\u7684\u6df1\u5ea6\u795e\u7d93\u7db2\u8def (DNN) \u90e8\u7f72\uff0c\u5728\u540c\u4e00\u500b\u5fae\u63a7\u5236\u5668\u55ae\u5143 (MCU) \u5167\u7d50\u5408\u6307\u4ee4\u8655\u7406\u5668\u548c\u786c\u9ad4\u52a0\u901f\u5668\u9032\u884c\u5f35\u91cf\u904b\u7b97\uff0c\u6b63\u6210\u70ba TinyML \u9818\u57df\u7684\u95dc\u9375\u6311\u6230\u4e4b\u4e00\u3002\n\u57f7\u884c\u6548\u80fd\u6700\u4f73\u7684 DNN \u7de8\u8b6f\u5de5\u5177\u93c8\u901a\u5e38\u91dd\u5c0d\u55ae\u4e00 MCU \u5bb6\u65cf\u9032\u884c\u6df1\u5ea6\u5ba2\u88fd\u5316\uff0c\u800c\u79fb\u690d\u5230\u4e0d\u540c\u7684\u7570\u8cea MCU \u5bb6\u65cf\u8868\u793a\u5e7e\u4e4e\u6574\u500b\u7de8\u8b6f\u5668\u90fd\u9700\u8981\u9032\u884c\u8017\u8cbb\u5927\u91cf\u4eba\u529b\u7684\u91cd\u65b0\u958b\u767c\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u53ef\u91cd\u65b0\u5b9a\u4f4d\u7684\u5de5\u5177\u93c8\uff08\u4f8b\u5982 TVM\uff09\u7121\u6cd5\u5229\u7528\u81ea\u8a02\u52a0\u901f\u5668\u7684\u529f\u80fd\uff0c\u5c0e\u81f4\u7522\u751f\u901a\u7528\u4f46\u672a\u6700\u4f73\u5316\u7684\u7a0b\u5f0f\u78bc\u3002\u70ba\u4e86\u514b\u670d\u9019\u7a2e\u4e8c\u5143\u6027\uff0c\u6211\u5011\u5f15\u9032 MATCH\uff0c\u4e00\u500b\u57fa\u65bc TVM \u7684\u65b0\u7a4e DNN \u90e8\u7f72\u67b6\u69cb\uff0c\u7531\u65bc\u53ef\u81ea\u8a02\u7684\u57fa\u65bc\u6a21\u578b\u7684\u786c\u9ad4\u62bd\u8c61\u5316\uff0c\u56e0\u6b64\u8a2d\u8a08\u7528\u65bc\u5728\u4e0d\u540c\u7684 MCU \u8655\u7406\u5668\u548c\u52a0\u901f\u5668\u4e4b\u9593\u9032\u884c\u8f15\u9b06\u654f\u6377\u7684\u91cd\u65b0\u5b9a\u4f4d\u3002\n\u6211\u5011\u5c55\u793a\u4e86\u4e00\u500b\u589e\u5f37\u786c\u9ad4\u6210\u672c\u6a21\u578b\u7684\u901a\u7528\u4e14\u53ef\u91cd\u65b0\u5b9a\u4f4d\u7684\u5c0d\u61c9\u67b6\u69cb\uff0c\u80fd\u5920\u8207\u81ea\u8a02\u5de5\u5177\u93c8\u5728\u5404\u7a2e\u76ee\u6a19\u4e0a\u7af6\u722d\uff0c\u751a\u81f3\u8868\u73fe\u5f97\u66f4\u597d\uff0c\u540c\u6642\u53ea\u9700\u8981\u5b9a\u7fa9\u4e00\u500b\u62bd\u8c61\u786c\u9ad4\u6a21\u578b\u548c\u4e00\u500b SoC \u7279\u5b9a\u7684 API\u3002\n\u6211\u5011\u5728\u5169\u500b\u6700\u5148\u9032\u7684\u7570\u8cea MCU\uff0cGAP9 \u548c DIANA \u4e0a\u6e2c\u8a66\u4e86 MATCH\u3002\n\u5728 MLPerf Tiny \u7d44\u5408\u7684\u56db\u500b DNN \u6a21\u578b\u4e0a\uff0cMATCH \u5c07 DIANA \u4e0a\u7684\u63a8\u8ad6\u5ef6\u9072\u6e1b\u5c11\u4e86\u591a\u9054 60.88 \u500d\uff0c\u9019\u8981\u6b78\u529f\u65bc\u5229\u7528\u4e86\u677f\u8f09 HW \u52a0\u901f\u5668\u3002\u8207 HTVM\uff08\u4e00\u500b\u5b8c\u5168\u81ea\u8a02\u7684 DIANA \u5de5\u5177\u93c8\uff09\u76f8\u6bd4\uff0c\u6211\u5011\u4ecd\u7136\u5c07\u5ef6\u9072\u6e1b\u5c11\u4e86 16.94%\u3002\u5728 GAP9 \u4e0a\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u57fa\u6e96\uff0c\u6211\u5011\u5c07\u5ef6\u9072\u6539\u5584\u4e86 2.15 \u500d\uff0c\u9019\u8981\u6b78\u529f\u65bc\u6211\u5011\u7684\u7570\u8cea DNN \u5c0d\u61c9\u65b9\u6cd5\uff0c\u8a72\u65b9\u6cd5\u5354\u540c\u5229\u7528\u4e86 DNN \u52a0\u901f\u5668\u548c\u677f\u4e0a\u53ef\u7528\u7684\u516b\u6838\u53e2\u96c6\u3002</paragraph>", "author": "Mohamed Amine Hamdi et.al.", "authors": "Mohamed Amine Hamdi, Francesco Daghero, Giuseppe Maria Sarda, Josse Van Delm, Arne Symons, Luca Benini, Marian Verhelst, Daniele Jahier Pagliari, Alessio Burrello", "id": "2410.08855v1", "paper_url": "http://arxiv.org/abs/2410.08855v1", "repo": "null"}}