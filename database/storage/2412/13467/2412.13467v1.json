{"2412.13467": {"publish_time": "2024-12-18", "title": "Transducer Tuning: Efficient Model Adaptation for Software Tasks Using Code Property Graphs", "paper_summary": "Large language models have demonstrated promising performance across various\nsoftware engineering tasks. While fine-tuning is a common practice to adapt\nthese models for downstream tasks, it becomes challenging in\nresource-constrained environments due to increased memory requirements from\ngrowing trainable parameters in increasingly large language models. We\nintroduce \\approach, a technique to adapt large models for downstream code\ntasks using Code Property Graphs (CPGs). Our approach introduces a modular\ncomponent called \\transducer that enriches code embeddings with structural and\ndependency information from CPGs. The Transducer comprises two key components:\nGraph Vectorization Engine (GVE) and Attention-Based Fusion Layer (ABFL). GVE\nextracts CPGs from input source code and transforms them into graph feature\nvectors. ABFL then fuses those graphs feature vectors with initial code\nembeddings from a large language model. By optimizing these transducers for\ndifferent downstream tasks, our approach enhances the models without the need\nto fine-tune them for specific tasks. We have evaluated \\approach on three\ndownstream tasks: code summarization, assert generation, and code translation.\nOur results demonstrate competitive performance compared to full parameter\nfine-tuning while reducing up to 99\\% trainable parameters to save memory.\n\\approach also remains competitive against other fine-tuning approaches (e.g.,\nLoRA, Prompt-Tuning, Prefix-Tuning) while using only 1.5\\%-80\\% of their\ntrainable parameters. Our findings show that integrating structural and\ndependency information through Transducer Tuning enables more efficient model\nadaptation, making it easier for users to adapt large models in\nresource-constrained settings.", "paper_summary_zh": "\u5927\u578b\u8a9e\u8a00\u6a21\u578b\u5df2\u5728\u5404\u7a2e\u8edf\u9ad4\u5de5\u7a0b\u4efb\u52d9\u4e2d\u5c55\u73fe\u51fa\u4ee4\u4eba\u6eff\u610f\u7684\u6548\u80fd\u3002\u96d6\u7136\u5fae\u8abf\u662f\u8abf\u6574\u9019\u4e9b\u6a21\u578b\u4ee5\u57f7\u884c\u4e0b\u6e38\u4efb\u52d9\u7684\u5e38\u898b\u505a\u6cd5\uff0c\u4f46\u7531\u65bc\u5927\u578b\u8a9e\u8a00\u6a21\u578b\u4e2d\u53ef\u8a13\u7df4\u53c3\u6578\u4e0d\u65b7\u589e\u52a0\uff0c\u5c0e\u81f4\u8a18\u61b6\u9ad4\u9700\u6c42\u589e\u52a0\uff0c\u56e0\u6b64\u5728\u8cc7\u6e90\u53d7\u9650\u7684\u74b0\u5883\u4e2d\u8b8a\u5f97\u5177\u6709\u6311\u6230\u6027\u3002\u6211\u5011\u5f15\u5165\u4e86 \\approach\uff0c\u9019\u662f\u4e00\u7a2e\u4f7f\u7528\u7a0b\u5f0f\u78bc\u5c6c\u6027\u5716 (CPG) \u4f86\u8abf\u6574\u5927\u578b\u6a21\u578b\u4ee5\u57f7\u884c\u4e0b\u6e38\u7a0b\u5f0f\u78bc\u4efb\u52d9\u7684\u6280\u8853\u3002\u6211\u5011\u7684\u505a\u6cd5\u5f15\u5165\u4e86\u7a31\u70ba \\transducer \u7684\u6a21\u7d44\u5316\u5143\u4ef6\uff0c\u5b83\u4f7f\u7528\u4f86\u81ea CPG \u7684\u7d50\u69cb\u548c\u4f9d\u8cf4\u95dc\u4fc2\u8cc7\u8a0a\u4f86\u8c50\u5bcc\u7a0b\u5f0f\u78bc\u5d4c\u5165\u3002Transducer \u5305\u542b\u5169\u500b\u95dc\u9375\u5143\u4ef6\uff1a\u5716\u5411\u91cf\u5316\u5f15\u64ce (GVE) \u548c\u57fa\u65bc\u6ce8\u610f\u529b\u7684\u878d\u5408\u5c64 (ABFL)\u3002GVE \u5f9e\u8f38\u5165\u539f\u59cb\u78bc\u4e2d\u8403\u53d6 CPG\uff0c\u4e26\u5c07\u5b83\u5011\u8f49\u63db\u70ba\u5716\u5f62\u7279\u5fb5\u5411\u91cf\u3002ABFL \u63a5\u8457\u5c07\u9019\u4e9b\u5716\u5f62\u7279\u5fb5\u5411\u91cf\u8207\u4f86\u81ea\u5927\u578b\u8a9e\u8a00\u6a21\u578b\u7684\u521d\u59cb\u7a0b\u5f0f\u78bc\u5d4c\u5165\u878d\u5408\u3002\u900f\u904e\u91dd\u5c0d\u4e0d\u540c\u7684\u4e0b\u6e38\u4efb\u52d9\u6700\u4f73\u5316\u9019\u4e9b\u8f49\u63db\u5668\uff0c\u6211\u5011\u7684\u505a\u6cd5\u589e\u5f37\u4e86\u6a21\u578b\uff0c\u800c\u7121\u9700\u91dd\u5c0d\u7279\u5b9a\u4efb\u52d9\u9032\u884c\u5fae\u8abf\u3002\u6211\u5011\u5df2\u5728\u4e09\u500b\u4e0b\u6e38\u4efb\u52d9\u4e2d\u8a55\u4f30 \\approach\uff1a\u7a0b\u5f0f\u78bc\u6458\u8981\u3001\u65b7\u8a00\u7522\u751f\u548c\u7a0b\u5f0f\u78bc\u7ffb\u8b6f\u3002\u6211\u5011\u7684\u7d50\u679c\u986f\u793a\uff0c\u8207\u5b8c\u5168\u53c3\u6578\u5fae\u8abf\u76f8\u6bd4\uff0c\u5177\u6709\u7af6\u722d\u529b\u7684\u6548\u80fd\uff0c\u540c\u6642\u6e1b\u5c11\u4e86\u591a\u9054 99% \u7684\u53ef\u8a13\u7df4\u53c3\u6578\u4ee5\u7bc0\u7701\u8a18\u61b6\u9ad4\u3002\\approach \u5728\u50c5\u4f7f\u7528 1.5% - 80% \u53ef\u8a13\u7df4\u53c3\u6578\u7684\u60c5\u6cc1\u4e0b\uff0c\u4ecd\u7136\u5728\u8207\u5176\u4ed6\u5fae\u8abf\u65b9\u6cd5\uff08\u4f8b\u5982 LoRA\u3001Prompt-Tuning\u3001Prefix-Tuning\uff09\u7684\u7af6\u722d\u4e2d\u4fdd\u6301\u7af6\u722d\u529b\u3002\u6211\u5011\u7684\u767c\u73fe\u8868\u660e\uff0c\u900f\u904e Transducer Tuning \u6574\u5408\u7d50\u69cb\u548c\u4f9d\u8cf4\u95dc\u4fc2\u8cc7\u8a0a\u53ef\u4ee5\u5be6\u73fe\u66f4\u6709\u6548\u7387\u7684\u6a21\u578b\u8abf\u6574\uff0c\u4f7f\u7528\u6236\u66f4\u5bb9\u6613\u5728\u8cc7\u6e90\u53d7\u9650\u7684\u8a2d\u5b9a\u4e2d\u8abf\u6574\u5927\u578b\u6a21\u578b\u3002", "author": "Imam Nur Bani Yusuf et.al.", "authors": "Imam Nur Bani Yusuf, Lingxiao Jiang", "id": "2412.13467v1", "paper_url": "http://arxiv.org/abs/2412.13467v1", "repo": "null"}}