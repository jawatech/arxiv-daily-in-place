{"2411.12064": {"publish_time": "2024-11-18", "title": "TSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model", "paper_summary": "Traditional Learning-To-Rank (LETOR) approaches, including pairwise methods\nlike RankNet and LambdaMART, often fall short by solely focusing on pairwise\ncomparisons, leading to sub-optimal global rankings. Conversely, deep learning\nbased listwise methods, while aiming to optimise entire lists, require complex\ntuning and yield only marginal improvements over robust pairwise models. To\novercome these limitations, we introduce Travelling Salesman Problem Rank\n(TSPRank), a hybrid pairwise-listwise ranking method. TSPRank reframes the\nranking problem as a Travelling Salesman Problem (TSP), a well-known\ncombinatorial optimisation challenge that has been extensively studied for its\nnumerous solution algorithms and applications. This approach enables the\nmodelling of pairwise relationships and leverages combinatorial optimisation to\ndetermine the listwise ranking. This approach can be directly integrated as an\nadditional component into embeddings generated by existing backbone models to\nenhance ranking performance. Our extensive experiments across three backbone\nmodels on diverse tasks, including stock ranking, information retrieval, and\nhistorical events ordering, demonstrate that TSPRank significantly outperforms\nboth pure pairwise and listwise methods. Our qualitative analysis reveals that\nTSPRank's main advantage over existing methods is its ability to harness global\ninformation better while ranking. TSPRank's robustness and superior performance\nacross different domains highlight its potential as a versatile and effective\nLETOR solution. The code and preprocessed data are available at\nhttps://github.com/waylonli/TSPRank-KDD2025.", "paper_summary_zh": "\u50b3\u7d71\u7684\u5b78\u7fd2\u6392\u540d (LETOR) \u65b9\u6cd5\uff0c\u5305\u62ec\u6210\u5c0d\u65b9\u6cd5\uff0c\u4f8b\u5982 RankNet \u548c LambdaMART\uff0c\u901a\u5e38\u50c5\u5c08\u6ce8\u65bc\u6210\u5c0d\u6bd4\u8f03\uff0c\u5c0e\u81f4\u6b21\u512a\u7684\u5168\u5c40\u6392\u540d\u3002\u76f8\u53cd\uff0c\u57fa\u65bc\u6df1\u5ea6\u5b78\u7fd2\u7684\u6210\u5217\u65b9\u6cd5\uff0c\u96d6\u7136\u65e8\u5728\u512a\u5316\u6574\u500b\u6e05\u55ae\uff0c\u4f46\u9700\u8981\u8907\u96dc\u7684\u8abf\u6574\uff0c\u4e26\u4e14\u50c5\u5c0d\u7a69\u5065\u7684\u6210\u5c0d\u6a21\u578b\u7522\u751f\u908a\u969b\u6539\u9032\u3002\u70ba\u4e86\u514b\u670d\u9019\u4e9b\u9650\u5236\uff0c\u6211\u5011\u5f15\u5165\u4e86\u65c5\u884c\u5546\u554f\u984c\u6392\u540d (TSPRank)\uff0c\u9019\u662f\u4e00\u7a2e\u6df7\u5408\u6210\u5c0d-\u6210\u5217\u6392\u540d\u65b9\u6cd5\u3002TSPRank \u5c07\u6392\u540d\u554f\u984c\u91cd\u65b0\u5b9a\u7fa9\u70ba\u65c5\u884c\u5546\u554f\u984c (TSP)\uff0c\u9019\u662f\u4e00\u500b\u773e\u6240\u5468\u77e5\u7684\u7d44\u5408\u512a\u5316\u6311\u6230\uff0c\u7531\u65bc\u5176\u773e\u591a\u7684\u89e3\u6c7a\u6f14\u7b97\u6cd5\u548c\u61c9\u7528\u800c\u88ab\u5ee3\u6cdb\u7814\u7a76\u3002\u9019\u7a2e\u65b9\u6cd5\u80fd\u5920\u5c0d\u6210\u5c0d\u95dc\u4fc2\u9032\u884c\u5efa\u6a21\uff0c\u4e26\u5229\u7528\u7d44\u5408\u512a\u5316\u4f86\u78ba\u5b9a\u6210\u5217\u6392\u540d\u3002\u9019\u7a2e\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u6574\u5408\u70ba\u73fe\u6709\u4e3b\u5e79\u6a21\u578b\u751f\u6210\u7684\u5d4c\u5165\u4e2d\u7684\u9644\u52a0\u7d44\u4ef6\uff0c\u4ee5\u589e\u5f37\u6392\u540d\u6548\u80fd\u3002\u6211\u5011\u5728\u4e09\u7a2e\u4e3b\u5e79\u6a21\u578b\u4e2d\u9032\u884c\u4e86\u5ee3\u6cdb\u7684\u5be6\u9a57\uff0c\u6d89\u53ca\u5404\u7a2e\u4efb\u52d9\uff0c\u5305\u62ec\u80a1\u7968\u6392\u540d\u3001\u8cc7\u8a0a\u6aa2\u7d22\u548c\u6b77\u53f2\u4e8b\u4ef6\u6392\u5e8f\uff0c\u7d50\u679c\u8868\u660e TSPRank \u660e\u986f\u512a\u65bc\u7d14\u6210\u5c0d\u548c\u6210\u5217\u65b9\u6cd5\u3002\u6211\u5011\u7684\u8cea\u6027\u5206\u6790\u8868\u660e\uff0cTSPRank \u512a\u65bc\u73fe\u6709\u65b9\u6cd5\u7684\u4e3b\u8981\u512a\u52e2\u5728\u65bc\u5b83\u5728\u6392\u540d\u6642\u80fd\u66f4\u597d\u5730\u5229\u7528\u5168\u5c40\u8cc7\u8a0a\u3002TSPRank \u5728\u4e0d\u540c\u9818\u57df\u7684\u7a69\u5065\u6027\u548c\u5353\u8d8a\u6548\u80fd\u7a81\u986f\u4e86\u5176\u4f5c\u70ba\u591a\u529f\u80fd\u4e14\u6709\u6548\u7684 LETOR \u89e3\u6c7a\u65b9\u6848\u7684\u6f5b\u529b\u3002\u7a0b\u5f0f\u78bc\u548c\u9810\u8655\u7406\u8cc7\u6599\u53ef\u5728 https://github.com/waylonli/TSPRank-KDD2025 \u53d6\u5f97\u3002", "author": "Weixian Waylon Li et.al.", "authors": "Weixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, Tiejun Ma", "id": "2411.12064v1", "paper_url": "http://arxiv.org/abs/2411.12064v1", "repo": "https://github.com/waylonli/tsprank-kdd2025"}}