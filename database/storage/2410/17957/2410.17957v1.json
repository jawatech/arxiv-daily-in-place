{"2410.17957": {"publish_time": "2024-10-23", "title": "MCUBERT: Memory-Efficient BERT Inference on Commodity Microcontrollers", "paper_summary": "In this paper, we propose MCUBERT to enable language models like BERT on tiny\nmicrocontroller units (MCUs) through network and scheduling co-optimization. We\nobserve the embedding table contributes to the major storage bottleneck for\ntiny BERT models. Hence, at the network level, we propose an MCU-aware\ntwo-stage neural architecture search algorithm based on clustered low-rank\napproximation for embedding compression. To reduce the inference memory\nrequirements, we further propose a novel fine-grained MCU-friendly scheduling\nstrategy. Through careful computation tiling and re-ordering as well as kernel\ndesign, we drastically increase the input sequence lengths supported on MCUs\nwithout any latency or accuracy penalty. MCUBERT reduces the parameter size of\nBERT-tiny and BERT-mini by 5.7$\\times$ and 3.0$\\times$ and the execution memory\nby 3.5$\\times$ and 4.3$\\times$, respectively. MCUBERT also achieves 1.5$\\times$\nlatency reduction. For the first time, MCUBERT enables lightweight BERT models\non commodity MCUs and processing more than 512 tokens with less than 256KB of\nmemory.", "paper_summary_zh": "\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u63d0\u51fa MCUBERT\uff0c\u900f\u904e\u7db2\u8def\u548c\u6392\u7a0b\u5171\u540c\u6700\u4f73\u5316\uff0c\u5728\u5fae\u578b\u5fae\u63a7\u5236\u5668\u55ae\u5143 (MCU) \u4e0a\u555f\u7528\u985e\u4f3c BERT \u7684\u8a9e\u8a00\u6a21\u578b\u3002\u6211\u5011\u89c0\u5bdf\u5230\u5d4c\u5165\u5f0f\u8868\u683c\u5c0d\u5fae\u578b BERT \u6a21\u578b\u7684\u4e3b\u8981\u5132\u5b58\u74f6\u9838\u6709\u6240\u8ca2\u737b\u3002\u56e0\u6b64\uff0c\u5728\u7db2\u8def\u5c64\u7d1a\uff0c\u6211\u5011\u63d0\u51fa\u4e00\u500b\u57fa\u65bc\u5206\u7fa4\u4f4e\u79e9\u8fd1\u4f3c\u7684 MCU \u611f\u77e5\u5169\u968e\u6bb5\u795e\u7d93\u67b6\u69cb\u641c\u5c0b\u6f14\u7b97\u6cd5\uff0c\u7528\u65bc\u5d4c\u5165\u5f0f\u58d3\u7e2e\u3002\u70ba\u4e86\u6e1b\u5c11\u63a8\u8ad6\u8a18\u61b6\u9ad4\u9700\u6c42\uff0c\u6211\u5011\u9032\u4e00\u6b65\u63d0\u51fa\u4e00\u500b\u65b0\u7a4e\u7684\u7d30\u7c92\u5ea6 MCU \u53cb\u5584\u6392\u7a0b\u7b56\u7565\u3002\u900f\u904e\u4ed4\u7d30\u7684\u904b\u7b97\u5206\u5272\u548c\u91cd\u65b0\u6392\u5e8f\u4ee5\u53ca\u6838\u5fc3\u8a2d\u8a08\uff0c\u6211\u5011\u5927\u5e45\u589e\u52a0 MCU \u4e0a\u652f\u63f4\u7684\u8f38\u5165\u5e8f\u5217\u9577\u5ea6\uff0c\u800c\u4e0d\u6703\u6709\u4efb\u4f55\u5ef6\u9072\u6216\u6e96\u78ba\u5ea6\u640d\u5931\u3002MCUBERT \u5c07 BERT-tiny \u548c BERT-mini \u7684\u53c3\u6578\u5927\u5c0f\u5206\u5225\u6e1b\u5c11\u4e86 5.7 \u500d\u548c 3.0 \u500d\uff0c\u57f7\u884c\u8a18\u61b6\u9ad4\u5206\u5225\u6e1b\u5c11\u4e86 3.5 \u500d\u548c 4.3 \u500d\u3002MCUBERT \u4e5f\u9054\u5230\u4e86 1.5 \u500d\u7684\u5ef6\u9072\u6e1b\u5c11\u3002MCUBERT \u9996\u6b21\u5728\u5546\u54c1 MCU \u4e0a\u555f\u7528\u8f15\u91cf\u7d1a BERT \u6a21\u578b\uff0c\u4e26\u4ee5\u5c0f\u65bc 256KB \u7684\u8a18\u61b6\u9ad4\u8655\u7406\u8d85\u904e 512 \u500b\u7b26\u865f\u3002", "author": "Zebin Yang et.al.", "authors": "Zebin Yang, Renze Chen, Taiqiang Wu, Ngai Wong, Yun Liang, Runsheng Wang, Ru Huang, Meng Li", "id": "2410.17957v1", "paper_url": "http://arxiv.org/abs/2410.17957v1", "repo": "null"}}