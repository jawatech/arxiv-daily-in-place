{"2501.06842": {"publish_time": "2025-01-12", "title": "SPAM: Spike-Aware Adam with Momentum Reset for Stable LLM Training", "paper_summary": "Large Language Models (LLMs) have demonstrated exceptional performance across\ndiverse tasks, yet their training remains highly resource-intensive and\nsusceptible to critical challenges such as training instability. A predominant\nsource of this instability stems from gradient and loss spikes, which disrupt\nthe learning process, often leading to costly interventions like checkpoint\nrecovery and experiment restarts, further amplifying inefficiencies. This paper\npresents a comprehensive investigation into gradient spikes observed during LLM\ntraining, revealing their prevalence across multiple architectures and\ndatasets. Our analysis shows that these spikes can be up to $1000\\times$ larger\nthan typical gradients, substantially deteriorating model performance. To\naddress this issue, we propose Spike-Aware Adam with Momentum Reset SPAM, a\nnovel optimizer designed to counteract gradient spikes through momentum reset\nand spike-aware gradient clipping. Extensive experiments, including both\npre-training and fine-tuning, demonstrate that SPAM consistently surpasses Adam\nand its variants across various tasks, including (1) LLM pre-training from 60M\nto 1B, (2) 4-bit LLM pre-training,(3) reinforcement learning, and (4) Time\nSeries Forecasting. Additionally, SPAM facilitates memory-efficient training by\nenabling sparse momentum, where only a subset of momentum terms are maintained\nand updated. When operating under memory constraints, SPAM outperforms\nstate-of-the-art memory-efficient optimizers such as GaLore and Adam-Mini. Our\nwork underscores the importance of mitigating gradient spikes in LLM training\nand introduces an effective optimization strategy that enhances both training\nstability and resource efficiency at scale. Code is available at\nhttps://github.com/TianjinYellow/SPAM-Optimizer.git", "paper_summary_zh": "\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u5728\u5404\u7a2e\u4efb\u52d9\u4e2d\u8868\u73fe\u51fa\u975e\u51e1\u7684\u6027\u80fd\uff0c\u4f46\u5176\u8a13\u7df4\u4ecd\u7136\u9ad8\u5ea6\u4f9d\u8cf4\u8cc7\u6e90\uff0c\u4e14\u5bb9\u6613\u53d7\u5230\u8a13\u7df4\u4e0d\u7a69\u5b9a\u7b49\u95dc\u9375\u6311\u6230\u7684\u5f71\u97ff\u3002\u9019\u7a2e\u4e0d\u7a69\u5b9a\u7684\u4e3b\u8981\u4f86\u6e90\u4f86\u81ea\u65bc\u68af\u5ea6\u548c\u640d\u5931\u5c16\u5cf0\uff0c\u9019\u6703\u7834\u58de\u5b78\u7fd2\u904e\u7a0b\uff0c\u901a\u5e38\u5c0e\u81f4\u4ee3\u50f9\u9ad8\u6602\u7684\u4ecb\u5165\uff0c\u5982\u6aa2\u67e5\u9ede\u6062\u5fa9\u548c\u5be6\u9a57\u91cd\u65b0\u555f\u52d5\uff0c\u9032\u4e00\u6b65\u64f4\u5927\u4f4e\u6548\u7387\u3002\u672c\u6587\u5c0d LLM \u8a13\u7df4\u671f\u9593\u89c0\u5bdf\u5230\u7684\u68af\u5ea6\u5c16\u5cf0\u9032\u884c\u4e86\u5168\u9762\u8abf\u67e5\uff0c\u63ed\u793a\u4e86\u5b83\u5011\u5728\u591a\u500b\u67b6\u69cb\u548c\u6578\u64da\u96c6\u4e2d\u7684\u666e\u904d\u6027\u3002\u6211\u5011\u7684\u5206\u6790\u8868\u660e\uff0c\u9019\u4e9b\u5c16\u5cf0\u53ef\u80fd\u6bd4\u5178\u578b\u68af\u5ea6\u5927 $1000\\times$\uff0c\u9019\u6703\u5927\u5e45\u964d\u4f4e\u6a21\u578b\u6027\u80fd\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u5e36\u52d5\u91cf\u91cd\u7f6e\u7684 Spike-Aware Adam\uff08SPAM\uff09\uff0c\u9019\u662f\u4e00\u7a2e\u65b0\u7a4e\u7684\u512a\u5316\u5668\uff0c\u65e8\u5728\u901a\u904e\u52d5\u91cf\u91cd\u7f6e\u548c\u611f\u77e5\u5c16\u5cf0\u7684\u68af\u5ea6\u88c1\u526a\u4f86\u62b5\u6d88\u68af\u5ea6\u5c16\u5cf0\u3002\u5305\u62ec\u9810\u8a13\u7df4\u548c\u5fae\u8abf\u5728\u5167\u7684\u5ee3\u6cdb\u5be6\u9a57\u8868\u660e\uff0cSPAM \u5728\u5404\u7a2e\u4efb\u52d9\u4e2d\u59cb\u7d42\u512a\u65bc Adam \u53ca\u5176\u8b8a\u9ad4\uff0c\u5305\u62ec (1) \u5f9e 60M \u5230 1B \u7684 LLM \u9810\u8a13\u7df4\uff0c(2) 4 \u4f4d\u5143 LLM \u9810\u8a13\u7df4\uff0c(3) \u5f37\u5316\u5b78\u7fd2\uff0c\u4ee5\u53ca (4) \u6642\u9593\u5e8f\u5217\u9810\u6e2c\u3002\u6b64\u5916\uff0cSPAM \u901a\u904e\u555f\u7528\u7a00\u758f\u52d5\u91cf\uff08\u5176\u4e2d\u53ea\u7dad\u8b77\u548c\u66f4\u65b0\u52d5\u91cf\u9805\u7684\u5b50\u96c6\uff09\u4f86\u4fc3\u9032\u8a18\u61b6\u9ad4\u9ad8\u6548\u8a13\u7df4\u3002\u5728\u8a18\u61b6\u9ad4\u53d7\u9650\u7684\u60c5\u6cc1\u4e0b\uff0cSPAM \u512a\u65bc\u6700\u5148\u9032\u7684\u8a18\u61b6\u9ad4\u9ad8\u6548\u512a\u5316\u5668\uff0c\u4f8b\u5982 GaLore \u548c Adam-Mini\u3002\u6211\u5011\u7684\u7814\u7a76\u5f37\u8abf\u4e86\u6e1b\u8f15 LLM \u8a13\u7df4\u4e2d\u68af\u5ea6\u5c16\u5cf0\u7684\u91cd\u8981\u6027\uff0c\u4e26\u5f15\u5165\u4e86\u4e00\u7a2e\u6709\u6548\u7684\u6700\u4f73\u5316\u7b56\u7565\uff0c\u5b83\u53ef\u4ee5\u5927\u898f\u6a21\u63d0\u5347\u8a13\u7df4\u7a69\u5b9a\u6027\u548c\u8cc7\u6e90\u6548\u7387\u3002\u7a0b\u5f0f\u78bc\u53ef\u5728 https://github.com/TianjinYellow/SPAM-Optimizer.git \u53d6\u5f97", "author": "Tianjin Huang et.al.", "authors": "Tianjin Huang, Ziquan Zhu, Gaojie Jin, Lu Liu, Zhangyang Wang, Shiwei Liu", "id": "2501.06842v1", "paper_url": "http://arxiv.org/abs/2501.06842v1", "repo": "null"}}