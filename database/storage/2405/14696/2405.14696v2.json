{"2405.14696": {"publish_time": "2024-05-23", "title": "A Declarative System for Optimizing AI Workloads", "paper_summary": "A long-standing goal of data management systems has been to build systems\nwhich can compute quantitative insights over large corpora of unstructured data\nin a cost-effective manner. Until recently, it was difficult and expensive to\nextract facts from company documents, data from scientific papers, or metrics\nfrom image and video corpora. Today's models can accomplish these tasks with\nhigh accuracy. However, a programmer who wants to answer a substantive\nAI-powered query must orchestrate large numbers of models, prompts, and data\noperations. For even a single query, the programmer has to make a vast number\nof decisions such as the choice of model, the right inference method, the most\ncost-effective inference hardware, the ideal prompt design, and so on. The\noptimal set of decisions can change as the query changes and as the\nrapidly-evolving technical landscape shifts. In this paper we present\nPalimpzest, a system that enables anyone to process AI-powered analytical\nqueries simply by defining them in a declarative language. The system uses its\ncost optimization framework to implement the query plan with the best\ntrade-offs between runtime, financial cost, and output data quality. We\ndescribe the workload of AI-powered analytics tasks, the optimization methods\nthat Palimpzest uses, and the prototype system itself. We evaluate Palimpzest\non tasks in Legal Discovery, Real Estate Search, and Medical Schema Matching.\nWe show that even our simple prototype offers a range of appealing plans,\nincluding one that is 3.3x faster and 2.9x cheaper than the baseline method,\nwhile also offering better data quality. With parallelism enabled, Palimpzest\ncan produce plans with up to a 90.3x speedup at 9.1x lower cost relative to a\nsingle-threaded GPT-4 baseline, while obtaining an F1-score within 83.5% of the\nbaseline. These require no additional work by the user.", "paper_summary_zh": "\u9577\u671f\u4ee5\u4f86\uff0c\u8cc7\u6599\u7ba1\u7406\u7cfb\u7d71\u7684\u76ee\u6a19\u4e00\u76f4\u662f\u5efa\u7acb\u7cfb\u7d71\uff0c\u80fd\u5920\u4ee5\u7d93\u6fdf\u6709\u6548\u7684\u65b9\u5f0f\u8a08\u7b97\u5927\u91cf\u975e\u7d50\u69cb\u5316\u8cc7\u6599\u7684\u91cf\u5316\u898b\u89e3\u3002\u76f4\u5230\u6700\u8fd1\uff0c\u5f9e\u516c\u53f8\u6587\u4ef6\u3001\u79d1\u5b78\u8ad6\u6587\u4e2d\u63d0\u53d6\u4e8b\u5be6\uff0c\u6216\u5f9e\u5f71\u50cf\u548c\u5f71\u7247\u8cc7\u6599\u4e2d\u63d0\u53d6\u6307\u6a19\uff0c\u4ecd\u7136\u56f0\u96e3\u4e14\u6602\u8cb4\u3002\u73fe\u4eca\u7684\u6a21\u578b\u53ef\u4ee5\u9ad8\u6e96\u78ba\u5ea6\u5b8c\u6210\u9019\u4e9b\u4efb\u52d9\u3002\u7136\u800c\uff0c\u60f3\u8981\u56de\u7b54\u5be6\u8cea\u6027 AI \u9a45\u52d5\u67e5\u8a62\u7684\u7a0b\u5f0f\u8a2d\u8a08\u5e2b\uff0c\u5fc5\u9808\u5354\u8abf\u5927\u91cf\u7684\u6a21\u578b\u3001\u63d0\u793a\u548c\u8cc7\u6599\u64cd\u4f5c\u3002\u5373\u4f7f\u53ea\u662f\u4e00\u500b\u55ae\u4e00\u7684\u67e5\u8a62\uff0c\u7a0b\u5f0f\u8a2d\u8a08\u5e2b\u90fd\u5fc5\u9808\u505a\u51fa\u5927\u91cf\u7684\u6c7a\u7b56\uff0c\u4f8b\u5982\u6a21\u578b\u7684\u9078\u64c7\u3001\u6b63\u78ba\u7684\u63a8\u8ad6\u65b9\u6cd5\u3001\u6700\u5177\u6210\u672c\u6548\u76ca\u7684\u63a8\u8ad6\u786c\u9ad4\u3001\u7406\u60f3\u7684\u63d0\u793a\u8a2d\u8a08\uff0c\u7b49\u7b49\u3002\u6700\u4f73\u6c7a\u7b56\u7d44\u5408\u6703\u96a8\u8457\u67e5\u8a62\u7684\u6539\u8b8a\u548c\u5feb\u901f\u8b8a\u5316\u7684\u6280\u8853\u74b0\u5883\u800c\u6539\u8b8a\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u63d0\u51fa\u4e86 Palimpzest\uff0c\u4e00\u500b\u7cfb\u7d71\uff0c\u8b93\u4efb\u4f55\u4eba\u90fd\u80fd\u900f\u904e\u5728\u5ba3\u544a\u5f0f\u8a9e\u8a00\u4e2d\u5b9a\u7fa9 AI \u9a45\u52d5\u5206\u6790\u67e5\u8a62\uff0c\u4f86\u8655\u7406\u9019\u4e9b\u67e5\u8a62\u3002\u7cfb\u7d71\u4f7f\u7528\u5176\u6210\u672c\u6700\u4f73\u5316\u67b6\u69cb\uff0c\u4ee5\u6700\u4f73\u7684\u57f7\u884c\u6642\u9593\u3001\u8ca1\u52d9\u6210\u672c\u548c\u8f38\u51fa\u8cc7\u6599\u54c1\u8cea\u6298\u8877\uff0c\u4f86\u5be6\u4f5c\u67e5\u8a62\u8a08\u756b\u3002\u6211\u5011\u63cf\u8ff0\u4e86 AI \u9a45\u52d5\u5206\u6790\u4efb\u52d9\u7684\u5de5\u4f5c\u8ca0\u8f09\u3001Palimpzest \u4f7f\u7528\u7684\u6700\u4f73\u5316\u65b9\u6cd5\uff0c\u4ee5\u53ca\u539f\u578b\u7cfb\u7d71\u672c\u8eab\u3002\u6211\u5011\u5728\u6cd5\u5f8b\u767c\u73fe\u3001\u623f\u5730\u7522\u641c\u5c0b\u548c\u91ab\u7642\u67b6\u69cb\u6bd4\u5c0d\u7684\u4efb\u52d9\u4e2d\u8a55\u4f30 Palimpzest\u3002\u6211\u5011\u5c55\u793a\u4e86\u5373\u4f7f\u662f\u6211\u5011\u7684\u7c21\u55ae\u539f\u578b\u4e5f\u80fd\u63d0\u4f9b\u4e00\u7cfb\u5217\u6709\u5438\u5f15\u529b\u7684\u8a08\u756b\uff0c\u5305\u62ec\u4e00\u500b\u6bd4\u57fa\u6e96\u65b9\u6cd5\u5feb 3.3 \u500d\u3001\u4fbf\u5b9c 2.9 \u500d\u7684\u8a08\u756b\uff0c\u540c\u6642\u9084\u80fd\u63d0\u4f9b\u66f4\u597d\u7684\u8cc7\u6599\u54c1\u8cea\u3002\u5728\u555f\u7528\u5e73\u884c\u8655\u7406\u7684\u60c5\u6cc1\u4e0b\uff0cPalimpzest \u53ef\u4ee5\u7522\u751f\u901f\u5ea6\u63d0\u5347\u9054 90.3 \u500d\u3001\u6210\u672c\u964d\u4f4e 9.1 \u500d\u7684\u8a08\u756b\uff0c\u76f8\u8f03\u65bc\u55ae\u57f7\u884c\u7dd2 GPT-4 \u57fa\u6e96\uff0c\u540c\u6642\u7372\u5f97 F1 \u5206\u6578\u5728\u57fa\u6e96\u7684 83.5% \u4ee5\u5167\u3002\u9019\u4e9b\u90fd\u4e0d\u9700\u8981\u4f7f\u7528\u8005\u984d\u5916\u7684\u4f5c\u696d\u3002", "author": "Chunwei Liu et.al.", "authors": "Chunwei Liu, Matthew Russo, Michael Cafarella, Lei Cao, Peter Baille Chen, Zui Chen, Michael Franklin, Tim Kraska, Samuel Madden, Gerardo Vitagliano", "id": "2405.14696v2", "paper_url": "http://arxiv.org/abs/2405.14696v2", "repo": "null"}}