{"2410.01485": {"publish_time": "2024-10-02", "title": "A Little Goes a Long Way: Efficient Long Context Training and Inference with Partial Contexts", "paper_summary": "Training and serving long-context large language models (LLMs) incurs\nsubstantial overhead. To address this, two critical steps are often required: a\npretrained LLM typically undergoes a separate stage for context length\nextension by training on long-context data, followed by architectural\nmodifications to reduce the overhead of KV cache during serving. This paper\nargues that integrating length extension with a GPU-friendly KV cache reduction\narchitecture not only reduces training overhead during length extension, but\nalso achieves better long-context performance. This leads to our proposed\nLongGen, which finetunes a pretrained LLM into an efficient architecture during\nlength extension. LongGen builds on three key insights: (1) Sparse attention\npatterns, such as window attention (attending to recent tokens), attention sink\n(initial ones), and blockwise sparse attention (strided token blocks) are\nwell-suited for building efficient long-context models, primarily due to their\nGPU-friendly memory access patterns, enabling efficiency gains not just\ntheoretically but in practice as well. (2) It is essential for the model to\nhave direct access to all tokens. A hybrid architecture with 1/3 full attention\nlayers and 2/3 efficient ones achieves a balanced trade-off between efficiency\nand long-context performance. (3) Lightweight training on 5B long-context data\nis sufficient to extend the hybrid model's context length from 4K to 128K.\n  We evaluate LongGen on both Llama-2 7B and Llama-2 70B, demonstrating its\neffectiveness across different scales. During training with 128K-long contexts,\nLongGen achieves 1.55x training speedup and reduces wall-clock time by 36%,\ncompared to a full-attention baseline. During inference, LongGen reduces KV\ncache memory by 62%, achieving 1.67x prefilling speedup and 1.41x decoding\nspeedup.", "paper_summary_zh": "\u8a13\u7df4\u548c\u63d0\u4f9b\u9577\u8a9e\u5883\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u6703\u7522\u751f\u5927\u91cf\u7684\u958b\u92b7\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u901a\u5e38\u9700\u8981\u5169\u500b\u95dc\u9375\u6b65\u9a5f\uff1a\u9810\u8a13\u7df4\u7684 LLM \u901a\u5e38\u6703\u7d93\u6b77\u4e00\u500b\u55ae\u7368\u7684\u8a9e\u5883\u9577\u5ea6\u5ef6\u4f38\u968e\u6bb5\uff0c\u900f\u904e\u8a13\u7df4\u9577\u8a9e\u5883\u8cc7\u6599\u4f86\u9032\u884c\uff0c\u63a5\u8457\u9032\u884c\u67b6\u69cb\u4fee\u6539\u4ee5\u6e1b\u5c11\u63d0\u4f9b\u670d\u52d9\u671f\u9593 KV \u5feb\u53d6\u7684\u958b\u92b7\u3002\u672c\u6587\u4e3b\u5f35\u5c07\u9577\u5ea6\u5ef6\u4f38\u8207 GPU \u53cb\u5584\u7684 KV \u5feb\u53d6\u6e1b\u5c11\u67b6\u69cb\u6574\u5408\u5728\u4e00\u8d77\uff0c\u4e0d\u50c5\u53ef\u4ee5\u5728\u9577\u5ea6\u5ef6\u4f38\u671f\u9593\u6e1b\u5c11\u8a13\u7df4\u958b\u92b7\uff0c\u9084\u80fd\u9054\u6210\u66f4\u597d\u7684\u9577\u8a9e\u5883\u6548\u80fd\u3002\u9019\u5c0e\u81f4\u6211\u5011\u63d0\u51fa LongGen\uff0c\u5b83\u5728\u9577\u5ea6\u5ef6\u4f38\u671f\u9593\u5c07\u9810\u8a13\u7df4\u7684 LLM \u5fae\u8abf\u6210\u4e00\u500b\u6709\u6548\u7387\u7684\u67b6\u69cb\u3002LongGen \u5efa\u7acb\u5728\u4e09\u500b\u95dc\u9375\u898b\u89e3\u4e0a\uff1a(1) \u7a00\u758f\u6ce8\u610f\u529b\u6a21\u5f0f\uff0c\u4f8b\u5982\u8996\u7a97\u6ce8\u610f\u529b\uff08\u95dc\u6ce8\u6700\u8fd1\u7684\u7b26\u865f\uff09\u3001\u6ce8\u610f\u529b\u63a5\u6536\u5668\uff08\u521d\u59cb\u7684\u7b26\u865f\uff09\u548c\u5340\u584a\u5f0f\u7a00\u758f\u6ce8\u610f\u529b\uff08\u8de8\u6b65\u7b26\u865f\u5340\u584a\uff09\u975e\u5e38\u9069\u5408\u7528\u4f86\u5efa\u69cb\u6709\u6548\u7387\u7684\u9577\u8a9e\u5883\u6a21\u578b\uff0c\u9019\u4e3b\u8981\u662f\u56e0\u70ba\u5b83\u5011\u7684 GPU \u53cb\u5584\u8a18\u61b6\u9ad4\u5b58\u53d6\u6a21\u5f0f\uff0c\u4e0d\u50c5\u5728\u7406\u8ad6\u4e0a\uff0c\u4e5f\u80fd\u5728\u5be6\u52d9\u4e0a\u63d0\u5347\u6548\u7387\u3002(2) \u6a21\u578b\u76f4\u63a5\u5b58\u53d6\u6240\u6709\u7b26\u865f\u81f3\u95dc\u91cd\u8981\u3002\u4e00\u500b\u5177\u6709 1/3 \u5b8c\u6574\u6ce8\u610f\u529b\u5c64\u548c 2/3 \u6709\u6548\u7387\u5c64\u7684\u6df7\u5408\u67b6\u69cb\uff0c\u5728\u6548\u7387\u548c\u9577\u8a9e\u5883\u6548\u80fd\u4e4b\u9593\u53d6\u5f97\u5e73\u8861\u7684\u6298\u8877\u3002(3) \u5728 5B \u9577\u8a9e\u5883\u8cc7\u6599\u4e0a\u9032\u884c\u8f15\u91cf\u5316\u8a13\u7df4\u5c31\u8db3\u4ee5\u5c07\u6df7\u5408\u6a21\u578b\u7684\u8a9e\u5883\u9577\u5ea6\u5f9e 4K \u5ef6\u4f38\u5230 128K\u3002\u6211\u5011\u5728 Llama-2 7B \u548c Llama-2 70B \u4e0a\u8a55\u4f30 LongGen\uff0c\u8b49\u660e\u4e86\u5b83\u5728\u4e0d\u540c\u898f\u6a21\u4e0a\u7684\u6709\u6548\u6027\u3002\u5728\u4f7f\u7528\u9577\u9054 128K \u7684\u8a9e\u5883\u9032\u884c\u8a13\u7df4\u671f\u9593\uff0c\u8207\u5168\u6ce8\u610f\u529b\u57fa\u6e96\u76f8\u6bd4\uff0cLongGen \u9054\u5230\u4e86 1.55 \u500d\u7684\u8a13\u7df4\u52a0\u901f\uff0c\u4e26\u5c07\u5be6\u969b\u57f7\u884c\u6642\u9593\u6e1b\u5c11\u4e86 36%\u3002\u5728\u63a8\u7406\u671f\u9593\uff0cLongGen \u5c07 KV \u5feb\u53d6\u8a18\u61b6\u9ad4\u6e1b\u5c11\u4e86 62%\uff0c\u9054\u5230\u4e86 1.67 \u500d\u7684\u9810\u5148\u586b\u6eff\u52a0\u901f\u548c 1.41 \u500d\u7684\u89e3\u78bc\u52a0\u901f\u3002", "author": "Suyu Ge et.al.", "authors": "Suyu Ge, Xihui Lin, Yunan Zhang, Jiawei Han, Hao Peng", "id": "2410.01485v1", "paper_url": "http://arxiv.org/abs/2410.01485v1", "repo": "null"}}