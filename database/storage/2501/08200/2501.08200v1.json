{"2501.08200": {"publish_time": "2025-01-14", "title": "CWEval: Outcome-driven Evaluation on Functionality and Security of LLM Code Generation", "paper_summary": "Large Language Models (LLMs) have significantly aided developers by\ngenerating or assisting in code writing, enhancing productivity across various\ntasks. While identifying incorrect code is often straightforward, detecting\nvulnerabilities in functionally correct code is more challenging, especially\nfor developers with limited security knowledge, which poses considerable\nsecurity risks of using LLM-generated code and underscores the need for robust\nevaluation benchmarks that assess both functional correctness and security.\nCurrent benchmarks like CyberSecEval and SecurityEval attempt to solve it but\nare hindered by unclear and impractical specifications, failing to assess both\nfunctionality and security accurately. To tackle these deficiencies, we\nintroduce CWEval, a novel outcome-driven evaluation framework designed to\nenhance the evaluation of secure code generation by LLMs. This framework not\nonly assesses code functionality but also its security simultaneously with\nhigh-quality task specifications and outcome-driven test oracles which provides\nhigh accuracy. Coupled with CWEval-bench, a multilingual, security-critical\ncoding benchmark, CWEval provides a rigorous empirical security evaluation on\nLLM-generated code, overcoming previous benchmarks' shortcomings. Through our\nevaluations, CWEval reveals a notable portion of functional but insecure code\nproduced by LLMs, and shows a serious inaccuracy of previous evaluations,\nultimately contributing significantly to the field of secure code generation.\nWe open-source our artifact at: https://github.com/Co1lin/CWEval .", "paper_summary_zh": "\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u5df2\u900f\u904e\u7522\u751f\u6216\u5354\u52a9\u64b0\u5beb\u7a0b\u5f0f\u78bc\uff0c\u5927\u5e45\u5354\u52a9\u958b\u767c\u4eba\u54e1\uff0c\u63d0\u5347\u5404\u7a2e\u4efb\u52d9\u7684\u751f\u7522\u529b\u3002\u96d6\u7136\u8b58\u5225\u932f\u8aa4\u7684\u7a0b\u5f0f\u78bc\u901a\u5e38\u5f88\u7c21\u55ae\uff0c\u4f46\u5075\u6e2c\u529f\u80fd\u6b63\u78ba\u7a0b\u5f0f\u78bc\u4e2d\u7684\u6f0f\u6d1e\u66f4\u5177\u6311\u6230\u6027\uff0c\u7279\u5225\u662f\u5c0d\u65bc\u5b89\u5168\u77e5\u8b58\u6709\u9650\u7684\u958b\u767c\u4eba\u54e1\u800c\u8a00\uff0c\u9019\u5c0d\u4f7f\u7528 LLM \u751f\u6210\u7684\u7a0b\u5f0f\u78bc\u69cb\u6210\u76f8\u7576\u5927\u7684\u5b89\u5168\u98a8\u96aa\uff0c\u4e26\u5f37\u8abf\u9700\u8981\u5065\u5168\u7684\u8a55\u4f30\u57fa\u6e96\uff0c\u4ee5\u8a55\u4f30\u529f\u80fd\u6b63\u78ba\u6027\u548c\u5b89\u5168\u6027\u3002CyberSecEval \u548c SecurityEval \u7b49\u76ee\u524d\u7684\u57fa\u6e96\u8a66\u5716\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u4f46\u53d7\u5230\u4e0d\u660e\u78ba\u4e14\u4e0d\u5207\u5be6\u969b\u7684\u898f\u683c\u963b\u7919\uff0c\u7121\u6cd5\u6e96\u78ba\u8a55\u4f30\u529f\u80fd\u548c\u5b89\u5168\u6027\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u4e9b\u7f3a\u9ede\uff0c\u6211\u5011\u5f15\u5165\u4e86 CWEval\uff0c\u4e00\u500b\u65b0\u7a4e\u7684\u6210\u679c\u5c0e\u5411\u8a55\u4f30\u67b6\u69cb\uff0c\u65e8\u5728\u52a0\u5f37\u5c0d LLM \u5b89\u5168\u7a0b\u5f0f\u78bc\u751f\u6210\u7684\u8a55\u4f30\u3002\u9019\u500b\u67b6\u69cb\u4e0d\u50c5\u8a55\u4f30\u7a0b\u5f0f\u78bc\u529f\u80fd\uff0c\u9084\u540c\u6642\u8a55\u4f30\u5176\u5b89\u5168\u6027\uff0c\u4e26\u5177\u5099\u9ad8\u54c1\u8cea\u7684\u4efb\u52d9\u898f\u683c\u548c\u6210\u679c\u5c0e\u5411\u6e2c\u8a66\u9810\u8a00\uff0c\u53ef\u63d0\u4f9b\u9ad8\u6e96\u78ba\u5ea6\u3002\u7d50\u5408\u591a\u8a9e\u8a00\u3001\u5b89\u5168\u95dc\u9375\u7de8\u78bc\u57fa\u6e96 CWEval-bench\uff0cCWEval \u5c0d LLM \u751f\u6210\u7684\u7a0b\u5f0f\u78bc\u63d0\u4f9b\u56b4\u8b39\u7684\u7d93\u9a57\u5b89\u5168\u8a55\u4f30\uff0c\u514b\u670d\u4e86\u5148\u524d\u57fa\u6e96\u7684\u7f3a\u9ede\u3002\u900f\u904e\u6211\u5011\u7684\u8a55\u4f30\uff0cCWEval \u63ed\u9732\u4e86 LLM \u7522\u751f\u7684\u4e00\u5927\u90e8\u5206\u529f\u80fd\u6027\u4f46\u53c8\u4e0d\u5b89\u5168\u7684\u7a0b\u5f0f\u78bc\uff0c\u4e26\u986f\u793a\u5148\u524d\u8a55\u4f30\u7684\u56b4\u91cd\u4e0d\u6e96\u78ba\u6027\uff0c\u6700\u7d42\u5c0d\u5b89\u5168\u7a0b\u5f0f\u78bc\u751f\u6210\u7684\u9818\u57df\u505a\u51fa\u91cd\u5927\u8ca2\u737b\u3002\u6211\u5011\u5728 https://github.com/Co1lin/CWEval \u958b\u653e\u539f\u59cb\u78bc\u5de5\u4ef6\u3002", "author": "Jinjun Peng et.al.", "authors": "Jinjun Peng, Leyi Cui, Kele Huang, Junfeng Yang, Baishakhi Ray", "id": "2501.08200v1", "paper_url": "http://arxiv.org/abs/2501.08200v1", "repo": "null"}}