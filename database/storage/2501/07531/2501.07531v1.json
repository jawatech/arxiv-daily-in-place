{"2501.07531": {"publish_time": "2025-01-13", "title": "Evaluating Agent-based Program Repair at Google", "paper_summary": "Agent-based program repair offers to automatically resolve complex bugs\nend-to-end by combining the planning, tool use, and code generation abilities\nof modern LLMs. Recent work has explored the use of agent-based repair\napproaches on the popular open-source SWE-Bench, a collection of bugs from\nhighly-rated GitHub Python projects. In addition, various agentic approaches\nsuch as SWE-Agent have been proposed to solve bugs in this benchmark. This\npaper explores the viability of using an agentic approach to address bugs in an\nenterprise context. To investigate this, we curate an evaluation set of 178\nbugs drawn from Google's issue tracking system. This dataset spans both\nhuman-reported (78) and machine-reported bugs (100).\n  To establish a repair performance baseline on this benchmark, we implement\nPasserine, an agent similar in spirit to SWE-Agent that can work within\nGoogle's development environment. We show that with 20 trajectory samples and\nGemini 1.5 Pro, Passerine can produce a patch that passes bug tests (i.e.,\nplausible) for 73% of machine-reported and 25.6% of human-reported bugs in our\nevaluation set. After manual examination, we found that 43% of machine-reported\nbugs and 17.9% of human-reported bugs have at least one patch that is\nsemantically equivalent to the ground-truth patch.\n  These results establish a baseline on an industrially relevant benchmark,\nwhich as we show, contains bugs drawn from a different distribution -- in terms\nof language diversity, size, and spread of changes, etc. -- compared to those\nin the popular SWE-Bench dataset.", "paper_summary_zh": "<paragraph>\u57fa\u65bc\u4ee3\u7406\u7a0b\u5f0f\u7a0b\u5f0f\u4fee\u5fa9\u63d0\u4f9b\u81ea\u52d5\u89e3\u6c7a\u8907\u96dc\u932f\u8aa4\u7684\u65b9\u6cd5\uff0c\n\u900f\u904e\u7d50\u5408\u73fe\u4ee3\u5927\u578b\u8a9e\u8a00\u6a21\u578b\u7684\u898f\u5283\u3001\u5de5\u5177\u4f7f\u7528\u548c\u7a0b\u5f0f\u78bc\u751f\u6210\u80fd\u529b\uff0c\n\u5f9e\u982d\u5230\u5c3e\u89e3\u6c7a\u554f\u984c\u3002\u6700\u8fd1\u7684\u7814\u7a76\u63a2\u7d22\u5728\u5ee3\u53d7\u6b61\u8fce\u7684\u958b\u6e90 SWE-Bench \u4e0a\u4f7f\u7528\u57fa\u65bc\u4ee3\u7406\u7a0b\u5f0f\u7684\u4fee\u5fa9\u65b9\u6cd5\uff0c\n\u9019\u662f\u5f9e GitHub Python \u5c08\u6848\u4e2d\u6536\u96c6\u7684\u932f\u8aa4\u96c6\u5408\u3002\u6b64\u5916\uff0c\n\u5df2\u7d93\u63d0\u51fa\u5404\u7a2e\u4ee3\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 SWE-Agent\uff0c\u4f86\u89e3\u6c7a\u6b64\u57fa\u6e96\u4e2d\u7684\u932f\u8aa4\u3002\u9019\u7bc7\u8ad6\u6587\u63a2\u8a0e\u4f7f\u7528\u4ee3\u7406\u65b9\u6cd5\u4f86\u89e3\u6c7a\u4f01\u696d\u74b0\u5883\u4e2d\u7684\u932f\u8aa4\u7684\u53ef\u884c\u6027\u3002\u70ba\u4e86\u8abf\u67e5\u9019\u4e00\u9ede\uff0c\n\u6211\u5011\u6574\u7406\u4e86\u4e00\u500b\u7531 Google \u554f\u984c\u8ffd\u8e64\u7cfb\u7d71\u4e2d\u63d0\u53d6\u7684 178 \u500b\u932f\u8aa4\u7684\u8a55\u4f30\u96c6\u3002\u6b64\u8cc7\u6599\u96c6\u6db5\u84cb\u4eba\u5de5\u56de\u5831\u7684\u932f\u8aa4 (78) \u548c\u6a5f\u5668\u56de\u5831\u7684\u932f\u8aa4 (100)\u3002\n\u70ba\u4e86\u5efa\u7acb\u6b64\u57fa\u6e96\u7684\u4fee\u5fa9\u6548\u80fd\u57fa\u6e96\uff0c\u6211\u5011\u5be6\u4f5c Passerine\uff0c\u4e00\u7a2e\u8207 SWE-Agent \u7cbe\u795e\u76f8\u4f3c\u7684\u4ee3\u7406\u7a0b\u5f0f\uff0c\u53ef\u4ee5\u5728 Google \u7684\u958b\u767c\u74b0\u5883\u4e2d\u5de5\u4f5c\u3002\u6211\u5011\u5c55\u793a\uff0c\u4f7f\u7528 20 \u500b\u8ecc\u8de1\u6a23\u672c\u548c Gemini 1.5 Pro\uff0cPasserine \u53ef\u4ee5\u7522\u751f\u4e00\u500b\u901a\u904e\u932f\u8aa4\u6e2c\u8a66\u7684\u4fee\u88dc\u7a0b\u5f0f (\u5373\uff0c\u770b\u4f3c\u5408\u7406\u7684) \u9069\u7528\u65bc\u6211\u5011\u8a55\u4f30\u96c6\u4e2d 73% \u7684\u6a5f\u5668\u56de\u5831\u932f\u8aa4\u548c 25.6% \u7684\u4eba\u5de5\u56de\u5831\u932f\u8aa4\u3002\u7d93\u904e\u624b\u52d5\u6aa2\u67e5\uff0c\u6211\u5011\u767c\u73fe 43% \u7684\u6a5f\u5668\u56de\u5831\u932f\u8aa4\u548c 17.9% \u7684\u4eba\u5de5\u56de\u5831\u932f\u8aa4\u81f3\u5c11\u6709\u4e00\u500b\u4fee\u88dc\u7a0b\u5f0f\u5728\u8a9e\u610f\u4e0a\u7b49\u540c\u65bc\u771f\u5be6\u4fee\u88dc\u7a0b\u5f0f\u3002\n\u9019\u4e9b\u7d50\u679c\u5728\u8207\u7522\u696d\u76f8\u95dc\u7684\u57fa\u6e96\u4e0a\u5efa\u7acb\u4e86\u4e00\u500b\u57fa\u6e96\uff0c\u6b63\u5982\u6211\u5011\u6240\u5c55\u793a\u7684\uff0c\u5305\u542b\u5f9e\u4e0d\u540c\u5206\u4f48\u4e2d\u63d0\u53d6\u7684\u932f\u8aa4--\u5c31\u8a9e\u8a00\u591a\u6a23\u6027\u3001\u5927\u5c0f\u548c\u8b8a\u66f4\u7bc4\u570d\u7b49\u65b9\u9762\u4f86\u8aaa--\u8207\u5ee3\u53d7\u6b61\u8fce\u7684 SWE-Bench \u8cc7\u6599\u96c6\u4e2d\u7684\u932f\u8aa4\u76f8\u6bd4\u3002</paragraph>", "author": "Pat Rondon et.al.", "authors": "Pat Rondon, Renyao Wei, Jos\u00e9 Cambronero, J\u00fcrgen Cito, Aaron Sun, Siddhant Sanyam, Michele Tufano, Satish Chandra", "id": "2501.07531v1", "paper_url": "http://arxiv.org/abs/2501.07531v1", "repo": "null"}}