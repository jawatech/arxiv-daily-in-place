{"2410.10315": {"publish_time": "2024-10-14", "title": "EasyRAG: Efficient Retrieval-Augmented Generation Framework for Automated Network Operations", "paper_summary": "This paper presents EasyRAG, a simple, lightweight, and efficient\nretrieval-augmented generation framework for automated network operations. Our\nframework has three advantages. The first is accurate question answering. We\ndesigned a straightforward RAG scheme based on (1) a specific data processing\nworkflow (2) dual-route sparse retrieval for coarse ranking (3) LLM Reranker\nfor reranking (4) LLM answer generation and optimization. This approach\nachieved first place in the GLM4 track in the preliminary round and second\nplace in the GLM4 track in the semifinals. The second is simple deployment. Our\nmethod primarily consists of BM25 retrieval and BGE-reranker reranking,\nrequiring no fine-tuning of any models, occupying minimal VRAM, easy to deploy,\nand highly scalable; we provide a flexible code library with various search and\ngeneration strategies, facilitating custom process implementation. The last one\nis efficient inference. We designed an efficient inference acceleration scheme\nfor the entire coarse ranking, reranking, and generation process that\nsignificantly reduces the inference latency of RAG while maintaining a good\nlevel of accuracy; each acceleration scheme can be plug-and-play into any\ncomponent of the RAG process, consistently enhancing the efficiency of the RAG\nsystem. Our code and data are released at\n\\url{https://github.com/BUAADreamer/EasyRAG}.", "paper_summary_zh": "\u672c\u6587\u63d0\u51fa\u4e86 EasyRAG\uff0c\u4e00\u500b\u7c21\u55ae\u3001\u8f15\u91cf\u4e14\u9ad8\u6548\u7684\u6aa2\u7d22\u589e\u5f37\u751f\u6210\u6846\u67b6\uff0c\u7528\u65bc\u81ea\u52d5\u5316\u7db2\u8def\u64cd\u4f5c\u3002\u6211\u5011\u7684\u6846\u67b6\u6709\u4e09\u500b\u512a\u9ede\u3002\u7b2c\u4e00\u500b\u662f\u7cbe\u78ba\u7684\u554f\u7b54\u3002\u6211\u5011\u8a2d\u8a08\u4e86\u4e00\u500b\u57fa\u65bc (1) \u7279\u5b9a\u8cc7\u6599\u8655\u7406\u5de5\u4f5c\u6d41\u7a0b (2) \u96d9\u8def\u5f91\u7a00\u758f\u6aa2\u7d22\u7528\u65bc\u7c97\u7565\u6392\u5e8f (3) LLM Reranker \u7528\u65bc\u91cd\u65b0\u6392\u5e8f (4) LLM \u7b54\u6848\u751f\u6210\u548c\u6700\u4f73\u5316\u7684\u76f4\u63a5 RAG \u67b6\u69cb\u3002\u6b64\u65b9\u6cd5\u5728\u9810\u8cfd\u4e2d\u7372\u5f97 GLM4 \u8ecc\u9053\u7b2c\u4e00\u540d\uff0c\u5728\u6e96\u6c7a\u8cfd\u4e2d\u7372\u5f97 GLM4 \u8ecc\u9053\u7b2c\u4e8c\u540d\u3002\u7b2c\u4e8c\u500b\u662f\u7c21\u55ae\u7684\u90e8\u7f72\u3002\u6211\u5011\u7684\u6280\u8853\u4e3b\u8981\u5305\u542b BM25 \u6aa2\u7d22\u548c BGE-reranker \u91cd\u65b0\u6392\u5e8f\uff0c\u4e0d\u9700\u8981\u5fae\u8abf\u4efb\u4f55\u6a21\u578b\uff0c\u4f54\u7528\u6700\u5c11\u7684 VRAM\uff0c\u6613\u65bc\u90e8\u7f72\u4e14\u9ad8\u5ea6\u53ef\u64f4\u5145\uff1b\u6211\u5011\u63d0\u4f9b\u4e00\u500b\u9748\u6d3b\u7684\u7a0b\u5f0f\u78bc\u5eab\uff0c\u5305\u542b\u5404\u7a2e\u641c\u5c0b\u548c\u751f\u6210\u7b56\u7565\uff0c\u4fbf\u65bc\u81ea\u8a02\u6d41\u7a0b\u5be6\u4f5c\u3002\u6700\u5f8c\u4e00\u500b\u662f\u6709\u6548\u7387\u7684\u63a8\u8ad6\u3002\u6211\u5011\u8a2d\u8a08\u4e86\u4e00\u500b\u6709\u6548\u7684\u63a8\u8ad6\u52a0\u901f\u67b6\u69cb\uff0c\u7528\u65bc\u6574\u500b\u7c97\u7565\u6392\u5e8f\u3001\u91cd\u65b0\u6392\u5e8f\u548c\u751f\u6210\u6d41\u7a0b\uff0c\u5728\u7dad\u6301\u826f\u597d\u7cbe\u78ba\u5ea6\u7684\u540c\u6642\uff0c\u5927\u5e45\u964d\u4f4e RAG \u7684\u63a8\u8ad6\u5ef6\u9072\uff1b\u6bcf\u500b\u52a0\u901f\u67b6\u69cb\u90fd\u53ef\u4ee5\u5373\u63d2\u5373\u7528\u65bc RAG \u6d41\u7a0b\u7684\u4efb\u4f55\u7d44\u6210\u90e8\u5206\uff0c\u6301\u7e8c\u63d0\u5347 RAG \u7cfb\u7d71\u7684\u6548\u7387\u3002\u6211\u5011\u7684\u7a0b\u5f0f\u78bc\u548c\u8cc7\u6599\u5df2\u767c\u4f48\u65bc\n\\url{https://github.com/BUAADreamer/EasyRAG}\u3002", "author": "Zhangchi Feng et.al.", "authors": "Zhangchi Feng, Dongdong Kuang, Zhongyuan Wang, Zhijie Nie, Yaowei Zheng, Richong Zhang", "id": "2410.10315v2", "paper_url": "http://arxiv.org/abs/2410.10315v2", "repo": "https://github.com/buaadreamer/easyrag"}}