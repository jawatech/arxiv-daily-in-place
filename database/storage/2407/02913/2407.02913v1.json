{"2407.02913": {"publish_time": "2024-07-03", "title": "SFC: Achieve Accurate Fast Convolution under Low-precision Arithmetic", "paper_summary": "Fast convolution algorithms, including Winograd and FFT, can efficiently\naccelerate convolution operations in deep models. However, these algorithms\ndepend on high-precision arithmetic to maintain inference accuracy, which\nconflicts with the model quantization. To resolve this conflict and further\nimprove the efficiency of quantized convolution, we proposes SFC, a new algebra\ntransform for fast convolution by extending the Discrete Fourier Transform\n(DFT) with symbolic computing, in which only additions are required to perform\nthe transformation at specific transform points, avoiding the calculation of\nirrational number and reducing the requirement for precision. Additionally, we\nenhance convolution efficiency by introducing correction terms to convert\ninvalid circular convolution outputs of the Fourier method into effective ones.\nThe numerical error analysis is presented for the first time in this type of\nwork and proves that our algorithms can provide a 3.68x multiplication\nreduction for 3x3 convolution, while the Winograd algorithm only achieves a\n2.25x reduction with similarly low numerical errors. Experiments carried out on\nbenchmarks and FPGA show that our new algorithms can further improve the\ncomputation efficiency of quantized models while maintaining accuracy,\nsurpassing both the quantization-alone method and existing works on fast\nconvolution quantization.", "paper_summary_zh": "\u5feb\u901f\u5377\u7a4d\u6f14\u7b97\u6cd5\uff0c\u5305\u62ec Winograd \u548c FFT\uff0c\u80fd\u6709\u6548\u52a0\u901f\u6df1\u5ea6\u6a21\u578b\u4e2d\u7684\u5377\u7a4d\u904b\u7b97\u3002\u7136\u800c\uff0c\u9019\u4e9b\u6f14\u7b97\u6cd5\u4f9d\u8cf4\u65bc\u9ad8\u7cbe\u5ea6\u7b97\u8853\u4f86\u7dad\u6301\u63a8\u8ad6\u6e96\u78ba\u5ea6\uff0c\u9019\u8207\u6a21\u578b\u91cf\u5316\u7522\u751f\u885d\u7a81\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u885d\u7a81\u4e26\u9032\u4e00\u6b65\u63d0\u5347\u91cf\u5316\u5377\u7a4d\u7684\u6548\u7387\uff0c\u6211\u5011\u63d0\u51fa\u4e86 SFC\uff0c\u4e00\u7a2e\u65b0\u7684\u4ee3\u6578\u8f49\u63db\uff0c\u7528\u65bc\u5feb\u901f\u5377\u7a4d\uff0c\u900f\u904e\u64f4\u5145\u96e2\u6563\u5085\u7acb\u8449\u8f49\u63db (DFT) \u8207\u7b26\u865f\u904b\u7b97\uff0c\u5176\u4e2d\u53ea\u9700\u8981\u52a0\u6cd5\u5c31\u80fd\u5728\u7279\u5b9a\u8f49\u63db\u9ede\u57f7\u884c\u8f49\u63db\uff0c\u907f\u514d\u8a08\u7b97\u7121\u7406\u6578\u4e26\u6e1b\u5c11\u5c0d\u7cbe\u5ea6\u7684\u9700\u6c42\u3002\u6b64\u5916\uff0c\u6211\u5011\u900f\u904e\u5f15\u5165\u4fee\u6b63\u9805\u5c07\u5085\u7acb\u8449\u65b9\u6cd5\u7684\u7121\u6548\u5faa\u74b0\u5377\u7a4d\u8f38\u51fa\u8f49\u63db\u70ba\u6709\u6548\u7684\u8f38\u51fa\uff0c\u9032\u800c\u63d0\u5347\u5377\u7a4d\u6548\u7387\u3002\u9019\u985e\u578b\u7684\u7814\u7a76\u4e2d\u9996\u6b21\u63d0\u51fa\u6578\u503c\u8aa4\u5dee\u5206\u6790\uff0c\u4e26\u8b49\u660e\u6211\u5011\u7684\u6f14\u7b97\u6cd5\u80fd\u70ba 3x3 \u5377\u7a4d\u63d0\u4f9b 3.68 \u500d\u7684\u4e58\u6cd5\u904b\u7b97\u6e1b\u5c11\uff0c\u800c Winograd \u6f14\u7b97\u6cd5\u5728\u540c\u6a23\u4f4e\u7684\u6578\u503c\u8aa4\u5dee\u4e0b\u53ea\u80fd\u9054\u5230 2.25 \u500d\u7684\u6e1b\u5c11\u3002\u5728\u57fa\u6e96\u6e2c\u8a66\u548c FPGA \u4e0a\u9032\u884c\u7684\u5be6\u9a57\u986f\u793a\uff0c\u6211\u5011\u7684\u6f14\u7b97\u6cd5\u80fd\u9032\u4e00\u6b65\u63d0\u5347\u91cf\u5316\u6a21\u578b\u7684\u904b\u7b97\u6548\u7387\uff0c\u540c\u6642\u7dad\u6301\u6e96\u78ba\u5ea6\uff0c\u8d85\u8d8a\u4e86\u50c5\u91cf\u5316\u65b9\u6cd5\u548c\u73fe\u6709\u5feb\u901f\u5377\u7a4d\u91cf\u5316\u7814\u7a76\u3002", "author": "Liulu He et.al.", "authors": "Liulu He, Yufei Zhao, Rui Gao, Yuan Du, Li Du", "id": "2407.02913v1", "paper_url": "http://arxiv.org/abs/2407.02913v1", "repo": "null"}}