{"2411.09580": {"publish_time": "2024-11-14", "title": "Software Performance Engineering for Foundation Model-Powered Software (FMware)", "paper_summary": "The rise of Foundation Models (FMs) like Large Language Models (LLMs) is\nrevolutionizing software development. Despite the impressive prototypes,\ntransforming FMware into production-ready products demands complex engineering\nacross various domains. A critical but overlooked aspect is performance\nengineering, which aims at ensuring FMware meets performance goals such as\nthroughput and latency to avoid user dissatisfaction and financial loss. Often,\nperformance considerations are an afterthought, leading to costly optimization\nefforts post-deployment. FMware's high computational resource demands highlight\nthe need for efficient hardware use. Continuous performance engineering is\nessential to prevent degradation. This paper highlights the significance of\nSoftware Performance Engineering (SPE) in FMware, identifying four key\nchallenges: cognitive architecture design, communication protocols, tuning and\noptimization, and deployment. These challenges are based on literature surveys\nand experiences from developing an in-house FMware system. We discuss problems,\ncurrent practices, and innovative paths for the software engineering community.", "paper_summary_zh": "\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u7b49\u57fa\u790e\u6a21\u578b (FM) \u7684\u8208\u8d77\u6b63\u5728\u9769\u65b0\u8edf\u9ad4\u958b\u767c\u3002\u5118\u7ba1\u6709\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u539f\u578b\uff0c\u4f46\u8981\u5c07 FMware \u8f49\u8b8a\u70ba\u53ef\u4f9b\u751f\u7522\u7684\u7522\u54c1\uff0c\u9700\u8981\u8de8\u8d8a\u4e0d\u540c\u9818\u57df\u7684\u8907\u96dc\u5de5\u7a0b\u3002\u4e00\u500b\u95dc\u9375\u4f46\u88ab\u5ffd\u8996\u7684\u9762\u5411\u662f\u6548\u80fd\u5de5\u7a0b\uff0c\u5176\u76ee\u6a19\u5728\u65bc\u78ba\u4fdd FMware \u7b26\u5408\u6548\u80fd\u76ee\u6a19\uff0c\u4f8b\u5982\u541e\u5410\u91cf\u548c\u5ef6\u9072\uff0c\u4ee5\u907f\u514d\u4f7f\u7528\u8005\u4e0d\u6eff\u610f\u548c\u8ca1\u52d9\u640d\u5931\u3002\u6548\u80fd\u8003\u91cf\u901a\u5e38\u662f\u4e8b\u5f8c\u624d\u60f3\u5230\uff0c\u5c0e\u81f4\u90e8\u7f72\u5f8c\u9032\u884c\u4ee3\u50f9\u9ad8\u6602\u7684\u6700\u4f73\u5316\u5de5\u4f5c\u3002FMware \u5c0d\u9ad8\u904b\u7b97\u8cc7\u6e90\u7684\u9700\u6c42\u51f8\u986f\u4e86\u5c0d\u9ad8\u6548\u786c\u9ad4\u4f7f\u7528\u7684\u9700\u6c42\u3002\u6301\u7e8c\u7684\u6548\u80fd\u5de5\u7a0b\u5c0d\u65bc\u9632\u6b62\u6548\u80fd\u4e0b\u964d\u81f3\u95dc\u91cd\u8981\u3002\u672c\u6587\u5f37\u8abf\u4e86\u8edf\u9ad4\u6548\u80fd\u5de5\u7a0b (SPE) \u5728 FMware \u4e2d\u7684\u91cd\u8981\u6027\uff0c\u4e26\u627e\u51fa\u56db\u9805\u4e3b\u8981\u6311\u6230\uff1a\u8a8d\u77e5\u67b6\u69cb\u8a2d\u8a08\u3001\u901a\u8a0a\u5354\u5b9a\u3001\u8abf\u6574\u548c\u6700\u4f73\u5316\uff0c\u4ee5\u53ca\u90e8\u7f72\u3002\u9019\u4e9b\u6311\u6230\u57fa\u65bc\u6587\u737b\u8abf\u67e5\u548c\u958b\u767c\u5167\u90e8 FMware \u7cfb\u7d71\u7684\u7d93\u9a57\u3002\u6211\u5011\u8a0e\u8ad6\u4e86\u8edf\u9ad4\u5de5\u7a0b\u793e\u7fa4\u7684\u554f\u984c\u3001\u73fe\u884c\u505a\u6cd5\u548c\u5275\u65b0\u9014\u5f91\u3002", "author": "Haoxiang Zhang et.al.", "authors": "Haoxiang Zhang, Shi Chang, Arthur Leung, Kishanthan Thangarajah, Boyuan Chen, Hanan Lutfiyya, Ahmed E. Hassan", "id": "2411.09580v1", "paper_url": "http://arxiv.org/abs/2411.09580v1", "repo": "null"}}