{"2411.07107": {"publish_time": "2024-11-11", "title": "Training Neural Networks as Recognizers of Formal Languages", "paper_summary": "Characterizing the computational power of neural network architectures in\nterms of formal language theory remains a crucial line of research, as it\ndescribes lower and upper bounds on the reasoning capabilities of modern AI.\nHowever, when empirically testing these bounds, existing work often leaves a\ndiscrepancy between experiments and the formal claims they are meant to\nsupport. The problem is that formal language theory pertains specifically to\nrecognizers: machines that receive a string as input and classify whether it\nbelongs to a language. On the other hand, it is common to instead use proxy\ntasks that are similar in only an informal sense, such as language modeling or\nsequence-to-sequence transduction. We correct this mismatch by training and\nevaluating neural networks directly as binary classifiers of strings, using a\ngeneral method that can be applied to a wide variety of languages. As part of\nthis, we extend an algorithm recently proposed by Sn{\\ae}bjarnarson et al.\n(2024) to do length-controlled sampling of strings from regular languages, with\nmuch better asymptotic time complexity than previous methods. We provide\nresults on a variety of languages across the Chomsky hierarchy for three neural\narchitectures: a simple RNN, an LSTM, and a causally-masked transformer. We\nfind that the RNN and LSTM often outperform the transformer, and that auxiliary\ntraining objectives such as language modeling can help, although no single\nobjective uniformly improves performance across languages and architectures.\nOur contributions will facilitate theoretically sound empirical testing of\nlanguage recognition claims in future work. We have released our datasets as a\nbenchmark called FLaRe (Formal Language Recognition), along with our code.", "paper_summary_zh": "<paragraph>\u4ee5\u5f62\u5f0f\u8a9e\u8a00\u7406\u8ad6\u4f86\u63cf\u8ff0\u795e\u7d93\u7db2\u8def\u67b6\u69cb\u7684\u904b\u7b97\u80fd\u529b\uff0c\u4ecd\u7136\u662f\u7814\u7a76\u7684\u4e00\u689d\u95dc\u9375\u8def\u7dda\uff0c\u56e0\u70ba\u5b83\u63cf\u8ff0\u4e86\u73fe\u4ee3\u4eba\u5de5\u667a\u6167\u7684\u63a8\u7406\u80fd\u529b\u7684\u4e0b\u9650\u548c\u4e0a\u9650\u3002\u7136\u800c\uff0c\u5728\u5be6\u8b49\u6aa2\u9a57\u9019\u4e9b\u754c\u9650\u6642\uff0c\u73fe\u6709\u7814\u7a76\u901a\u5e38\u6703\u5728\u5be6\u9a57\u548c\u5b83\u5011\u610f\u5716\u652f\u6301\u7684\u5f62\u5f0f\u5316\u4e3b\u5f35\u4e4b\u9593\u7559\u4e0b\u51fa\u5165\u3002\u554f\u984c\u5728\u65bc\u5f62\u5f0f\u8a9e\u8a00\u7406\u8ad6\u7279\u5225\u9069\u7528\u65bc\u8fa8\u8b58\u5668\uff1a\u63a5\u6536\u5b57\u4e32\u4f5c\u70ba\u8f38\u5165\u4e26\u5206\u985e\u5b83\u662f\u5426\u5c6c\u65bc\u67d0\u7a2e\u8a9e\u8a00\u7684\u6a5f\u5668\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u901a\u5e38\u6703\u4f7f\u7528\u50c5\u5728\u975e\u6b63\u5f0f\u610f\u7fa9\u4e0a\u76f8\u4f3c\u7684\u4ee3\u7406\u4efb\u52d9\uff0c\u4f8b\u5982\u8a9e\u8a00\u6a21\u578b\u6216\u5e8f\u5217\u5230\u5e8f\u5217\u7684\u8f49\u63db\u3002\u6211\u5011\u901a\u904e\u4f7f\u7528\u4e00\u7a2e\u53ef\u61c9\u7528\u65bc\u5404\u7a2e\u8a9e\u8a00\u7684\u4e00\u822c\u65b9\u6cd5\uff0c\u76f4\u63a5\u8a13\u7df4\u548c\u8a55\u4f30\u795e\u7d93\u7db2\u8def\u4f5c\u70ba\u5b57\u4e32\u7684\u4e8c\u5143\u5206\u985e\u5668\uff0c\u4f86\u4fee\u6b63\u9019\u7a2e\u4e0d\u5339\u914d\u3002\u4f5c\u70ba\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u6211\u5011\u64f4\u5c55\u4e86 Sn{\\ae}bjarnarson \u7b49\u4eba\u6700\u8fd1\u63d0\u51fa\u7684\u6f14\u7b97\u6cd5\uff082024 \u5e74\uff09\uff0c\u4ee5\u5c0d\u6b63\u5247\u8a9e\u8a00\u4e2d\u7684\u5b57\u4e32\u9032\u884c\u9577\u5ea6\u63a7\u5236\u7684\u62bd\u6a23\uff0c\u5176\u6f38\u8fd1\u6642\u9593\u8907\u96dc\u5ea6\u9060\u512a\u65bc\u5148\u524d\u7684\u6f14\u7b97\u6cd5\u3002\u6211\u5011\u91dd\u5c0d\u4e09\u500b\u795e\u7d93\u67b6\u69cb\u63d0\u4f9b\u5404\u7a2e\u55ac\u59c6\u65af\u57fa\u968e\u5c64\u8a9e\u8a00\u7684\u7d50\u679c\uff1a\u4e00\u500b\u7c21\u55ae\u7684\u905e\u8ff4\u795e\u7d93\u7db2\u8def\u3001\u4e00\u500b\u9577\u77ed\u671f\u8a18\u61b6\u7db2\u8def\u548c\u4e00\u500b\u56e0\u679c\u906e\u7f69Transformer\u3002\u6211\u5011\u767c\u73fe\u905e\u8ff4\u795e\u7d93\u7db2\u8def\u548c\u9577\u77ed\u671f\u8a18\u61b6\u7db2\u8def\u901a\u5e38\u512a\u65bcTransformer\uff0c\u4e26\u4e14\u8a9e\u8a00\u6a21\u578b\u7b49\u8f14\u52a9\u8a13\u7df4\u76ee\u6a19\u53ef\u80fd\u6709\u5e6b\u52a9\uff0c\u5118\u7ba1\u6c92\u6709\u55ae\u4e00\u7684\u76ee\u6a19\u80fd\u666e\u904d\u63d0\u5347\u5404\u7a2e\u8a9e\u8a00\u548c\u67b6\u69cb\u7684\u6548\u80fd\u3002\u6211\u5011\u7684\u8ca2\u737b\u5c07\u6709\u52a9\u65bc\u5728\u672a\u4f86\u7684\u7814\u7a76\u4e2d\u5c0d\u8a9e\u8a00\u8fa8\u8b58\u4e3b\u5f35\u9032\u884c\u7406\u8ad6\u4e0a\u5408\u7406\u7684\u5be6\u8b49\u6aa2\u9a57\u3002\u6211\u5011\u5df2\u5c07\u6211\u5011\u7684\u8cc7\u6599\u96c6\u4f5c\u70ba\u4e00\u500b\u540d\u70ba FLaRe\uff08\u5f62\u5f0f\u8a9e\u8a00\u8fa8\u8b58\uff09\u7684\u57fa\u6e96\u767c\u5e03\uff0c\u4e26\u9644\u4e0a\u6211\u5011\u7684\u7a0b\u5f0f\u78bc\u3002</paragraph>", "author": "Alexandra Butoi et.al.", "authors": "Alexandra Butoi, Ghazal Khalighinejad, Anej Svete, Josef Valvoda, Ryan Cotterell, Brian DuSell", "id": "2411.07107v1", "paper_url": "http://arxiv.org/abs/2411.07107v1", "repo": "https://github.com/rycolab/neural-network-recognizers"}}