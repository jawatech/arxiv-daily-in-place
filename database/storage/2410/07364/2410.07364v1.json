{"2410.07364": {"publish_time": "2024-10-09", "title": "Unlocking Real-Time Fluorescence Lifetime Imaging: Multi-Pixel Parallelism for FPGA-Accelerated Processing", "paper_summary": "Fluorescence lifetime imaging (FLI) is a widely used technique in the\nbiomedical field for measuring the decay times of fluorescent molecules,\nproviding insights into metabolic states, protein interactions, and\nligand-receptor bindings. However, its broader application in fast biological\nprocesses, such as dynamic activity monitoring, and clinical use, such as in\nguided surgery, is limited by long data acquisition times and computationally\ndemanding data processing. While deep learning has reduced post-processing\ntimes, time-resolved data acquisition remains a bottleneck for real-time\napplications. To address this, we propose a method to achieve real-time FLI\nusing an FPGA-based hardware accelerator. Specifically, we implemented a\nGRU-based sequence-to-sequence (Seq2Seq) model on an FPGA board compatible with\ntime-resolved cameras. The GRU model balances accurate processing with the\nresource constraints of FPGAs, which have limited DSP units and BRAM. The\nlimited memory and computational resources on the FPGA require efficient\nscheduling of operations and memory allocation to deploy deep learning models\nfor low-latency applications. We address these challenges by using STOMP, a\nqueue-based discrete-event simulator that automates and optimizes task\nscheduling and memory management on hardware. By integrating a GRU-based\nSeq2Seq model and its compressed version, called Seq2SeqLite, generated through\nknowledge distillation, we were able to process multiple pixels in parallel,\nreducing latency compared to sequential processing. We explore various levels\nof parallelism to achieve an optimal balance between performance and resource\nutilization. Our results indicate that the proposed techniques achieved a 17.7x\nand 52.0x speedup over manual scheduling for the Seq2Seq model and the\nSeq2SeqLite model, respectively.", "paper_summary_zh": "\u87a2\u5149\u751f\u547d\u9031\u671f\u5f71\u50cf (FLI) \u662f\u751f\u7269\u91ab\u5b78\u9818\u57df\u4e2d\u5ee3\u6cdb\u4f7f\u7528\u7684\u6280\u8853\uff0c\u7528\u65bc\u6e2c\u91cf\u87a2\u5149\u5206\u5b50\u7684\u8870\u8b8a\u6642\u9593\uff0c\u63d0\u4f9b\u4ee3\u8b1d\u72c0\u614b\u3001\u86cb\u767d\u8cea\u4ea4\u4e92\u4f5c\u7528\u548c\u914d\u9ad4\u53d7\u9ad4\u7d50\u5408\u7684\u898b\u89e3\u3002\u7136\u800c\uff0c\u5176\u5728\u5feb\u901f\u751f\u7269\u904e\u7a0b\uff08\u4f8b\u5982\u52d5\u614b\u6d3b\u52d5\u76e3\u6e2c\uff09\u548c\u81e8\u5e8a\u7528\u9014\uff08\u4f8b\u5982\u5f15\u5c0e\u5f0f\u624b\u8853\uff09\u4e2d\u7684\u5ee3\u6cdb\u61c9\u7528\u53d7\u5230\u9577\u6642\u9593\u8cc7\u6599\u64f7\u53d6\u548c\u8a08\u7b97\u9700\u6c42\u9ad8\u7684\u8cc7\u6599\u8655\u7406\u7684\u9650\u5236\u3002\u5118\u7ba1\u6df1\u5ea6\u5b78\u7fd2\u6e1b\u5c11\u4e86\u5f8c\u8655\u7406\u6642\u9593\uff0c\u4f46\u6642\u9593\u89e3\u6790\u8cc7\u6599\u64f7\u53d6\u4ecd\u7136\u662f\u5373\u6642\u61c9\u7528\u7a0b\u5f0f\u7684\u74f6\u9838\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u7a2e\u4f7f\u7528\u57fa\u65bc FPGA \u7684\u786c\u9ad4\u52a0\u901f\u5668\u4f86\u5be6\u73fe\u5373\u6642 FLI \u7684\u65b9\u6cd5\u3002\u5177\u9ad4\u4f86\u8aaa\uff0c\u6211\u5011\u5728\u8207\u6642\u9593\u89e3\u6790\u76f8\u6a5f\u76f8\u5bb9\u7684 FPGA \u677f\u4e0a\u5be6\u4f5c\u4e86\u57fa\u65bc GRU \u7684\u5e8f\u5217\u5c0d\u5e8f\u5217 (Seq2Seq) \u6a21\u578b\u3002GRU \u6a21\u578b\u5e73\u8861\u4e86\u6e96\u78ba\u7684\u8655\u7406\u8207 FPGA \u7684\u8cc7\u6e90\u9650\u5236\uff0cFPGA \u7684 DSP \u55ae\u5143\u548c BRAM \u6709\u9650\u3002FPGA \u4e0a\u6709\u9650\u7684\u8a18\u61b6\u9ad4\u548c\u8a08\u7b97\u8cc7\u6e90\u9700\u8981\u6709\u6548\u5730\u6392\u7a0b\u4f5c\u696d\u548c\u8a18\u61b6\u9ad4\u914d\u7f6e\uff0c\u624d\u80fd\u90e8\u7f72\u6df1\u5ea6\u5b78\u7fd2\u6a21\u578b\u4ee5\u9032\u884c\u4f4e\u5ef6\u9072\u61c9\u7528\u7a0b\u5f0f\u3002\u6211\u5011\u900f\u904e\u4f7f\u7528 STOMP \u4f86\u89e3\u6c7a\u9019\u4e9b\u6311\u6230\uff0c\u9019\u662f\u4e00\u500b\u57fa\u65bc\u4f47\u5217\u7684\u96e2\u6563\u4e8b\u4ef6\u6a21\u64ec\u5668\uff0c\u53ef\u81ea\u52d5\u5316\u548c\u6700\u4f73\u5316\u786c\u9ad4\u4e0a\u7684\u4efb\u52d9\u6392\u7a0b\u548c\u8a18\u61b6\u9ad4\u7ba1\u7406\u3002\u900f\u904e\u6574\u5408\u57fa\u65bc GRU \u7684 Seq2Seq \u6a21\u578b\u53ca\u5176\u58d3\u7e2e\u7248\u672c Seq2SeqLite\uff08\u900f\u904e\u77e5\u8b58\u8403\u53d6\u7522\u751f\uff09\uff0c\u6211\u5011\u80fd\u5920\u5e73\u884c\u8655\u7406\u591a\u500b\u50cf\u7d20\uff0c\u8207\u9806\u5e8f\u8655\u7406\u76f8\u6bd4\uff0c\u53ef\u6e1b\u5c11\u5ef6\u9072\u3002\u6211\u5011\u63a2\u7d22\u4e86\u5404\u7a2e\u5e73\u884c\u5c64\u7d1a\uff0c\u4ee5\u5728\u6548\u80fd\u548c\u8cc7\u6e90\u5229\u7528\u7387\u4e4b\u9593\u53d6\u5f97\u6700\u4f73\u5e73\u8861\u3002\u6211\u5011\u7684\u7d50\u679c\u8868\u660e\uff0c\u8207 Seq2Seq \u6a21\u578b\u548c Seq2SeqLite \u6a21\u578b\u7684\u624b\u52d5\u6392\u7a0b\u76f8\u6bd4\uff0c\u6240\u63d0\u51fa\u7684\u6280\u8853\u5206\u5225\u9054\u5230\u4e86 17.7 \u500d\u548c 52.0 \u500d\u7684\u52a0\u901f\u3002", "author": "Ismail Erbas et.al.", "authors": "Ismail Erbas, Aporva Amarnath, Vikas Pandey, Karthik Swaminathan, Naigang Wang, Xavier Intes", "id": "2410.07364v1", "paper_url": "http://arxiv.org/abs/2410.07364v1", "repo": "null"}}