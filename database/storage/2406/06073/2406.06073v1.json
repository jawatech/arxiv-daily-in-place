{"2406.06073": {"publish_time": "2024-06-10", "title": "Efficient k-Nearest-Neighbor Machine Translation with Dynamic Retrieval", "paper_summary": "To achieve non-parametric NMT domain adaptation, $k$-Nearest-Neighbor Machine\nTranslation ($k$NN-MT) constructs an external datastore to store\ndomain-specific translation knowledge, which derives a $k$NN distribution to\ninterpolate the prediction distribution of the NMT model via a linear\ninterpolation coefficient $\\lambda$. Despite its success, $k$NN retrieval at\neach timestep leads to substantial time overhead. To address this issue,\ndominant studies resort to $k$NN-MT with adaptive retrieval ($k$NN-MT-AR),\nwhich dynamically estimates $\\lambda$ and skips $k$NN retrieval if $\\lambda$ is\nless than a fixed threshold. Unfortunately, $k$NN-MT-AR does not yield\nsatisfactory results. In this paper, we first conduct a preliminary study to\nreveal two key limitations of $k$NN-MT-AR: 1) the optimization gap leads to\ninaccurate estimation of $\\lambda$ for determining $k$NN retrieval skipping,\nand 2) using a fixed threshold fails to accommodate the dynamic demands for\n$k$NN retrieval at different timesteps. To mitigate these limitations, we then\npropose $k$NN-MT with dynamic retrieval ($k$NN-MT-DR) that significantly\nextends vanilla $k$NN-MT in two aspects. Firstly, we equip $k$NN-MT with a\nMLP-based classifier for determining whether to skip $k$NN retrieval at each\ntimestep. Particularly, we explore several carefully-designed scalar features\nto fully exert the potential of the classifier. Secondly, we propose a\ntimestep-aware threshold adjustment method to dynamically generate the\nthreshold, which further improves the efficiency of our model. Experimental\nresults on the widely-used datasets demonstrate the effectiveness and\ngenerality of our model.\\footnote{Our code is available at\n\\url{https://github.com/DeepLearnXMU/knn-mt-dr}.", "paper_summary_zh": "<paragraph>\u70ba\u4e86\u9054\u6210\u975e\u53c3\u6578\u5f0f NMT \u9818\u57df\u9069\u61c9\uff0c$k$ \u6700\u8fd1\u9130\u6a5f\u5668\u7ffb\u8b6f ($k$NN-MT) \u5efa\u69cb\u4e00\u500b\u5916\u90e8\u8cc7\u6599\u5132\u5b58\u5eab\uff0c\u7528\u4f86\u5132\u5b58\u9818\u57df\u7279\u5b9a\u7684\u7ffb\u8b6f\u77e5\u8b58\uff0c\u4e26\u7531\u6b64\u884d\u751f\u51fa\u4e00\u500b $k$NN \u5206\u5e03\uff0c\u900f\u904e\u7dda\u6027\u63d2\u503c\u4fc2\u6578 $\\lambda$ \u4f86\u5167\u63d2 NMT \u6a21\u578b\u7684\u9810\u6e2c\u5206\u5e03\u3002\u5118\u7ba1\u5b83\u6210\u529f\u4e86\uff0c\u4f46\u6bcf\u6b21\u6642\u9593\u6b65\u9577\u7684 $k$NN \u64f7\u53d6\u90fd\u6703\u5c0e\u81f4\u5927\u91cf\u7684\u6642\u9593\u958b\u92b7\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u4e3b\u8981\u7684\u7814\u7a76\u6240\u63a1\u7528\u5177\u6709\u9069\u61c9\u6027\u64f7\u53d6\u7684 $k$NN-MT ($k$NN-MT-AR)\uff0c\u5b83\u52d5\u614b\u4f30\u8a08 $\\lambda$\uff0c\u4e26\u5728 $\\lambda$ \u5c0f\u65bc\u56fa\u5b9a\u95be\u503c\u6642\u7565\u904e $k$NN \u64f7\u53d6\u3002\u4e0d\u5e78\u7684\u662f\uff0c$k$NN-MT-AR \u6c92\u6709\u7522\u751f\u4ee4\u4eba\u6eff\u610f\u7684\u7d50\u679c\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u9996\u5148\u9032\u884c\u521d\u6b65\u7814\u7a76\uff0c\u4ee5\u63ed\u793a $k$NN-MT-AR \u7684\u5169\u500b\u4e3b\u8981\u9650\u5236\uff1a1) \u6700\u4f73\u5316\u5dee\u8ddd\u5c0e\u81f4\u4e0d\u6e96\u78ba\u4f30\u8a08 $\\lambda$ \u4ee5\u6c7a\u5b9a\u7565\u904e $k$NN \u64f7\u53d6\uff0c\u4ee5\u53ca 2) \u4f7f\u7528\u56fa\u5b9a\u95be\u503c\u7121\u6cd5\u6eff\u8db3\u4e0d\u540c\u6642\u9593\u6b65\u9577\u5c0d $k$NN \u64f7\u53d6\u7684\u52d5\u614b\u9700\u6c42\u3002\u70ba\u4e86\u6e1b\u8f15\u9019\u4e9b\u9650\u5236\uff0c\u6211\u5011\u63a5\u8457\u63d0\u51fa\u5177\u6709\u52d5\u614b\u64f7\u53d6\u7684 $k$NN-MT ($k$NN-MT-DR)\uff0c\u5b83\u5728\u5169\u500b\u65b9\u9762\u986f\u8457\u5730\u5ef6\u4f38\u4e86\u9999\u8349 $k$NN-MT\u3002\u9996\u5148\uff0c\u6211\u5011\u70ba $k$NN-MT \u914d\u5099\u4e00\u500b\u57fa\u65bc MLP \u7684\u5206\u985e\u5668\uff0c\u7528\u65bc\u78ba\u5b9a\u662f\u5426\u5728\u6bcf\u500b\u6642\u9593\u6b65\u9577\u7565\u904e $k$NN \u64f7\u53d6\u3002\u7279\u5225\u662f\uff0c\u6211\u5011\u63a2\u8a0e\u4e86\u5e7e\u500b\u7cbe\u5fc3\u8a2d\u8a08\u7684\u7d14\u91cf\u7279\u5fb5\uff0c\u4ee5\u5145\u5206\u767c\u63ee\u5206\u985e\u5668\u7684\u6f5b\u529b\u3002\u5176\u6b21\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u500b\u5177\u6642\u9593\u6b65\u9577\u611f\u77e5\u7684\u95be\u503c\u8abf\u6574\u65b9\u6cd5\uff0c\u7528\u65bc\u52d5\u614b\u7522\u751f\u95be\u503c\uff0c\u9032\u4e00\u6b65\u63d0\u9ad8\u4e86\u6211\u5011\u6a21\u578b\u7684\u6548\u7387\u3002\u5728\u5ee3\u6cdb\u4f7f\u7528\u7684\u8cc7\u6599\u96c6\u4e0a\u7684\u5be6\u9a57\u7d50\u679c\u8b49\u660e\u4e86\u6211\u5011\u6a21\u578b\u7684\u6709\u6548\u6027\u548c\u666e\u904d\u6027\u3002\\footnote{\u6211\u5011\u7684\u7a0b\u5f0f\u78bc\u53ef\u5728 \\url{https://github.com/DeepLearnXMU/knn-mt-dr} \u53d6\u5f97\u3002}</paragraph>", "author": "Yan Gao et.al.", "authors": "Yan Gao, Zhiwei Cao, Zhongjian Miao, Baosong Yang, Shiyu Liu, Min Zhang, Jinsong Su", "id": "2406.06073v1", "paper_url": "http://arxiv.org/abs/2406.06073v1", "repo": "null"}}