{"2411.02120": {"publish_time": "2024-11-04", "title": "Bridge-IF: Learning Inverse Protein Folding with Markov Bridges", "paper_summary": "Inverse protein folding is a fundamental task in computational protein\ndesign, which aims to design protein sequences that fold into the desired\nbackbone structures. While the development of machine learning algorithms for\nthis task has seen significant success, the prevailing approaches, which\npredominantly employ a discriminative formulation, frequently encounter the\nerror accumulation issue and often fail to capture the extensive variety of\nplausible sequences. To fill these gaps, we propose Bridge-IF, a generative\ndiffusion bridge model for inverse folding, which is designed to learn the\nprobabilistic dependency between the distributions of backbone structures and\nprotein sequences. Specifically, we harness an expressive structure encoder to\npropose a discrete, informative prior derived from structures, and establish a\nMarkov bridge to connect this prior with native sequences. During the inference\nstage, Bridge-IF progressively refines the prior sequence, culminating in a\nmore plausible design. Moreover, we introduce a reparameterization perspective\non Markov bridge models, from which we derive a simplified loss function that\nfacilitates more effective training. We also modulate protein language models\n(PLMs) with structural conditions to precisely approximate the Markov bridge\nprocess, thereby significantly enhancing generation performance while\nmaintaining parameter-efficient training. Extensive experiments on\nwell-established benchmarks demonstrate that Bridge-IF predominantly surpasses\nexisting baselines in sequence recovery and excels in the design of plausible\nproteins with high foldability. The code is available at\nhttps://github.com/violet-sto/Bridge-IF.", "paper_summary_zh": "\u9006\u5411\u86cb\u767d\u8d28\u6298\u53e0\u662f\u8ba1\u7b97\u86cb\u767d\u8d28\u8bbe\u8ba1\u4e2d\u7684\u57fa\u672c\u4efb\u52a1\uff0c\u5176\u76ee\u7684\u662f\u8bbe\u8ba1\u6298\u53e0\u6210\u6240\u9700\u9aa8\u67b6\u7ed3\u6784\u7684\u86cb\u767d\u8d28\u5e8f\u5217\u3002\u867d\u7136\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u5f00\u53d1\u5728\u8fd9\u4e2a\u4efb\u52a1\u4e0a\u53d6\u5f97\u4e86\u663e\u8457\u7684\u6210\u529f\uff0c\u4f46\u5360\u4e3b\u5bfc\u5730\u4f4d\u7684\u65b9\u6cd5\uff08\u4e3b\u8981\u91c7\u7528\u5224\u522b\u5f0f\u516c\u5f0f\uff09\u7ecf\u5e38\u9047\u5230\u8bef\u5dee\u7d2f\u79ef\u95ee\u9898\uff0c\u5e76\u4e14\u7ecf\u5e38\u65e0\u6cd5\u6355\u6349\u5230\u5927\u91cf\u53ef\u884c\u7684\u5e8f\u5217\u3002\u4e3a\u4e86\u586b\u8865\u8fd9\u4e9b\u7a7a\u767d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86 Bridge-IF\uff0c\u4e00\u79cd\u7528\u4e8e\u9006\u5411\u6298\u53e0\u7684\u751f\u6210\u6269\u6563\u6865\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u65e8\u5728\u5b66\u4e60\u9aa8\u67b6\u7ed3\u6784\u548c\u86cb\u767d\u8d28\u5e8f\u5217\u5206\u5e03\u4e4b\u95f4\u7684\u6982\u7387\u4f9d\u8d56\u6027\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5229\u7528\u4e00\u4e2a\u8868\u8fbe\u7ed3\u6784\u7f16\u7801\u5668\u6765\u63d0\u51fa\u4e00\u4e2a\u79bb\u6563\u7684\u3001\u4ece\u7ed3\u6784\u4e2d\u6d3e\u751f\u7684\u4fe1\u606f\u5148\u9a8c\uff0c\u5e76\u5efa\u7acb\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u6865\u6881\u5c06\u6b64\u5148\u9a8c\u4e0e\u5929\u7136\u5e8f\u5217\u8fde\u63a5\u8d77\u6765\u3002\u5728\u63a8\u7406\u9636\u6bb5\uff0cBridge-IF \u9010\u6e10\u7ec6\u5316\u5148\u9a8c\u5e8f\u5217\uff0c\u6700\u7ec8\u5f62\u6210\u4e00\u4e2a\u66f4\u5408\u7406\u7684\u5e8f\u5217\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5728\u9a6c\u5c14\u53ef\u592b\u6865\u6a21\u578b\u4e2d\u5f15\u5165\u4e86\u4e00\u4e2a\u91cd\u65b0\u53c2\u6570\u5316\u7684\u89c6\u89d2\uff0c\u4ece\u4e2d\u6211\u4eec\u63a8\u5bfc\u51fa\u4e00\u4e2a\u7b80\u5316\u7684\u635f\u5931\u51fd\u6570\uff0c\u4ee5\u4fc3\u8fdb\u66f4\u6709\u6548\u7684\u8bad\u7ec3\u3002\u6211\u4eec\u8fd8\u7528\u7ed3\u6784\u6761\u4ef6\u5bf9\u86cb\u767d\u8d28\u8bed\u8a00\u6a21\u578b (PLM) \u8fdb\u884c\u8c03\u5236\uff0c\u4ee5\u7cbe\u786e\u903c\u8fd1\u9a6c\u5c14\u53ef\u592b\u6865\u8fc7\u7a0b\uff0c\u4ece\u800c\u5728\u4fdd\u6301\u53c2\u6570\u9ad8\u6548\u8bad\u7ec3\u7684\u540c\u65f6\uff0c\u663e\u8457\u63d0\u9ad8\u751f\u6210\u6027\u80fd\u3002\u5728\u5b8c\u5584\u7684\u57fa\u51c6\u4e0a\u8fdb\u884c\u7684\u5e7f\u6cdb\u5b9e\u9a8c\u8868\u660e\uff0cBridge-IF \u5728\u5e8f\u5217\u6062\u590d\u65b9\u9762\u660e\u663e\u4f18\u4e8e\u73b0\u6709\u7684\u57fa\u7ebf\uff0c\u5e76\u4e14\u5728\u8bbe\u8ba1\u5177\u6709\u9ad8\u53ef\u6298\u53e0\u6027\u7684\u5408\u7406\u86cb\u767d\u8d28\u65b9\u9762\u8868\u73b0\u51fa\u8272\u3002\u4ee3\u7801\u53ef\u5728 https://github.com/violet-sto/Bridge-IF \u4e2d\u83b7\u5f97\u3002", "author": "Yiheng Zhu et.al.", "authors": "Yiheng Zhu, Jialu Wu, Qiuyi Li, Jiahuan Yan, Mingze Yin, Wei Wu, Mingyang Li, Jieping Ye, Zheng Wang, Jian Wu", "id": "2411.02120v1", "paper_url": "http://arxiv.org/abs/2411.02120v1", "repo": "https://github.com/violet-sto/bridge-if"}}