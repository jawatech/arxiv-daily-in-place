{"2501.05673": {"publish_time": "2025-01-10", "title": "Network Diffuser for Placing-Scheduling Service Function Chains with Inverse Demonstration", "paper_summary": "Network services are increasingly managed by considering chained-up virtual\nnetwork functions and relevant traffic flows, known as the Service Function\nChains (SFCs). To deal with sequential arrivals of SFCs in an online fashion,\nwe must consider two closely-coupled problems - an SFC placement problem that\nmaps SFCs to servers/links in the network and an SFC scheduling problem that\ndetermines when each SFC is executed. Solving the whole SFC problem targeting\nthese two optimizations jointly is extremely challenging. In this paper, we\npropose a novel network diffuser using conditional generative modeling for this\nSFC placing-scheduling optimization. Recent advances in generative AI and\ndiffusion models have made it possible to generate high-quality images/videos\nand decision trajectories from language description. We formulate the SFC\noptimization as a problem of generating a state sequence for planning and\nperform graph diffusion on the state trajectories to enable extraction of SFC\ndecisions, with SFC optimization constraints and objectives as conditions. To\naddress the lack of demonstration data due to NP-hardness and exponential\nproblem space of the SFC optimization, we also propose a novel and somewhat\nmaverick approach -- Rather than solving instances of this difficult\noptimization, we start with randomly-generated solutions as input, and then\ndetermine appropriate SFC optimization problems that render these solutions\nfeasible. This inverse demonstration enables us to obtain sufficient expert\ndemonstrations, i.e., problem-solution pairs, through further optimization. In\nour numerical evaluations, the proposed network diffuser outperforms learning\nand heuristic baselines, by $\\sim$20\\% improvement in SFC reward and $\\sim$50\\%\nreduction in SFC waiting time and blocking rate.", "paper_summary_zh": "\u7db2\u8def\u670d\u52d9\u8d8a\u4f86\u8d8a\u900f\u904e\u8003\u616e\u4e32\u9023\u7684\u865b\u64ec\u7db2\u8def\u529f\u80fd\u548c\u76f8\u95dc\u6d41\u91cf\u9032\u884c\u7ba1\u7406\uff0c\u7a31\u70ba\u670d\u52d9\u529f\u80fd\u93c8 (SFC)\u3002\u70ba\u4e86\u4ee5\u7dda\u4e0a\u65b9\u5f0f\u8655\u7406 SFC \u7684\u9806\u5e8f\u5230\u9054\uff0c\u6211\u5011\u5fc5\u9808\u8003\u616e\u5169\u500b\u7dca\u5bc6\u7d50\u5408\u7684\u554f\u984c\uff1a\u5c07 SFC \u5c0d\u61c9\u5230\u7db2\u8def\u4e2d\u7684\u4f3a\u670d\u5668/\u9023\u7d50\u7684 SFC \u914d\u7f6e\u554f\u984c\uff0c\u4ee5\u53ca\u6c7a\u5b9a\u6bcf\u500b SFC \u4f55\u6642\u57f7\u884c\u7684 SFC \u6392\u7a0b\u554f\u984c\u3002\u540c\u6642\u91dd\u5c0d\u9019\u5169\u500b\u6700\u4f73\u5316\u4f86\u89e3\u6c7a\u6574\u500b SFC \u554f\u984c\u6975\u5177\u6311\u6230\u6027\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u63d0\u51fa\u4e00\u500b\u4f7f\u7528\u689d\u4ef6\u751f\u6210\u6a21\u578b\u7684\u5275\u65b0\u7db2\u8def\u64f4\u6563\u5668\uff0c\u7528\u65bc\u6b64 SFC \u914d\u7f6e\u6392\u7a0b\u6700\u4f73\u5316\u3002\u751f\u6210\u5f0f AI \u548c\u64f4\u6563\u6a21\u578b\u7684\u6700\u65b0\u9032\u5c55\u4f7f\u5f97\u5f9e\u8a9e\u8a00\u63cf\u8ff0\u4e2d\u7522\u751f\u9ad8\u54c1\u8cea\u7684\u5f71\u50cf/\u5f71\u7247\u548c\u6c7a\u7b56\u8ecc\u8de1\u6210\u70ba\u53ef\u80fd\u3002\u6211\u5011\u5c07 SFC \u6700\u4f73\u5316\u5236\u5b9a\u70ba\u7522\u751f\u4e00\u500b\u72c0\u614b\u5e8f\u5217\u7684\u554f\u984c\uff0c\u7528\u65bc\u898f\u5283\uff0c\u4e26\u5c0d\u72c0\u614b\u8ecc\u8de1\u57f7\u884c\u5716\u5f62\u64f4\u6563\uff0c\u4ee5\u63d0\u53d6 SFC \u6c7a\u7b56\uff0c\u4e26\u4ee5 SFC \u6700\u4f73\u5316\u7d04\u675f\u548c\u76ee\u6a19\u4f5c\u70ba\u689d\u4ef6\u3002\u70ba\u4e86\u89e3\u6c7a\u7531\u65bc NP \u96e3\u5ea6\u548c SFC \u6700\u4f73\u5316\u7684\u6307\u6578\u554f\u984c\u7a7a\u9593\u800c\u5c0e\u81f4\u7684\u793a\u7bc4\u8cc7\u6599\u4e0d\u8db3\uff0c\u6211\u5011\u4e5f\u63d0\u51fa\u4e00\u500b\u5275\u65b0\u4e14\u6709\u9ede\u7279\u7acb\u7368\u884c\u7684\u505a\u6cd5\uff1a\u4e0d\u662f\u89e3\u6c7a\u9019\u500b\u56f0\u96e3\u6700\u4f73\u5316\u7684\u5be6\u4f8b\uff0c\u800c\u662f\u5f9e\u96a8\u6a5f\u7522\u751f\u7684\u89e3\u4f5c\u70ba\u8f38\u5165\u958b\u59cb\uff0c\u7136\u5f8c\u6c7a\u5b9a\u9069\u7576\u7684 SFC \u6700\u4f73\u5316\u554f\u984c\uff0c\u8b93\u9019\u4e9b\u89e3\u53ef\u884c\u3002\u9019\u500b\u9006\u5411\u793a\u7bc4\u8b93\u6211\u5011\u80fd\u5920\u900f\u904e\u9032\u4e00\u6b65\u6700\u4f73\u5316\uff0c\u7372\u5f97\u8db3\u5920\u7684\u5c08\u5bb6\u793a\u7bc4\uff0c\u4e5f\u5c31\u662f\u554f\u984c\u89e3\u6c7a\u914d\u5c0d\u3002\u5728\u6211\u5011\u7684\u6578\u503c\u8a55\u4f30\u4e2d\uff0c\u6240\u63d0\u51fa\u7684\u7db2\u8def\u64f4\u6563\u5668\u512a\u65bc\u5b78\u7fd2\u548c\u555f\u767c\u5f0f\u57fa\u6e96\uff0cSFC \u734e\u52f5\u63d0\u5347\u4e86\u7d04 20%\uff0cSFC \u7b49\u5f85\u6642\u9593\u548c\u5c01\u9396\u7387\u964d\u4f4e\u4e86\u7d04 50%\u3002", "author": "Zuyuan Zhang et.al.", "authors": "Zuyuan Zhang, Vaneet Aggarwal, Tian Lan", "id": "2501.05673v1", "paper_url": "http://arxiv.org/abs/2501.05673v1", "repo": "null"}}