{"2412.02410": {"publish_time": "2024-12-03", "title": "A Multi-Agent Framework for Extensible Structured Text Generation in PLCs", "paper_summary": "Programmable Logic Controllers (PLCs) are microcomputers essential for\nautomating factory operations. Structured Text (ST), a high-level language\nadhering to the IEC 61131-3 standard, is pivotal for PLCs due to its ability to\nexpress logic succinctly and to seamlessly integrate with other languages\nwithin the same standard. However, vendors develop their own customized\nversions of ST, and the lack of comprehensive and standardized documentation\nfor the full semantics of ST has contributed to inconsistencies in how the\nlanguage is implemented. Consequently, the steep learning curve associated with\nST, combined with ever-evolving industrial requirements, presents significant\nchallenges for developers. In response to these issues, we present AutoPLC, an\nLLM-based approach designed to automate the generation of vendor-specific ST\ncode. To facilitate effective code generation, we first built a comprehensive\nknowledge base, including Rq2ST Case Library (requirements and corresponding\nimplementations) and Instruction libraries. Then we developed a retrieval\nmodule to incorporate the domain-specific knowledge by identifying pertinent\ncases and instructions, guiding the LLM to generate code that meets the\nrequirements. In order to verify and improve the quality of the generated code,\nwe designed an adaptable code checker. If errors are detected, we initiate an\niterative self-improvement process to instruct the LLM to revise the generated\ncode. We evaluate AutoPLC's performance against seven state-of-the-art\nbaselines using three benchmarks, one for open-source basic ST and two for\ncommercial Structured Control Language (SCL) from Siemens. The results show\nthat our approach consistently achieves superior performance across all\nbenchmarks. Ablation study emphasizes the significance of our modules. Further\nmanual analysis confirm the practical utility of the ST code generated by\nAutoPLC.", "paper_summary_zh": "\u53ef\u7a0b\u5f0f\u908f\u8f2f\u63a7\u5236\u5668 (PLC) \u662f\u5de5\u5ee0\u81ea\u52d5\u5316\u4f5c\u696d\u4e2d\u4e0d\u53ef\u6216\u7f3a\u7684\u5fae\u96fb\u8166\u3002\u7d50\u69cb\u5316\u6587\u5b57 (ST) \u662f\u4e00\u7a2e\u9075\u5faa IEC 61131-3 \u6a19\u6e96\u7684\u9ad8\u968e\u8a9e\u8a00\uff0c\u7531\u65bc\u5176\u80fd\u5920\u7c21\u6f54\u5730\u8868\u9054\u908f\u8f2f\u4e26\u8207\u540c\u4e00\u500b\u6a19\u6e96\u4e2d\u7684\u5176\u4ed6\u8a9e\u8a00\u7121\u7e2b\u6574\u5408\uff0c\u56e0\u6b64\u5c0d\u65bc PLC \u81f3\u95dc\u91cd\u8981\u3002\u7136\u800c\uff0c\u4f9b\u61c9\u5546\u958b\u767c\u4e86\u81ea\u5df1\u7684\u81ea\u8a02 ST \u7248\u672c\uff0c\u800c\u4e14\u7f3a\u4e4f\u5168\u9762\u4e14\u6a19\u6e96\u5316\u7684 ST \u8a9e\u610f\u6587\u4ef6\uff0c\u5c0e\u81f4\u8a9e\u8a00\u5be6\u4f5c\u65b9\u5f0f\u4e0d\u4e00\u81f4\u3002\u56e0\u6b64\uff0c\u8207 ST \u76f8\u95dc\u7684\u9661\u5ced\u5b78\u7fd2\u66f2\u7dda\uff0c\u52a0\u4e0a\u4e0d\u65b7\u8b8a\u5316\u7684\u7522\u696d\u9700\u6c42\uff0c\u5c0d\u958b\u767c\u4eba\u54e1\u4f86\u8aaa\u69cb\u6210\u91cd\u5927\u6311\u6230\u3002\u70ba\u4e86\u56de\u61c9\u9019\u4e9b\u554f\u984c\uff0c\u6211\u5011\u63d0\u51fa\u4e86 AutoPLC\uff0c\u9019\u662f\u4e00\u7a2e\u57fa\u65bc LLM \u7684\u65b9\u6cd5\uff0c\u65e8\u5728\u81ea\u52d5\u7522\u751f\u7279\u5b9a\u4f9b\u61c9\u5546\u7684 ST \u7a0b\u5f0f\u78bc\u3002\u70ba\u4e86\u4fc3\u9032\u6709\u6548\u7684\u7a0b\u5f0f\u78bc\u7522\u751f\uff0c\u6211\u5011\u9996\u5148\u5efa\u7acb\u4e86\u4e00\u500b\u5168\u9762\u7684\u77e5\u8b58\u5eab\uff0c\u5305\u62ec Rq2ST \u6848\u4f8b\u7a0b\u5f0f\u5eab\uff08\u9700\u6c42\u548c\u5c0d\u61c9\u7684\u5be6\u4f5c\uff09\u548c\u6307\u4ee4\u7a0b\u5f0f\u5eab\u3002\u7136\u5f8c\uff0c\u6211\u5011\u958b\u767c\u4e86\u4e00\u500b\u64f7\u53d6\u6a21\u7d44\uff0c\u900f\u904e\u8b58\u5225\u76f8\u95dc\u7684\u6848\u4f8b\u548c\u6307\u4ee4\u4f86\u7d0d\u5165\u7279\u5b9a\u9818\u57df\u7684\u77e5\u8b58\uff0c\u5f15\u5c0e LLM \u7522\u751f\u7b26\u5408\u9700\u6c42\u7684\u7a0b\u5f0f\u78bc\u3002\u70ba\u4e86\u9a57\u8b49\u548c\u63d0\u5347\u6240\u7522\u751f\u7a0b\u5f0f\u78bc\u7684\u54c1\u8cea\uff0c\u6211\u5011\u8a2d\u8a08\u4e86\u4e00\u500b\u9069\u61c9\u6027\u7a0b\u5f0f\u78bc\u6aa2\u67e5\u5668\u3002\u5982\u679c\u5075\u6e2c\u5230\u932f\u8aa4\uff0c\u6211\u5011\u6703\u555f\u52d5\u4e00\u500b\u53cd\u8986\u7684\u81ea\u9ad4\u6539\u5584\u7a0b\u5e8f\uff0c\u6307\u793a LLM \u4fee\u6539\u6240\u7522\u751f\u7684\u7a0b\u5f0f\u78bc\u3002\u6211\u5011\u4f7f\u7528\u4e09\u500b\u57fa\u6e96\u5c0d AutoPLC \u7684\u6548\u80fd\u9032\u884c\u8a55\u4f30\uff0c\u5176\u4e2d\u4e00\u500b\u57fa\u6e96\u662f\u958b\u653e\u539f\u59cb\u78bc\u7684\u57fa\u672c ST\uff0c\u53e6\u5916\u5169\u500b\u57fa\u6e96\u662f\u4f86\u81ea\u897f\u9580\u5b50\u7684\u5546\u696d\u7d50\u69cb\u5316\u63a7\u5236\u8a9e\u8a00 (SCL)\u3002\u7d50\u679c\u986f\u793a\uff0c\u6211\u5011\u7684\u505a\u6cd5\u5728\u6240\u6709\u57fa\u6e96\u4e2d\u6301\u7e8c\u9054\u6210\u5353\u8d8a\u7684\u6548\u80fd\u3002\u6d88\u878d\u7814\u7a76\u5f37\u8abf\u4e86\u6211\u5011\u6a21\u7d44\u7684\u91cd\u8981\u6027\u3002\u9032\u4e00\u6b65\u7684\u624b\u52d5\u5206\u6790\u78ba\u8a8d\u4e86 AutoPLC \u6240\u7522\u751f\u7684 ST \u7a0b\u5f0f\u78bc\u7684\u5be6\u7528\u6027\u3002", "author": "Donghao Yang et.al.", "authors": "Donghao Yang, Aolang Wu, Tianyi Zhang, Li Zhang, Fang Liu, Xiaoli Lian, Yuming Ren, Jiaji Tian", "id": "2412.02410v1", "paper_url": "http://arxiv.org/abs/2412.02410v1", "repo": "null"}}