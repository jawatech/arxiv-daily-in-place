{"2406.07961": {"publish_time": "2024-06-12", "title": "Accurate Explanation Model for Image Classifiers using Class Association Embedding", "paper_summary": "Image classification is a primary task in data analysis where explainable\nmodels are crucially demanded in various applications. Although amounts of\nmethods have been proposed to obtain explainable knowledge from the black-box\nclassifiers, these approaches lack the efficiency of extracting global\nknowledge regarding the classification task, thus is vulnerable to local traps\nand often leads to poor accuracy. In this study, we propose a generative\nexplanation model that combines the advantages of global and local knowledge\nfor explaining image classifiers. We develop a representation learning method\ncalled class association embedding (CAE), which encodes each sample into a pair\nof separated class-associated and individual codes. Recombining the individual\ncode of a given sample with altered class-associated code leads to a synthetic\nreal-looking sample with preserved individual characters but modified\nclass-associated features and possibly flipped class assignments. A\nbuilding-block coherency feature extraction algorithm is proposed that\nefficiently separates class-associated features from individual ones. The\nextracted feature space forms a low-dimensional manifold that visualizes the\nclassification decision patterns. Explanation on each individual sample can be\nthen achieved in a counter-factual generation manner which continuously\nmodifies the sample in one direction, by shifting its class-associated code\nalong a guided path, until its classification outcome is changed. We compare\nour method with state-of-the-art ones on explaining image classification tasks\nin the form of saliency maps, demonstrating that our method achieves higher\naccuracies. The code is available at https://github.com/xrt11/XAI-CODE.", "paper_summary_zh": "\u5f71\u50cf\u5206\u985e\u662f\u8cc7\u6599\u5206\u6790\u4e2d\u4e00\u9805\u4e3b\u8981\u4efb\u52d9\uff0c\u5176\u4e2d\u53ef\u89e3\u91cb\u6a21\u578b\u5728\u5404\u7a2e\u61c9\u7528\u4e2d\u81f3\u95dc\u91cd\u8981\u3002\u5118\u7ba1\u5df2\u63d0\u51fa\u5927\u91cf\u65b9\u6cd5\u5f9e\u9ed1\u76d2\u5206\u985e\u5668\u4e2d\u53d6\u5f97\u53ef\u89e3\u91cb\u77e5\u8b58\uff0c\u4f46\u9019\u4e9b\u65b9\u6cd5\u7f3a\u4e4f\u63d0\u53d6\u5206\u985e\u4efb\u52d9\u4e2d\u6574\u9ad4\u77e5\u8b58\u7684\u6548\u7387\uff0c\u56e0\u6b64\u5bb9\u6613\u9677\u5165\u5c40\u90e8\u9677\u9631\uff0c\u4e14\u7d93\u5e38\u5c0e\u81f4\u7cbe\u78ba\u5ea6\u4e0d\u4f73\u3002\u5728\u672c\u7814\u7a76\u4e2d\uff0c\u6211\u5011\u63d0\u51fa\u4e00\u500b\u751f\u6210\u5f0f\u89e3\u91cb\u6a21\u578b\uff0c\u7d50\u5408\u6574\u9ad4\u548c\u5c40\u90e8\u77e5\u8b58\u7684\u512a\u9ede\u4f86\u89e3\u91cb\u5f71\u50cf\u5206\u985e\u5668\u3002\u6211\u5011\u958b\u767c\u4e00\u7a2e\u7a31\u70ba\u985e\u5225\u95dc\u806f\u5d4c\u5165 (CAE) \u7684\u8868\u793a\u5b78\u7fd2\u65b9\u6cd5\uff0c\u5c07\u6bcf\u500b\u7bc4\u4f8b\u7de8\u78bc\u6210\u4e00\u5c0d\u5206\u96e2\u7684\u985e\u5225\u95dc\u806f\u548c\u500b\u5225\u4ee3\u78bc\u3002\u5c07\u7279\u5b9a\u7bc4\u4f8b\u7684\u500b\u5225\u4ee3\u78bc\u8207\u8b8a\u66f4\u7684\u985e\u5225\u95dc\u806f\u4ee3\u78bc\u91cd\u65b0\u7d44\u5408\uff0c\u6703\u7522\u751f\u4e00\u500b\u4fdd\u7559\u500b\u5225\u7279\u5fb5\u4f46\u4fee\u6539\u985e\u5225\u95dc\u806f\u7279\u5fb5\uff0c\u4e14\u53ef\u80fd\u7ffb\u8f49\u985e\u5225\u6307\u6d3e\u7684\u5408\u6210\u771f\u5be6\u7bc4\u4f8b\u3002\u6211\u5011\u63d0\u51fa\u4e00\u500b\u5efa\u69cb\u5340\u584a\u76f8\u5e72\u6027\u7279\u5fb5\u63d0\u53d6\u6f14\u7b97\u6cd5\uff0c\u53ef\u6709\u6548\u5c07\u985e\u5225\u95dc\u806f\u7279\u5fb5\u8207\u500b\u5225\u7279\u5fb5\u5206\u958b\u3002\u63d0\u53d6\u7684\u7279\u5fb5\u7a7a\u9593\u5f62\u6210\u4e00\u500b\u4f4e\u7dad\u6d41\u5f62\uff0c\u53ef\u8996\u5316\u5206\u985e\u6c7a\u7b56\u6a21\u5f0f\u3002\u7136\u5f8c\uff0c\u6bcf\u500b\u500b\u5225\u7bc4\u4f8b\u7684\u89e3\u91cb\u53ef\u4ee5\u5728\u53cd\u4e8b\u5be6\u751f\u6210\u65b9\u5f0f\u4e2d\u9054\u6210\uff0c\u8a72\u65b9\u5f0f\u900f\u904e\u6cbf\u8457\u5f15\u5c0e\u8def\u5f91\u79fb\u52d5\u5176\u985e\u5225\u95dc\u806f\u4ee3\u78bc\uff0c\u6301\u7e8c\u5730\u671d\u4e00\u500b\u65b9\u5411\u4fee\u6539\u7bc4\u4f8b\uff0c\u76f4\u5230\u5176\u5206\u985e\u7d50\u679c\u6539\u8b8a\u3002\u6211\u5011\u4ee5\u986f\u8457\u5ea6\u5716\u7684\u5f62\u5f0f\u5c07\u6211\u5011\u7684\u6a21\u578b\u8207\u73fe\u6709\u6280\u8853\u9032\u884c\u6bd4\u8f03\uff0c\u4ee5\u89e3\u91cb\u5f71\u50cf\u5206\u985e\u4efb\u52d9\uff0c\u8b49\u660e\u6211\u5011\u7684\u6a21\u578b\u53ef\u9054\u6210\u66f4\u9ad8\u7684\u7cbe\u78ba\u5ea6\u3002\u7a0b\u5f0f\u78bc\u53ef\u5728 https://github.com/xrt11/XAI-CODE \u53d6\u5f97\u3002", "author": "Ruitao Xie et.al.", "authors": "Ruitao Xie, Jingbang Chen, Limai Jiang, Rui Xiao, Yi Pan, Yunpeng Cai", "id": "2406.07961v1", "paper_url": "http://arxiv.org/abs/2406.07961v1", "repo": "https://github.com/xrt11/xai-code"}}