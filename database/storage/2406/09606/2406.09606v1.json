{"2406.09606": {"publish_time": "2024-06-13", "title": "Cross-Modality Program Representation Learning for Electronic Design Automation with High-Level Synthesis", "paper_summary": "In recent years, domain-specific accelerators (DSAs) have gained popularity\nfor applications such as deep learning and autonomous driving. To facilitate\nDSA designs, programmers use high-level synthesis (HLS) to compile a high-level\ndescription written in C/C++ into a design with low-level hardware description\nlanguages that eventually synthesize DSAs on circuits. However, creating a\nhigh-quality HLS design still demands significant domain knowledge,\nparticularly in microarchitecture decisions expressed as \\textit{pragmas}.\nThus, it is desirable to automate such decisions with the help of machine\nlearning for predicting the quality of HLS designs, requiring a deeper\nunderstanding of the program that consists of original code and pragmas.\nNaturally, these programs can be considered as sequence data. In addition,\nthese programs can be compiled and converted into a control data flow graph\n(CDFG). But existing works either fail to leverage both modalities or combine\nthe two in shallow or coarse ways. We propose ProgSG, a model that allows\ninteraction between the source code sequence modality and the graph modality in\na deep and fine-grained way. To alleviate the scarcity of labeled designs, a\npre-training method is proposed based on a suite of compiler's data flow\nanalysis tasks. Experimental results show that ProgSG reduces the RMSE of\ndesign performance predictions by up to $22\\%$, and identifies designs with an\naverage of $1.10\\times$ and $1.26\\times$ (up to $8.17\\times$ and $13.31\\times$)\nperformance improvement in design space exploration (DSE) task compared to HARP\nand AutoDSE, respectively.", "paper_summary_zh": "<paragraph>\u8fd1\u5e74\u4f86\uff0c\u7279\u5b9a\u9818\u57df\u52a0\u901f\u5668\uff08DSA\uff09\u5728\u6df1\u5ea6\u5b78\u7fd2\u548c\u81ea\u52d5\u99d5\u99db\u7b49\u61c9\u7528\u4e2d\u8d8a\u4f86\u8d8a\u53d7\u6b61\u8fce\u3002\u70ba\u4e86\u4fc3\u9032 DSA \u8a2d\u8a08\uff0c\u7a0b\u5f0f\u8a2d\u8a08\u4eba\u54e1\u4f7f\u7528\u9ad8\u968e\u7d9c\u5408\uff08HLS\uff09\u5c07\u4ee5 C/C++ \u7de8\u5beb\u7684\u9ad8\u968e\u63cf\u8ff0\u7de8\u8b6f\u6210\u4f4e\u968e\u786c\u9ad4\u63cf\u8ff0\u8a9e\u8a00\u7684\u8a2d\u8a08\uff0c\u6700\u7d42\u5728\u96fb\u8def\u4e2d\u5408\u6210 DSA\u3002\u7136\u800c\uff0c\u8981\u5efa\u7acb\u9ad8\u54c1\u8cea\u7684 HLS \u8a2d\u8a08\uff0c\u4ecd\u7136\u9700\u8981\u5927\u91cf\u7684\u9818\u57df\u77e5\u8b58\uff0c\u7279\u5225\u662f\u5728\u8868\u793a\u70ba\u300c\u6307\u4ee4\u300d\u7684\u5fae\u67b6\u69cb\u6c7a\u7b56\u4e2d\u3002\u56e0\u6b64\uff0c\u5f88\u5e0c\u671b\u85c9\u52a9\u6a5f\u5668\u5b78\u7fd2\u81ea\u52d5\u5316\u9019\u4e9b\u6c7a\u7b56\uff0c\u4ee5\u9810\u6e2c HLS \u8a2d\u8a08\u7684\u54c1\u8cea\uff0c\u9019\u9700\u8981\u66f4\u6df1\u5165\u5730\u4e86\u89e3\u5305\u542b\u539f\u59cb\u7a0b\u5f0f\u78bc\u548c\u6307\u4ee4\u7684\u7a0b\u5f0f\u3002\u81ea\u7136\u5730\uff0c\u9019\u4e9b\u7a0b\u5f0f\u53ef\u4ee5\u8996\u70ba\u5e8f\u5217\u8cc7\u6599\u3002\u6b64\u5916\uff0c\u9019\u4e9b\u7a0b\u5f0f\u53ef\u4ee5\u7de8\u8b6f\u4e26\u8f49\u63db\u6210\u63a7\u5236\u8cc7\u6599\u6d41\u7a0b\u5716\uff08CDFG\uff09\u3002\u4f46\u73fe\u6709\u7684\u4f5c\u54c1\u4e0d\u662f\u7121\u6cd5\u540c\u6642\u5229\u7528\u9019\u5169\u7a2e\u65b9\u5f0f\uff0c\u5c31\u662f\u4ee5\u6dfa\u5c64\u6216\u7c97\u7565\u7684\u65b9\u5f0f\u5c07\u5b83\u5011\u7d50\u5408\u5728\u4e00\u8d77\u3002\u6211\u5011\u63d0\u51fa ProgSG\uff0c\u9019\u662f\u4e00\u500b\u5141\u8a31\u4ee5\u6df1\u5165\u4e14\u7d30\u7dfb\u7684\u65b9\u5f0f\u5728\u539f\u59cb\u78bc\u5e8f\u5217\u65b9\u5f0f\u548c\u5716\u5f62\u65b9\u5f0f\u4e4b\u9593\u9032\u884c\u4e92\u52d5\u7684\u6a21\u578b\u3002\u70ba\u4e86\u7de9\u89e3\u6a19\u8a18\u8a2d\u8a08\u7684\u7a00\u7f3a\u6027\uff0c\u63d0\u51fa\u4e86\u4e00\u7a2e\u57fa\u65bc\u7de8\u8b6f\u5668\u8cc7\u6599\u6d41\u5206\u6790\u4efb\u52d9\u5957\u4ef6\u7684\u9810\u8a13\u7df4\u65b9\u6cd5\u3002\u5be6\u9a57\u7d50\u679c\u986f\u793a\uff0cProgSG \u5c07\u8a2d\u8a08\u6548\u80fd\u9810\u6e2c\u7684 RMSE \u964d\u4f4e\u4e86\u591a\u9054 22%\uff0c\u4e26\u8b58\u5225\u51fa\u8a2d\u8a08\u5728\u8a2d\u8a08\u7a7a\u9593\u63a2\u7d22\uff08DSE\uff09\u4efb\u52d9\u4e2d\u5e73\u5747\u6548\u80fd\u63d0\u5347 1.10 \u500d\u548c 1.26 \u500d\uff08\u6700\u9ad8 8.17 \u500d\u548c 13.31 \u500d\uff09\uff0c\u5206\u5225\u8207 HARP \u548c AutoDSE \u76f8\u6bd4\u3002</paragraph>", "author": "Zongyue Qin et.al.", "authors": "Zongyue Qin, Yunsheng Bai, Atefeh Sograbizadeh, Zijian Ding, Ziniu Hu, Yizhou Sun, Jason Cong", "id": "2406.09606v1", "paper_url": "http://arxiv.org/abs/2406.09606v1", "repo": "null"}}