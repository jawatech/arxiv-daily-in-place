{"2502.13681": {"publish_time": "2025-02-19", "title": "An LLM-based Agent for Reliable Docker Environment Configuration", "paper_summary": "Environment configuration is a critical yet time-consuming step in software\ndevelopment, especially when dealing with unfamiliar code repositories. While\nLarge Language Models (LLMs) demonstrate the potential to accomplish software\nengineering tasks, existing methods for environment configuration often rely on\nmanual efforts or fragile scripts, leading to inefficiencies and unreliable\noutcomes. We introduce Repo2Run, the first LLM-based agent designed to fully\nautomate environment configuration and generate executable Dockerfiles for\narbitrary Python repositories. We address two major challenges: (1) enabling\nthe LLM agent to configure environments within isolated Docker containers, and\n(2) ensuring the successful configuration process is recorded and accurately\ntransferred to a Dockerfile without error. To achieve this, we propose atomic\nconfiguration synthesis, featuring a dual-environment architecture (internal\nand external environment) with a rollback mechanism to prevent environment\n\"pollution\" from failed commands, guaranteeing atomic execution (execute fully\nor not at all) and a Dockerfile generator to transfer successful configuration\nsteps into runnable Dockerfiles. We evaluate Repo2Run~on our proposed benchmark\nof 420 recent Python repositories with unit tests, where it achieves an 86.0%\nsuccess rate, outperforming the best baseline by 63.9%.", "paper_summary_zh": "\u74b0\u5883\u8a2d\u5b9a\u662f\u8edf\u9ad4\u958b\u767c\u4e2d\u4e00\u500b\u95dc\u9375\u4f46\u8017\u6642\u7684\u6b65\u9a5f\uff0c\u7279\u5225\u662f\u5728\u8655\u7406\u4e0d\u719f\u6089\u7684\u7a0b\u5f0f\u78bc\u5132\u5b58\u5eab\u6642\u3002\u96d6\u7136\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u5c55\u793a\u4e86\u5b8c\u6210\u8edf\u9ad4\u5de5\u7a0b\u4efb\u52d9\u7684\u6f5b\u529b\uff0c\u73fe\u6709\u7684\u74b0\u5883\u8a2d\u5b9a\u65b9\u6cd5\u901a\u5e38\u4f9d\u8cf4\u624b\u52d5\u5de5\u4f5c\u6216\u8106\u5f31\u7684\u8173\u672c\uff0c\u5c0e\u81f4\u6548\u7387\u4f4e\u4e0b\u548c\u7d50\u679c\u4e0d\u53ef\u9760\u3002\u6211\u5011\u4ecb\u7d39\u4e86 Repo2Run\uff0c\u9019\u662f\u7b2c\u4e00\u500b\u57fa\u65bc LLM \u7684\u4ee3\u7406\uff0c\u65e8\u5728\u5b8c\u5168\u81ea\u52d5\u5316\u74b0\u5883\u8a2d\u5b9a\uff0c\u4e26\u70ba\u4efb\u610f Python \u5132\u5b58\u5eab\u7522\u751f\u53ef\u57f7\u884c\u7684 Dockerfile\u3002\u6211\u5011\u89e3\u6c7a\u4e86\u5169\u500b\u4e3b\u8981\u6311\u6230\uff1a(1) \u4f7f LLM \u4ee3\u7406\u80fd\u5920\u5728\u9694\u96e2\u7684 Docker \u5bb9\u5668\u4e2d\u8a2d\u5b9a\u74b0\u5883\uff0c\u4ee5\u53ca (2) \u78ba\u4fdd\u6210\u529f\u7684\u8a2d\u5b9a\u904e\u7a0b\u88ab\u8a18\u9304\u4e26\u6e96\u78ba\u50b3\u8f38\u5230 Dockerfile \u4e2d\u800c\u4e0d\u6703\u51fa\u932f\u3002\u70ba\u6b64\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u539f\u5b50\u914d\u7f6e\u5408\u6210\uff0c\u5b83\u5177\u6709\u96d9\u74b0\u5883\u67b6\u69cb\uff08\u5167\u90e8\u548c\u5916\u90e8\u74b0\u5883\uff09\u548c\u56de\u6efe\u6a5f\u5236\uff0c\u4ee5\u9632\u6b62\u74b0\u5883\u88ab\u5931\u6557\u7684\u547d\u4ee4\u300c\u6c61\u67d3\u300d\uff0c\u4fdd\u8b49\u539f\u5b50\u57f7\u884c\uff08\u5b8c\u5168\u57f7\u884c\u6216\u5b8c\u5168\u4e0d\u57f7\u884c\uff09\u548c\u4e00\u500b Dockerfile \u7522\u751f\u5668\uff0c\u5c07\u6210\u529f\u7684\u914d\u7f6e\u6b65\u9a5f\u50b3\u8f38\u5230\u53ef\u57f7\u884c\u7684 Dockerfile \u4e2d\u3002\u6211\u5011\u5728\u6211\u5011\u63d0\u51fa\u7684\u57fa\u6e96\u6e2c\u8a66\u4e2d\u8a55\u4f30\u4e86 Repo2Run\uff0c\u5176\u4e2d\u5305\u542b 420 \u500b\u6700\u8fd1\u7684 Python \u5132\u5b58\u5eab\u548c\u55ae\u5143\u6e2c\u8a66\uff0c\u5b83\u9054\u5230\u4e86 86.0% \u7684\u6210\u529f\u7387\uff0c\u6bd4\u6700\u4f73\u57fa\u6e96\u9ad8\u51fa 63.9%\u3002", "author": "Ruida Hu et.al.", "authors": "Ruida Hu, Chao Peng, Xinchen Wang, Cuiyun Gao", "id": "2502.13681v1", "paper_url": "http://arxiv.org/abs/2502.13681v1", "repo": "null"}}