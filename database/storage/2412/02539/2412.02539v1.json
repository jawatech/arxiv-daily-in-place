{"2412.02539": {"publish_time": "2024-12-03", "title": "Graph-Powered Defense: Controller Area Network Intrusion Detection for Unmanned Aerial Vehicles", "paper_summary": "The network of services, including delivery, farming, and environmental\nmonitoring, has experienced exponential expansion in the past decade with\nUnmanned Aerial Vehicles (UAVs). Yet, UAVs are not robust enough against\ncyberattacks, especially on the Controller Area Network (CAN) bus. The CAN bus\nis a general-purpose vehicle-bus standard to enable microcontrollers and\nin-vehicle computers to interact, primarily connecting different Electronic\nControl Units (ECUs). In this study, we focus on solving some of the most\ncritical security weaknesses in UAVs by developing a novel graph-based\nintrusion detection system (IDS) leveraging the Uncomplicated Application-level\nVehicular Communication and Networking (UAVCAN) protocol. First, we decode CAN\nmessages based on UAVCAN protocol specification; second, we present a\ncomprehensive method of transforming tabular UAVCAN messages into graph\nstructures. Lastly, we apply various graph-based machine learning models for\ndetecting cyber-attacks on the CAN bus, including graph convolutional neural\nnetworks (GCNNs), graph attention networks (GATs), Graph Sample and Aggregate\nNetworks (GraphSAGE), and graph structure-based transformers. Our findings show\nthat inductive models such as GATs, GraphSAGE, and graph-based transformers can\nachieve competitive and even better accuracy than transductive models like\nGCNNs in detecting various types of intrusions, with minimum information on\nprotocol specification, thus providing a generic robust solution for CAN bus\nsecurity for the UAVs. We also compared our results with baseline single-layer\nLong Short-Term Memory (LSTM) and found that all our graph-based models perform\nbetter without using any decoded features based on the UAVCAN protocol,\nhighlighting higher detection performance with protocol-independent capability.", "paper_summary_zh": "<paragraph>\u5305\u62ec\u905e\u9001\u3001\u8fb2\u696d\u548c\u74b0\u5883\u76e3\u63a7\u5728\u5167\u7684\u670d\u52d9\u7db2\u8def\u5728\u904e\u53bb\u5341\u5e74\u4e2d\uff0c\u96a8\u8457\u7121\u4eba\u6a5f (UAV) \u7684\u4f7f\u7528\u800c\u7d93\u6b77\u4e86\u6307\u6578\u7d1a\u7684\u64f4\u5c55\u3002\u7136\u800c\uff0c\u7121\u4eba\u6a5f\u5728\u5c0d\u6297\u7db2\u8def\u653b\u64ca\u65b9\u9762\u4e0d\u5920\u5f37\u5927\uff0c\u7279\u5225\u662f\u5728\u63a7\u5236\u5668\u5340\u57df\u7db2\u8def (CAN) \u7e3d\u7dda\u4e0a\u3002CAN \u7e3d\u7dda\u662f\u4e00\u500b\u901a\u7528\u8eca\u8f1b\u7e3d\u7dda\u6a19\u6e96\uff0c\u7528\u65bc\u4f7f\u5fae\u63a7\u5236\u5668\u548c\u8eca\u8f09\u96fb\u8166\u80fd\u5920\u4e92\u52d5\uff0c\u4e3b\u8981\u9023\u63a5\u4e0d\u540c\u7684\u96fb\u5b50\u63a7\u5236\u55ae\u5143 (ECU)\u3002\u5728\u672c\u7814\u7a76\u4e2d\uff0c\u6211\u5011\u5c08\u6ce8\u65bc\u900f\u904e\u958b\u767c\u4e00\u7a2e\u65b0\u7a4e\u7684\u57fa\u65bc\u5716\u5f62\u5165\u4fb5\u5075\u6e2c\u7cfb\u7d71 (IDS) \u4f86\u89e3\u6c7a\u7121\u4eba\u6a5f\u4e2d\u4e00\u4e9b\u6700\u95dc\u9375\u7684\u5b89\u5168\u5f31\u9ede\uff0c\u4e26\u5229\u7528\u4e86\u7c21\u6613\u61c9\u7528\u5c64\u8eca\u8f1b\u901a\u8a0a\u548c\u7db2\u8def (UAVCAN) \u5354\u5b9a\u3002\u9996\u5148\uff0c\u6211\u5011\u6839\u64da UAVCAN \u5354\u5b9a\u898f\u7bc4\u89e3\u78bc CAN \u8a0a\u606f\uff1b\u5176\u6b21\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u500b\u5c07\u8868\u683c\u5316 UAVCAN \u8a0a\u606f\u8f49\u63db\u70ba\u5716\u5f62\u7d50\u69cb\u7684\u5168\u9762\u65b9\u6cd5\u3002\u6700\u5f8c\uff0c\u6211\u5011\u61c9\u7528\u5404\u7a2e\u57fa\u65bc\u5716\u5f62\u7684\u6a5f\u5668\u5b78\u7fd2\u6a21\u578b\u4f86\u5075\u6e2c CAN \u7e3d\u7dda\u4e0a\u7684\u7db2\u8def\u653b\u64ca\uff0c\u5305\u62ec\u5716\u5f62\u5377\u7a4d\u795e\u7d93\u7db2\u8def (GCNN)\u3001\u5716\u5f62\u6ce8\u610f\u529b\u7db2\u8def (GAT)\u3001\u5716\u5f62\u63a1\u6a23\u548c\u805a\u5408\u7db2\u8def (GraphSAGE) \u4ee5\u53ca\u57fa\u65bc\u5716\u5f62\u7d50\u69cb\u7684\u8f49\u63db\u5668\u3002\u6211\u5011\u7684\u7814\u7a76\u7d50\u679c\u8868\u660e\uff0cGAT\u3001GraphSAGE \u548c\u57fa\u65bc\u5716\u5f62\u7684\u8f49\u63db\u5668\u7b49\u6b78\u7d0d\u6a21\u578b\u5728\u5075\u6e2c\u5404\u7a2e\u985e\u578b\u7684\u5165\u4fb5\u6642\uff0c\u53ef\u4ee5\u9054\u5230\u8207 GCNN \u7b49\u8f49\u5c0e\u6a21\u578b\u76f8\u7576\u751a\u81f3\u66f4\u597d\u7684\u6e96\u78ba\u5ea6\uff0c\u4e14\u5c0d\u5354\u5b9a\u898f\u7bc4\u7684\u8cc7\u8a0a\u6700\u5c11\uff0c\u5f9e\u800c\u70ba\u7121\u4eba\u6a5f\u7684 CAN \u7e3d\u7dda\u5b89\u5168\u6027\u63d0\u4f9b\u4e86\u4e00\u500b\u901a\u7528\u7684\u5f37\u5927\u89e3\u6c7a\u65b9\u6848\u3002\u6211\u5011\u9084\u5c07\u6211\u5011\u7684\u7d50\u679c\u8207\u57fa\u7dda\u55ae\u5c64\u9577\u77ed\u671f\u8a18\u61b6 (LSTM) \u9032\u884c\u4e86\u6bd4\u8f03\uff0c\u767c\u73fe\u6211\u5011\u6240\u6709\u7684\u57fa\u65bc\u5716\u5f62\u7684\u6a21\u578b\u5728\u4e0d\u4f7f\u7528\u4efb\u4f55\u57fa\u65bc UAVCAN \u5354\u5b9a\u7684\u89e3\u78bc\u7279\u5fb5\u7684\u60c5\u6cc1\u4e0b\u90fd\u80fd\u8868\u73fe\u5f97\u66f4\u597d\uff0c\u7a81\u986f\u4e86\u5177\u6709\u5354\u5b9a\u7368\u7acb\u529f\u80fd\u7684\u66f4\u9ad8\u7684\u5075\u6e2c\u6548\u80fd\u3002</paragraph>", "author": "Reek Majumder et.al.", "authors": "Reek Majumder, Gurcan Comert, David Werth, Adrian Gale, Mashrur Chowdhury, M Sabbir Salek", "id": "2412.02539v1", "paper_url": "http://arxiv.org/abs/2412.02539v1", "repo": "null"}}