{"2407.14530": {"publish_time": "2024-07-09", "title": "FuncEvalGMN: Evaluating Functional Correctness of SQL via Graph Matching Network", "paper_summary": "In this paper, we propose a novel graph-based methodology to evaluate the\nfunctional correctness of SQL generation. Conventional metrics for assessing\nSQL code generation, such as matching-based and execution-based methods (e.g.,\nexact set match and execution accuracy), are subject to two primary\nlimitations. Firstly, the former fails to effectively assess functional\ncorrectness, as different SQL queries may possess identical functionalities.\nSecondly, the latter is susceptible to producing false positive samples in\nevaluations. Our proposed evaluation method, \\texttt{FuncEvalGMN}, does not\ndepend on the sufficient preparation of the test data, and it enables precise\ntesting of the functional correctness of the code. Firstly, we parse SQL using\na relational operator tree (ROT) called \\textit{Relnode}, which contains rich\nsemantic information from the perspective of logical execution.Then, we\nintroduce a GNN-based approach for predicting the functional correctness of\ngenerated SQL. This approach incorporates global positional embeddings to\naddress the limitations with the loss of topological information in\nconventional graph matching frameworks. As an auxiliary contribution, we\npropose a rule-based matching algorithm, Relnode Partial Matching\n(\\texttt{RelPM}) as a baseline. Finally, we contribute a dataset,\n\\texttt{Pair-Aug-Spider} with a training set and two testing sets, each\ncomprising pairs of SQL codes to simulate various SQL code evaluation\nscenarios. The training set and one testing dataset focus on code generation\nusing large language models (LLMs), while the other emphasizes SQL equivalence\nrewriting.", "paper_summary_zh": "<paragraph>\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u7a2e\u65b0\u7a4e\u7684\u57fa\u65bc\u5716\u7684\u65b9\u6cd5\u4f86\u8a55\u4f30 SQL \u751f\u6210\u7684\u529f\u80fd\u6b63\u78ba\u6027\u3002\u8a55\u4f30 SQL \u7a0b\u5f0f\u78bc\u751f\u6210\u7684\u50b3\u7d71\u6307\u6a19\uff0c\u4f8b\u5982\u57fa\u65bc\u5339\u914d\u548c\u57fa\u65bc\u57f7\u884c\u7684\u6307\u6a19\uff08\u4f8b\u5982\uff0c\u7cbe\u78ba\u96c6\u5408\u5339\u914d\u548c\u57f7\u884c\u6e96\u78ba\u5ea6\uff09\uff0c\u5b58\u5728\u5169\u500b\u4e3b\u8981\u7684\u9650\u5236\u3002\u9996\u5148\uff0c\u524d\u8005\u7121\u6cd5\u6709\u6548\u8a55\u4f30\u529f\u80fd\u6b63\u78ba\u6027\uff0c\u56e0\u70ba\u4e0d\u540c\u7684 SQL \u67e5\u8a62\u53ef\u80fd\u5177\u6709\u76f8\u540c\u7684\u6a5f\u80fd\u3002\u5176\u6b21\uff0c\u5f8c\u8005\u5728\u8a55\u4f30\u4e2d\u5bb9\u6613\u7522\u751f\u5047\u967d\u6027\u6a23\u672c\u3002\u6211\u5011\u63d0\u51fa\u7684\u8a55\u4f30\u65b9\u6cd5 \\texttt{FuncEvalGMN} \u4e0d\u4f9d\u8cf4\u65bc\u6e2c\u8a66\u8cc7\u6599\u7684\u5145\u5206\u6e96\u5099\uff0c\u4e26\u4e14\u53ef\u4ee5\u7cbe\u78ba\u6e2c\u8a66\u7a0b\u5f0f\u78bc\u7684\u529f\u80fd\u6b63\u78ba\u6027\u3002\u9996\u5148\uff0c\u6211\u5011\u4f7f\u7528\u7a31\u70ba \\textit{Relnode} \u7684\u95dc\u4fc2\u904b\u7b97\u5143\u6a39 (ROT) \u4f86\u89e3\u6790 SQL\uff0c\u5176\u4e2d\u5305\u542b\u5f9e\u908f\u8f2f\u57f7\u884c\u7684\u89d2\u5ea6\u4f86\u770b\u8c50\u5bcc\u7684\u8a9e\u7fa9\u8cc7\u8a0a\u3002\u7136\u5f8c\uff0c\u6211\u5011\u5f15\u5165\u4e00\u7a2e\u57fa\u65bc GNN \u7684\u65b9\u6cd5\u4f86\u9810\u6e2c\u751f\u6210\u7684 SQL \u7684\u529f\u80fd\u6b63\u78ba\u6027\u3002\u9019\u7a2e\u65b9\u6cd5\u7d50\u5408\u4e86\u5168\u5c40\u4f4d\u7f6e\u5d4c\u5165\uff0c\u4ee5\u89e3\u6c7a\u50b3\u7d71\u5716\u5f62\u5339\u914d\u6846\u67b6\u4e2d\u62d3\u64b2\u8cc7\u8a0a\u907a\u5931\u7684\u9650\u5236\u3002\u4f5c\u70ba\u8f14\u52a9\u8ca2\u737b\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u500b\u57fa\u65bc\u898f\u5247\u7684\u5339\u914d\u6f14\u7b97\u6cd5\uff0c\u5373 Relnode \u90e8\u5206\u5339\u914d (\\texttt{RelPM}) \u4f5c\u70ba\u57fa\u7dda\u3002\u6700\u5f8c\uff0c\u6211\u5011\u8ca2\u737b\u4e86\u4e00\u500b\u8cc7\u6599\u96c6 \\texttt{Pair-Aug-Spider}\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u500b\u8a13\u7df4\u96c6\u548c\u5169\u500b\u6e2c\u8a66\u96c6\uff0c\u6bcf\u500b\u6e2c\u8a66\u96c6\u90fd\u5305\u542b\u6210\u5c0d\u7684 SQL \u7a0b\u5f0f\u78bc\u4f86\u6a21\u64ec\u5404\u7a2e SQL \u7a0b\u5f0f\u78bc\u8a55\u4f30\u5834\u666f\u3002\u8a13\u7df4\u96c6\u548c\u4e00\u500b\u6e2c\u8a66\u8cc7\u6599\u96c6\u5c08\u6ce8\u65bc\u4f7f\u7528\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u9032\u884c\u7a0b\u5f0f\u78bc\u751f\u6210\uff0c\u800c\u53e6\u4e00\u500b\u5247\u5f37\u8abf SQL \u7b49\u50f9\u91cd\u5beb\u3002</paragraph>", "author": "Yi Zhan et.al.", "authors": "Yi Zhan, Yang Sun, Han Weng, Longjie Cui, Guifeng Wang, Jiajun Xie, Yu Tian, Xiaoming Yin, Boyi Liu, Dongchi Huang", "id": "2407.14530v1", "paper_url": "http://arxiv.org/abs/2407.14530v1", "repo": "null"}}