{"2406.03283": {"publish_time": "2024-06-05", "title": "Enhancing Repository-Level Code Generation with Integrated Contextual Information", "paper_summary": "Large language models (LLMs) have demonstrated remarkable capabilities in\ncode generation tasks. However, repository-level code generation presents\nunique challenges, particularly due to the need to utilize information spread\nacross multiple files within a repository. Existing retrieval-based approaches\nsometimes fall short as they are limited in obtaining a broader and deeper\nrepository context. In this paper, we present CatCoder, a novel code generation\nframework designed for statically typed programming languages. CatCoder\nenhances repository-level code generation by integrating relevant code and type\ncontext. Specifically, it leverages static analyzers to extract type\ndependencies and merges this information with retrieved code to create\ncomprehensive prompts for LLMs. To evaluate the effectiveness of CatCoder, we\nadapt and construct benchmarks that include 199 Java tasks and 90 Rust tasks.\nThe results show that CatCoder outperforms the RepoCoder baseline by up to\n17.35%, in terms of pass@k score. Furthermore, the generalizability of CatCoder\nis assessed using various LLMs, including both code-specialized models and\ngeneral-purpose models. Our findings indicate consistent performance\nimprovements across all models, which underlines the practicality of CatCoder.", "paper_summary_zh": "\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u5df2\u5728\u7a0b\u5f0f\u78bc\u7522\u751f\u4efb\u52d9\u4e2d\u5c55\u73fe\u51fa\u9a5a\u4eba\u7684\u80fd\u529b\u3002\u7136\u800c\uff0c\u5132\u5b58\u5eab\u5c64\u7d1a\u7684\u7a0b\u5f0f\u78bc\u7522\u751f\u6703\u5e36\u4f86\u7368\u7279\u7684\u6311\u6230\uff0c\u7279\u5225\u662f\u56e0\u70ba\u9700\u8981\u5229\u7528\u6563\u4f48\u5728\u5132\u5b58\u5eab\u4e2d\u591a\u500b\u6a94\u6848\u4e2d\u7684\u8cc7\u8a0a\u3002\u73fe\u6709\u7684\u57fa\u65bc\u6aa2\u7d22\u7684\u65b9\u6cd5\u6709\u6642\u6703\u4e0d\u8db3\uff0c\u56e0\u70ba\u5b83\u5011\u5728\u53d6\u5f97\u66f4\u5ee3\u6cdb\u548c\u6df1\u5165\u7684\u5132\u5b58\u5eab\u5167\u5bb9\u65b9\u9762\u53d7\u5230\u9650\u5236\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u63d0\u51fa CatCoder\uff0c\u4e00\u500b\u5c08\u70ba\u975c\u614b\u985e\u578b\u7a0b\u5f0f\u8a9e\u8a00\u8a2d\u8a08\u7684\u65b0\u7a4e\u7a0b\u5f0f\u78bc\u7522\u751f\u67b6\u69cb\u3002CatCoder \u900f\u904e\u6574\u5408\u76f8\u95dc\u7a0b\u5f0f\u78bc\u548c\u985e\u578b\u5167\u5bb9\u4f86\u589e\u5f37\u5132\u5b58\u5eab\u5c64\u7d1a\u7684\u7a0b\u5f0f\u78bc\u7522\u751f\u3002\u5177\u9ad4\u4f86\u8aaa\uff0c\u5b83\u5229\u7528\u975c\u614b\u5206\u6790\u5668\u4f86\u63d0\u53d6\u985e\u578b\u4f9d\u8cf4\u6027\uff0c\u4e26\u5c07\u6b64\u8cc7\u8a0a\u8207\u6aa2\u7d22\u7684\u7a0b\u5f0f\u78bc\u5408\u4f75\uff0c\u4ee5\u5efa\u7acb LLM \u7684\u5168\u9762\u63d0\u793a\u3002\u70ba\u4e86\u8a55\u4f30 CatCoder \u7684\u6709\u6548\u6027\uff0c\u6211\u5011\u8abf\u6574\u4e26\u5efa\u69cb\u5305\u542b 199 \u500b Java \u4efb\u52d9\u548c 90 \u500b Rust \u4efb\u52d9\u7684\u57fa\u6e96\u3002\u7d50\u679c\u986f\u793a\uff0cCatCoder \u5728 pass@k \u5206\u6578\u65b9\u9762\u512a\u65bc RepoCoder \u57fa\u6e96\uff0c\u6700\u591a\u53ef\u9054 17.35%\u3002\u6b64\u5916\uff0cCatCoder \u7684\u6cdb\u5316\u80fd\u529b\u4f7f\u7528\u5404\u7a2e LLM \u4f86\u8a55\u4f30\uff0c\u5305\u62ec\u7a0b\u5f0f\u78bc\u5c08\u7528\u6a21\u578b\u548c\u901a\u7528\u6a21\u578b\u3002\u6211\u5011\u7684\u7814\u7a76\u7d50\u679c\u8868\u660e\uff0c\u6240\u6709\u6a21\u578b\u7684\u6548\u80fd\u90fd\u6709\u6301\u7e8c\u7684\u63d0\u5347\uff0c\u9019\u7a81\u986f\u4e86 CatCoder \u7684\u5be6\u7528\u6027\u3002", "author": "Zhiyuan Pan et.al.", "authors": "Zhiyuan Pan, Xing Hu, Xin Xia, Xiaohu Yang", "id": "2406.03283v1", "paper_url": "http://arxiv.org/abs/2406.03283v1", "repo": "null"}}