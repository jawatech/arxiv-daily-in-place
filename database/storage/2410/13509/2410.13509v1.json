{"2410.13509": {"publish_time": "2024-10-17", "title": "RAG-DDR: Optimizing Retrieval-Augmented Generation Using Differentiable Data Rewards", "paper_summary": "Retrieval-Augmented Generation (RAG) has proven its effectiveness in\nmitigating hallucinations in Large Language Models (LLMs) by retrieving\nknowledge from external resources. To adapt LLMs for RAG pipelines, current\napproaches use instruction tuning to optimize LLMs, improving their ability to\nutilize retrieved knowledge. This supervised fine-tuning (SFT) approach focuses\non equipping LLMs to handle diverse RAG tasks using different instructions.\nHowever, it trains RAG modules to overfit training signals and overlooks the\nvarying data preferences among agents within the RAG system. In this paper, we\npropose a Differentiable Data Rewards (DDR) method, which end-to-end trains RAG\nsystems by aligning data preferences between different RAG modules. DDR works\nby collecting the rewards to optimize each agent with a rollout method. This\nmethod prompts agents to sample some potential responses as perturbations,\nevaluates the impact of these perturbations on the whole RAG system, and\nsubsequently optimizes the agent to produce outputs that improve the\nperformance of the RAG system. Our experiments on various knowledge-intensive\ntasks demonstrate that DDR significantly outperforms the SFT method,\nparticularly for LLMs with smaller-scale parameters that depend more on the\nretrieved knowledge. Additionally, DDR exhibits a stronger capability to align\nthe data preference between RAG modules. The DDR method makes generation module\nmore effective in extracting key information from documents and mitigating\nconflicts between parametric memory and external knowledge. All codes are\navailable at https://github.com/OpenMatch/RAG-DDR.", "paper_summary_zh": "\u6aa2\u7d22\u589e\u5f37\u751f\u6210\uff08RAG\uff09\u5df2\u8b49\u660e\u5176\u5728\u5927\u578b\u8a9e\u8a00\u6a21\u578b\uff08LLM\uff09\u4e2d\u900f\u904e\u5f9e\u5916\u90e8\u8cc7\u6e90\u6aa2\u7d22\u77e5\u8b58\u4f86\u6e1b\u8f15\u5e7b\u89ba\u7684\u6709\u6548\u6027\u3002\u70ba\u4e86\u5c07 LLM \u9069\u61c9\u65bc RAG \u7ba1\u7dda\uff0c\u76ee\u524d\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u6307\u4ee4\u8abf\u6574\u4f86\u6700\u4f73\u5316 LLM\uff0c\u9032\u800c\u6539\u5584\u5b83\u5011\u5229\u7528\u6aa2\u7d22\u77e5\u8b58\u7684\u80fd\u529b\u3002\u9019\u7a2e\u76e3\u7763\u5fae\u8abf\uff08SFT\uff09\u65b9\u6cd5\u5c08\u6ce8\u65bc\u900f\u904e\u4e0d\u540c\u7684\u6307\u4ee4\u4f86\u88dd\u5099 LLM \u4ee5\u8655\u7406\u4e0d\u540c\u7684 RAG \u4efb\u52d9\u3002\u7136\u800c\uff0c\u5b83\u8a13\u7df4 RAG \u6a21\u7d44\u904e\u5ea6\u64ec\u5408\u8a13\u7df4\u8a0a\u865f\uff0c\u4e26\u5ffd\u7565 RAG \u7cfb\u7d71\u4e2d\u4ee3\u7406\u4e4b\u9593\u4e0d\u540c\u7684\u8cc7\u6599\u504f\u597d\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u63d0\u51fa\u53ef\u5fae\u5206\u8cc7\u6599\u734e\u52f5\uff08DDR\uff09\u65b9\u6cd5\uff0c\u5b83\u900f\u904e\u8abf\u6574\u4e0d\u540c RAG \u6a21\u7d44\u4e4b\u9593\u7684\u8cc7\u6599\u504f\u597d\u4f86\u7aef\u5c0d\u7aef\u8a13\u7df4 RAG \u7cfb\u7d71\u3002DDR \u7684\u904b\u4f5c\u65b9\u5f0f\u662f\u6536\u96c6\u734e\u52f5\uff0c\u4ee5\u900f\u904e\u6efe\u52d5\u65b9\u6cd5\u6700\u4f73\u5316\u6bcf\u500b\u4ee3\u7406\u3002\u6b64\u65b9\u6cd5\u63d0\u793a\u4ee3\u7406\u5c07\u4e00\u4e9b\u6f5b\u5728\u56de\u61c9\u53d6\u6a23\u70ba\u64fe\u52d5\uff0c\u8a55\u4f30\u9019\u4e9b\u64fe\u52d5\u5c0d\u6574\u500b RAG \u7cfb\u7d71\u7684\u5f71\u97ff\uff0c\u4e26\u96a8\u5f8c\u6700\u4f73\u5316\u4ee3\u7406\u4ee5\u7522\u751f\u6539\u5584 RAG \u7cfb\u7d71\u6548\u80fd\u7684\u8f38\u51fa\u3002\u6211\u5011\u5728\u5404\u7a2e\u77e5\u8b58\u5bc6\u96c6\u578b\u4efb\u52d9\u4e0a\u9032\u884c\u7684\u5be6\u9a57\u8b49\u660e\uff0cDDR \u660e\u986f\u512a\u65bc SFT \u65b9\u6cd5\uff0c\u7279\u5225\u662f\u5c0d\u65bc\u4f9d\u8cf4\u6aa2\u7d22\u77e5\u8b58\u8f03\u591a\u7684\u8f03\u5c0f\u898f\u6a21\u53c3\u6578\u7684 LLM\u3002\u6b64\u5916\uff0cDDR \u5c55\u73fe\u51fa\u66f4\u5f37\u5927\u7684\u80fd\u529b\uff0c\u53ef\u4ee5\u8abf\u6574 RAG \u6a21\u7d44\u4e4b\u9593\u7684\u8cc7\u6599\u504f\u597d\u3002DDR \u65b9\u6cd5\u4f7f\u751f\u6210\u6a21\u7d44\u66f4\u6709\u6548\u5730\u5f9e\u6587\u4ef6\u63d0\u53d6\u95dc\u9375\u8cc7\u8a0a\uff0c\u4e26\u6e1b\u8f15\u53c3\u6578\u5316\u8a18\u61b6\u9ad4\u8207\u5916\u90e8\u77e5\u8b58\u4e4b\u9593\u7684\u885d\u7a81\u3002\u6240\u6709\u7a0b\u5f0f\u78bc\u90fd\u53ef\u4ee5\u5728 https://github.com/OpenMatch/RAG-DDR \u53d6\u5f97\u3002", "author": "Xinze Li et.al.", "authors": "Xinze Li, Sen Mei, Zhenghao Liu, Yukun Yan, Shuo Wang, Shi Yu, Zheni Zeng, Hao Chen, Ge Yu, Zhiyuan Liu, Maosong Sun, Chenyan Xiong", "id": "2410.13509v1", "paper_url": "http://arxiv.org/abs/2410.13509v1", "repo": "https://github.com/openmatch/rag-ddr"}}