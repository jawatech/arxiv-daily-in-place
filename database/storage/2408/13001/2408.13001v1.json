{"2408.13001": {"publish_time": "2024-08-23", "title": "CRUXEval-X: A Benchmark for Multilingual Code Reasoning, Understanding and Execution", "paper_summary": "Code benchmarks such as HumanEval are widely adopted to evaluate Large\nLanguage Models' (LLMs) coding capabilities. However, there is an unignorable\nprogramming language bias in existing code benchmarks -- over 95% code\ngeneration benchmarks are dominated by Python, leaving the LLMs' capabilities\nin other programming languages such as Java and C/C++ unknown. Moreover, coding\ntask bias is also crucial. Most benchmarks focus on code generation capability,\nwhile benchmarks for code reasoning (given input, reasoning output; and given\noutput, reasoning input), an essential coding capability, are insufficient.\nYet, constructing multi-lingual benchmarks can be expensive and\nlabor-intensive, and codes in contest websites such as Leetcode suffer from\ndata contamination during training. To fill this gap, we propose CRUXEVAL-X, a\nmulti-lingual code reasoning benchmark that contains 19 programming languages.\nIt comprises at least 600 subjects for each language, along with 19K\ncontent-consistent tests in total. In particular, the construction pipeline of\nCRUXEVAL-X works in a fully automated and test-guided manner, which iteratively\ngenerates and repairs based on execution feedback. Also, to cross language\nbarriers (e.g., dynamic/static type systems in Python/C++), we formulated\nvarious transition rules between language pairs to facilitate translation. Our\nintensive evaluation of 24 representative LLMs reveals the correlation between\nlanguage pairs. For example, TypeScript and JavaScript show a significant\npositive correlation, while Racket has less correlation with other languages.\nMore interestingly, even a model trained solely on Python can achieve at most\n34.4% Pass@1 in other languages, revealing the cross-language generalization of\nLLMs.", "paper_summary_zh": "<paragraph>\u50cf HumanEval \u9019\u6a23\u7684\u7a0b\u5f0f\u78bc\u57fa\u6e96\u5ee3\u6cdb\u7528\u65bc\u8a55\u4f30\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u7684\u7de8\u78bc\u80fd\u529b\u3002\u7136\u800c\uff0c\u73fe\u6709\u7684\u7a0b\u5f0f\u78bc\u57fa\u6e96\u4e2d\u5b58\u5728\u7121\u6cd5\u5ffd\u8996\u7684\u7a0b\u5f0f\u8a9e\u8a00\u504f\u898b\u2014\u2014\u8d85\u904e 95% \u7684\u7a0b\u5f0f\u78bc\u751f\u6210\u57fa\u6e96\u7531 Python \u4e3b\u5c0e\uff0c\u800c LLM \u5728 Java \u548c C/C++ \u7b49\u5176\u4ed6\u7a0b\u5f0f\u8a9e\u8a00\u4e2d\u7684\u80fd\u529b\u4ecd\u672a\u77e5\u3002\u6b64\u5916\uff0c\u7de8\u78bc\u4efb\u52d9\u504f\u898b\u4e5f\u81f3\u95dc\u91cd\u8981\u3002\u5927\u591a\u6578\u57fa\u6e96\u5074\u91cd\u65bc\u7a0b\u5f0f\u78bc\u751f\u6210\u80fd\u529b\uff0c\u800c\u7528\u65bc\u7a0b\u5f0f\u78bc\u63a8\u7406\u7684\u57fa\u6e96\uff08\u7d66\u5b9a\u8f38\u5165\uff0c\u63a8\u7406\u8f38\u51fa\uff1b\u7d66\u5b9a\u8f38\u51fa\uff0c\u63a8\u7406\u8f38\u5165\uff09\uff0c\u4e00\u7a2e\u5fc5\u8981\u7684\u7de8\u78bc\u80fd\u529b\uff0c\u537b\u4e0d\u8db3\u3002\u7136\u800c\uff0c\u69cb\u5efa\u591a\u8a9e\u8a00\u57fa\u6e96\u53ef\u80fd\u65e2\u6602\u8cb4\u53c8\u8cbb\u529b\uff0c\u800c Leetcode \u7b49\u7af6\u8cfd\u7db2\u7ad9\u4e2d\u7684\u7a0b\u5f0f\u78bc\u5728\u8a13\u7df4\u671f\u9593\u6703\u53d7\u5230\u8cc7\u6599\u6c61\u67d3\u3002\u70ba\u4e86\u586b\u88dc\u9019\u4e00\u7a7a\u767d\uff0c\u6211\u5011\u63d0\u51fa\u4e86 CRUXEVAL-X\uff0c\u9019\u662f\u4e00\u500b\u5305\u542b 19 \u7a2e\u7a0b\u5f0f\u8a9e\u8a00\u7684\u591a\u8a9e\u8a00\u7a0b\u5f0f\u78bc\u63a8\u7406\u57fa\u6e96\u3002\u5b83\u5305\u542b\u6bcf\u7a2e\u8a9e\u8a00\u81f3\u5c11 600 \u500b\u4e3b\u984c\uff0c\u4ee5\u53ca\u7e3d\u5171 19K \u500b\u5167\u5bb9\u4e00\u81f4\u7684\u6e2c\u8a66\u3002\u7279\u5225\u662f\uff0cCRUXEVAL-X \u7684\u69cb\u5efa\u7ba1\u9053\u4ee5\u5b8c\u5168\u81ea\u52d5\u5316\u548c\u6e2c\u8a66\u5f15\u5c0e\u7684\u65b9\u5f0f\u5de5\u4f5c\uff0c\u5b83\u6839\u64da\u57f7\u884c\u53cd\u994b\u53cd\u8986\u751f\u6210\u548c\u4fee\u5fa9\u3002\u6b64\u5916\uff0c\u70ba\u4e86\u8de8\u8d8a\u8a9e\u8a00\u969c\u7919\uff08\u4f8b\u5982\uff0cPython/C++ \u4e2d\u7684\u52d5\u614b/\u975c\u614b\u985e\u578b\u7cfb\u7d71\uff09\uff0c\u6211\u5011\u5236\u5b9a\u4e86\u8a9e\u8a00\u5c0d\u4e4b\u9593\u7684\u5404\u7a2e\u8f49\u63db\u898f\u5247\u4ee5\u4fc3\u9032\u7ffb\u8b6f\u3002\u6211\u5011\u5c0d 24 \u500b\u5177\u6709\u4ee3\u8868\u6027\u7684 LLM \u9032\u884c\u7684\u6df1\u5165\u8a55\u4f30\u63ed\u793a\u4e86\u8a9e\u8a00\u5c0d\u4e4b\u9593\u7684\u95dc\u806f\u6027\u3002\u4f8b\u5982\uff0cTypeScript \u548c JavaScript \u986f\u793a\u51fa\u986f\u8457\u7684\u6b63\u76f8\u95dc\u6027\uff0c\u800c Racket \u8207\u5176\u4ed6\u8a9e\u8a00\u7684\u76f8\u95dc\u6027\u8f03\u4f4e\u3002\u66f4\u6709\u8da3\u7684\u662f\uff0c\u5373\u4f7f\u4e00\u500b\u50c5\u5728 Python \u4e0a\u8a13\u7df4\u7684\u6a21\u578b\u5728\u5176\u4ed6\u8a9e\u8a00\u4e2d\u6700\u591a\u53ea\u80fd\u9054\u5230 34.4% \u7684 Pass@1\uff0c\u9019\u63ed\u793a\u4e86 LLM \u7684\u8de8\u8a9e\u8a00\u6982\u62ec\u80fd\u529b\u3002</paragraph>", "author": "Ruiyang Xu et.al.", "authors": "Ruiyang Xu, Jialun Cao, Yaojie Lu, Hongyu Lin, Xianpei Han, Ben He, Shing-Chi Cheung, Le Sun", "id": "2408.13001v1", "paper_url": "http://arxiv.org/abs/2408.13001v1", "repo": "null"}}