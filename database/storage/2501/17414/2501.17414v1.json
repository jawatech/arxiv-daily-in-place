{"2501.17414": {"publish_time": "2025-01-29", "title": "Reqo: A Robust and Explainable Query Optimization Cost Model", "paper_summary": "In recent years, there has been a growing interest in using machine learning\n(ML) in query optimization to select more efficient plans. Existing\nlearning-based query optimizers use certain model architectures to convert\ntree-structured query plans into representations suitable for downstream ML\ntasks. As the design of these architectures significantly impacts cost\nestimation, we propose a tree model architecture based on Bidirectional Graph\nNeural Networks (Bi-GNN) aggregated by Gated Recurrent Units (GRUs) to achieve\nmore accurate cost estimates. The inherent uncertainty of data and model\nparameters also leads to inaccurate cost estimates, resulting in suboptimal\nplans and less robust query performance. To address this, we implement a novel\nlearning-to-rank cost model that effectively quantifies the uncertainty in cost\nestimates using approximate probabilistic ML. This model adaptively integrates\nquantified uncertainty with estimated costs and learns from comparing pairwise\nplans, achieving more robust performance. In addition, we propose the first\nexplainability technique specifically designed for learning-based cost models.\nThis technique explains the contribution of any subgraphs in the query plan to\nthe final predicted cost, which can be integrated and trained with any\nlearning-based cost model to significantly boost the model's explainability. By\nincorporating these innovations, we propose a cost model for a Robust and\nExplainable Query Optimizer, Reqo, that improves the accuracy, robustness, and\nexplainability of cost estimation, outperforming state-of-the-art approaches in\nall three dimensions.", "paper_summary_zh": "\u8fd1\u5e74\u6765\uff0c\u4eba\u4eec\u5bf9\u5728\u67e5\u8be2\u4f18\u5316\u4e2d\u4f7f\u7528\u673a\u5668\u5b66\u4e60 (ML) \u6765\u9009\u62e9\u66f4\u6709\u6548\u7684\u8ba1\u5212\u8d8a\u6765\u8d8a\u611f\u5174\u8da3\u3002\u73b0\u6709\u7684\u57fa\u4e8e\u5b66\u4e60\u7684\u67e5\u8be2\u4f18\u5316\u5668\u4f7f\u7528\u7279\u5b9a\u6a21\u578b\u67b6\u6784\u5c06\u6811\u5f62\u7ed3\u6784\u67e5\u8be2\u8ba1\u5212\u8f6c\u6362\u4e3a\u9002\u5408\u4e0b\u6e38 ML \u4efb\u52a1\u7684\u8868\u793a\u3002\u7531\u4e8e\u8fd9\u4e9b\u67b6\u6784\u7684\u8bbe\u8ba1\u4f1a\u663e\u8457\u5f71\u54cd\u6210\u672c\u4f30\u7b97\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u53cc\u5411\u56fe\u795e\u7ecf\u7f51\u7edc (Bi-GNN) \u7684\u6811\u6a21\u578b\u67b6\u6784\uff0c\u8be5\u67b6\u6784\u7531\u95e8\u63a7\u5faa\u73af\u5355\u5143 (GRU) \u805a\u5408\uff0c\u4ee5\u5b9e\u73b0\u66f4\u51c6\u786e\u7684\u6210\u672c\u4f30\u7b97\u3002\u6570\u636e\u548c\u6a21\u578b\u53c2\u6570\u7684\u56fa\u6709\u4e0d\u786e\u5b9a\u6027\u4e5f\u4f1a\u5bfc\u81f4\u6210\u672c\u4f30\u7b97\u4e0d\u51c6\u786e\uff0c\u4ece\u800c\u5bfc\u81f4\u8ba1\u5212\u4e0d\u7406\u60f3\u548c\u67e5\u8be2\u6027\u80fd\u4e0d\u4f73\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u4e00\u4e2a\u65b0\u9896\u7684\u5b66\u4e60\u6392\u5e8f\u6210\u672c\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u4f7f\u7528\u8fd1\u4f3c\u6982\u7387 ML \u6709\u6548\u5730\u91cf\u5316\u4e86\u6210\u672c\u4f30\u7b97\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u6b64\u6a21\u578b\u81ea\u9002\u5e94\u5730\u5c06\u91cf\u5316\u7684\u4e0d\u786e\u5b9a\u6027\u4e0e\u4f30\u8ba1\u6210\u672c\u76f8\u7ed3\u5408\uff0c\u5e76\u4ece\u6bd4\u8f83\u6210\u5bf9\u8ba1\u5212\u4e2d\u5b66\u4e60\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u7a33\u5065\u7684\u6027\u80fd\u3002\u6b64\u5916\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u7b2c\u4e00\u4e2a\u4e13\u95e8\u4e3a\u57fa\u4e8e\u5b66\u4e60\u7684\u6210\u672c\u6a21\u578b\u8bbe\u8ba1\u7684\u53ef\u89e3\u91ca\u6027\u6280\u672f\u3002\u6b64\u6280\u672f\u89e3\u91ca\u4e86\u67e5\u8be2\u8ba1\u5212\u4e2d\u4efb\u4f55\u5b50\u56fe\u5bf9\u6700\u7ec8\u9884\u6d4b\u6210\u672c\u7684\u8d21\u732e\uff0c\u8be5\u6280\u672f\u53ef\u4ee5\u4e0e\u4efb\u4f55\u57fa\u4e8e\u5b66\u4e60\u7684\u6210\u672c\u6a21\u578b\u96c6\u6210\u5e76\u8fdb\u884c\u8bad\u7ec3\uff0c\u4ee5\u663e\u8457\u63d0\u9ad8\u6a21\u578b\u7684\u53ef\u89e3\u91ca\u6027\u3002\u901a\u8fc7\u7ed3\u5408\u8fd9\u4e9b\u521b\u65b0\uff0c\u6211\u4eec\u4e3a\u7a33\u5065\u4e14\u53ef\u89e3\u91ca\u7684\u67e5\u8be2\u4f18\u5316\u5668 Reqo \u63d0\u51fa\u4e86\u4e00\u79cd\u6210\u672c\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u63d0\u9ad8\u4e86\u6210\u672c\u4f30\u7b97\u7684\u51c6\u786e\u6027\u3001\u7a33\u5065\u6027\u548c\u53ef\u89e3\u91ca\u6027\uff0c\u5728\u6240\u6709\u4e09\u4e2a\u7ef4\u5ea6\u4e0a\u90fd\u4f18\u4e8e\u6700\u5148\u8fdb\u7684\u65b9\u6cd5\u3002", "author": "Baoming Chang et.al.", "authors": "Baoming Chang, Amin Kamali, Verena Kantere", "id": "2501.17414v1", "paper_url": "http://arxiv.org/abs/2501.17414v1", "repo": "https://github.com/baomingchang/reqo-on-postgresql"}}