{"2407.09437": {"publish_time": "2024-07-12", "title": "Let Me DeCode You: Decoder Conditioning with Tabular Data", "paper_summary": "Training deep neural networks for 3D segmentation tasks can be challenging,\noften requiring efficient and effective strategies to improve model\nperformance. In this study, we introduce a novel approach, DeCode, that\nutilizes label-derived features for model conditioning to support the decoder\nin the reconstruction process dynamically, aiming to enhance the efficiency of\nthe training process. DeCode focuses on improving 3D segmentation performance\nthrough the incorporation of conditioning embedding with learned numerical\nrepresentation of 3D-label shape features. Specifically, we develop an\napproach, where conditioning is applied during the training phase to guide the\nnetwork toward robust segmentation. When labels are not available during\ninference, our model infers the necessary conditioning embedding directly from\nthe input data, thanks to a feed-forward network learned during the training\nphase. This approach is tested using synthetic data and cone-beam computed\ntomography (CBCT) images of teeth. For CBCT, three datasets are used: one\npublicly available and two in-house. Our results show that DeCode significantly\noutperforms traditional, unconditioned models in terms of generalization to\nunseen data, achieving higher accuracy at a reduced computational cost. This\nwork represents the first of its kind to explore conditioning strategies in 3D\ndata segmentation, offering a novel and more efficient method for leveraging\nannotated data. Our code, pre-trained models are publicly available at\nhttps://github.com/SanoScience/DeCode .", "paper_summary_zh": "\u8a13\u7df4\u6df1\u5ea6\u795e\u7d93\u7db2\u8def\u9032\u884c 3D \u5206\u5272\u4efb\u52d9\u53ef\u80fd\u5177\u6709\u6311\u6230\u6027\uff0c\n\u901a\u5e38\u9700\u8981\u6709\u6548\u4e14\u9ad8\u6548\u7684\u7b56\u7565\u4f86\u63d0\u5347\u6a21\u578b\n\u6548\u80fd\u3002\u5728\u672c\u7814\u7a76\u4e2d\uff0c\u6211\u5011\u63d0\u51fa\u4e00\u500b\u65b0\u7a4e\u7684 DeCode \u65b9\u6cd5\uff0c\u5b83\n\u5229\u7528\u6a19\u7c64\u884d\u751f\u7684\u7279\u5fb5\u9032\u884c\u6a21\u578b\u8abf\u6574\uff0c\u4ee5\u52d5\u614b\u652f\u63f4\u89e3\u78bc\u5668\n\u5728\u91cd\u5efa\u904e\u7a0b\u4e2d\u7684\u529f\u80fd\uff0c\u76ee\u6a19\u662f\u63d0\u5347\u8a13\u7df4\u904e\u7a0b\u7684\u6548\u7387\u3002DeCode \u5c08\u6ce8\u65bc\u900f\u904e\u7d50\u5408\u8abf\u6574\u5d4c\u5165\u8207\u5b78\u7fd2\u5230\u7684 3D \u6a19\u7c64\u5f62\u72c0\u7279\u5fb5\u7684\u6578\u503c\u8868\u793a\uff0c\u4f86\u63d0\u5347 3D \u5206\u5272\u6548\u80fd\u3002\u5177\u9ad4\u4f86\u8aaa\uff0c\u6211\u5011\u958b\u767c\u4e00\u7a2e\u65b9\u6cd5\uff0c\u5728\u8a13\u7df4\u968e\u6bb5\u5957\u7528\u8abf\u6574\uff0c\u4ee5\u5f15\u5c0e\n\u7db2\u8def\u671d\u5411\u7a69\u5065\u7684\u5206\u5272\u3002\u7576\u5728\u63a8\u8ad6\u671f\u9593\u6c92\u6709\u6a19\u7c64\u6642\uff0c\u6211\u5011\u7684\u6a21\u578b\u6703\u76f4\u63a5\u5f9e\n\u8f38\u5165\u8cc7\u6599\u63a8\u8ad6\u5fc5\u8981\u7684\u8abf\u6574\u5d4c\u5165\uff0c\u9019\u8981\u6b78\u529f\u65bc\u5728\u8a13\u7df4\n\u968e\u6bb5\u5b78\u7fd2\u5230\u7684\u524d\u994b\u7db2\u8def\u3002\u9019\u7a2e\u65b9\u6cd5\u4f7f\u7528\u5408\u6210\u8cc7\u6599\u548c\u7259\u9f52\u7684\u9310\u72c0\u675f\u96fb\u8166\u65b7\u5c64\u6383\u63cf (CBCT) \u5f71\u50cf\u9032\u884c\u6e2c\u8a66\u3002\u5c0d\u65bc CBCT\uff0c\u4f7f\u7528\u4e86\u4e09\u500b\u8cc7\u6599\u96c6\uff1a\u4e00\u500b\u516c\u958b\u7684\u8cc7\u6599\u96c6\u548c\u5169\u500b\u5167\u90e8\u8cc7\u6599\u96c6\u3002\u6211\u5011\u7684\u7d50\u679c\u986f\u793a\uff0c\u5728\u672a\u898b\u904e\u8cc7\u6599\u7684\u6982\u5316\u65b9\u9762\uff0cDeCode \u660e\u986f\u512a\u65bc\u50b3\u7d71\u7684\u672a\u8abf\u6574\u6a21\u578b\uff0c\u5728\u964d\u4f4e\u904b\u7b97\u6210\u672c\u7684\u60c5\u6cc1\u4e0b\u9054\u6210\u66f4\u9ad8\u7684\u6e96\u78ba\u5ea6\u3002\u9019\u9805\u5de5\u4f5c\u4ee3\u8868\u4e86\u63a2\u7d22 3D \u8cc7\u6599\u5206\u5272\u4e2d\u7684\u8abf\u6574\u7b56\u7565\u7684\u9996\u4f8b\uff0c\u63d0\u4f9b\u4e00\u7a2e\u65b0\u7a4e\u4e14\u66f4\u6709\u6548\u7387\u7684\u65b9\u6cd5\u4f86\u5229\u7528\u6a19\u8a3b\u8cc7\u6599\u3002\u6211\u5011\u7684\u7a0b\u5f0f\u78bc\u548c\u9810\u5148\u8a13\u7df4\u7684\u6a21\u578b\u5df2\u516c\u958b\u5728\nhttps://github.com/SanoScience/DeCode\u3002", "author": "Tomasz Szczepa\u0144ski et.al.", "authors": "Tomasz Szczepa\u0144ski, Michal K. Grzeszczyk, Szymon P\u0142otka, Arleta Adamowicz, Piotr Fudalej, Przemys\u0142aw Korzeniowski, Tomasz Trzci\u0144ski, Arkadiusz Sitek", "id": "2407.09437v1", "paper_url": "http://arxiv.org/abs/2407.09437v1", "repo": "https://github.com/sanoscience/decode"}}