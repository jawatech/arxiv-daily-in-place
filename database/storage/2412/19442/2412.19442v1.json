{"2412.19442": {"publish_time": "2024-12-27", "title": "A Survey on Large Language Model Acceleration based on KV Cache Management", "paper_summary": "Large Language Models (LLMs) have revolutionized a wide range of domains such\nas natural language processing, computer vision, and multi-modal tasks due to\ntheir ability to comprehend context and perform logical reasoning. However, the\ncomputational and memory demands of LLMs, particularly during inference, pose\nsignificant challenges when scaling them to real-world, long-context, and\nreal-time applications. Key-Value (KV) cache management has emerged as a\ncritical optimization technique for accelerating LLM inference by reducing\nredundant computations and improving memory utilization. This survey provides a\ncomprehensive overview of KV cache management strategies for LLM acceleration,\ncategorizing them into token-level, model-level, and system-level\noptimizations. Token-level strategies include KV cache selection, budget\nallocation, merging, quantization, and low-rank decomposition, while\nmodel-level optimizations focus on architectural innovations and attention\nmechanisms to enhance KV reuse. System-level approaches address memory\nmanagement, scheduling, and hardware-aware designs to improve efficiency across\ndiverse computing environments. Additionally, the survey provides an overview\nof both text and multimodal datasets and benchmarks used to evaluate these\nstrategies. By presenting detailed taxonomies and comparative analyses, this\nwork aims to offer useful insights for researchers and practitioners to support\nthe development of efficient and scalable KV cache management techniques,\ncontributing to the practical deployment of LLMs in real-world applications.\nThe curated paper list for KV cache management is in:\n\\href{https://github.com/TreeAI-Lab/Awesome-KV-Cache-Management}{https://github.com/TreeAI-Lab/Awesome-KV-Cache-Management}.", "paper_summary_zh": "<paragraph>\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u5df2\u5fb9\u5e95\u6539\u8b8a\u4e86\u5ee3\u6cdb\u7684\u9818\u57df\uff0c\u4f8b\u5982\u81ea\u7136\u8a9e\u8a00\u8655\u7406\u3001\u96fb\u8166\u8996\u89ba\u548c\u591a\u6a21\u614b\u4efb\u52d9\uff0c\u56e0\u70ba\u5b83\u5011\u80fd\u5920\u7406\u89e3\u4e0a\u4e0b\u6587\u4e26\u57f7\u884c\u908f\u8f2f\u63a8\u7406\u3002\u7136\u800c\uff0cLLM \u7684\u8a08\u7b97\u548c\u8a18\u61b6\u9ad4\u9700\u6c42\uff0c\u7279\u5225\u662f\u5728\u63a8\u7406\u671f\u9593\uff0c\u5728\u5c07\u5176\u64f4\u5c55\u5230\u73fe\u5be6\u4e16\u754c\u3001\u9577\u4e0a\u4e0b\u6587\u548c\u5373\u6642\u61c9\u7528\u6642\u6703\u5e36\u4f86\u91cd\u5927\u6311\u6230\u3002\u9375\u503c (KV) \u5feb\u53d6\u7ba1\u7406\u5df2\u6210\u70ba\u4e00\u7a2e\u95dc\u9375\u7684\u6700\u4f73\u5316\u6280\u8853\uff0c\u53ef\u900f\u904e\u6e1b\u5c11\u91cd\u8907\u8a08\u7b97\u548c\u6539\u5584\u8a18\u61b6\u9ad4\u5229\u7528\u7387\u4f86\u52a0\u901f LLM \u63a8\u8ad6\u3002\u9019\u9805\u8abf\u67e5\u63d0\u4f9b\u4e86 LLM \u52a0\u901f\u7684 KV \u5feb\u53d6\u7ba1\u7406\u7b56\u7565\u7684\u5168\u9762\u6982\u8ff0\uff0c\u5c07\u5176\u5206\u985e\u70ba\u4ee4\u724c\u7d1a\u3001\u6a21\u578b\u7d1a\u548c\u7cfb\u7d71\u7d1a\u6700\u4f73\u5316\u3002\u4ee4\u724c\u7d1a\u7b56\u7565\u5305\u62ec KV \u5feb\u53d6\u9078\u64c7\u3001\u9810\u7b97\u5206\u914d\u3001\u5408\u4f75\u3001\u91cf\u5316\u548c\u4f4e\u79e9\u5206\u89e3\uff0c\u800c\u6a21\u578b\u7d1a\u6700\u4f73\u5316\u5247\u5c08\u6ce8\u65bc\u67b6\u69cb\u5275\u65b0\u548c\u6ce8\u610f\u6a5f\u5236\u4ee5\u589e\u5f37 KV \u91cd\u7528\u3002\u7cfb\u7d71\u7d1a\u65b9\u6cd5\u89e3\u6c7a\u4e86\u8a18\u61b6\u9ad4\u7ba1\u7406\u3001\u6392\u7a0b\u548c\u786c\u9ad4\u611f\u77e5\u8a2d\u8a08\uff0c\u4ee5\u63d0\u9ad8\u4e0d\u540c\u904b\u7b97\u74b0\u5883\u7684\u6548\u7387\u3002\u6b64\u5916\uff0c\u9019\u9805\u8abf\u67e5\u6982\u8ff0\u4e86\u7528\u65bc\u8a55\u4f30\u9019\u4e9b\u7b56\u7565\u7684\u6587\u5b57\u548c\u591a\u6a21\u614b\u8cc7\u6599\u96c6\u548c\u57fa\u6e96\u3002\u900f\u904e\u63d0\u4f9b\u8a73\u7d30\u7684\u5206\u985e\u6cd5\u548c\u6bd4\u8f03\u5206\u6790\uff0c\u9019\u9805\u5de5\u4f5c\u65e8\u5728\u70ba\u7814\u7a76\u4eba\u54e1\u548c\u5f9e\u696d\u4eba\u54e1\u63d0\u4f9b\u6709\u7528\u7684\u898b\u89e3\uff0c\u4ee5\u652f\u63f4\u9ad8\u6548\u4e14\u53ef\u64f4\u5145\u7684 KV \u5feb\u53d6\u7ba1\u7406\u6280\u8853\u7684\u958b\u767c\uff0c\u4e26\u6709\u52a9\u65bc\u5728\u73fe\u5be6\u4e16\u754c\u61c9\u7528\u4e2d\u5be6\u969b\u90e8\u7f72 LLM\u3002KV \u5feb\u53d6\u7ba1\u7406\u7684\u7cbe\u9078\u8ad6\u6587\u6e05\u55ae\u5728\uff1a\n\\href{https://github.com/TreeAI-Lab/Awesome-KV-Cache-Management}{https://github.com/TreeAI-Lab/Awesome-KV-Cache-Management}\u3002</paragraph>", "author": "Haoyang Li et.al.", "authors": "Haoyang Li, Yiming Li, Anxin Tian, Tianhao Tang, Zhanchao Xu, Xuejia Chen, Nicole Hu, Wei Dong, Qing Li, Lei Chen", "id": "2412.19442v1", "paper_url": "http://arxiv.org/abs/2412.19442v1", "repo": "null"}}