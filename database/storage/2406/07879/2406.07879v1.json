{"2406.07879": {"publish_time": "2024-06-12", "title": "KernelWarehouse: Rethinking the Design of Dynamic Convolution", "paper_summary": "Dynamic convolution learns a linear mixture of n static kernels weighted with\ntheir input-dependent attentions, demonstrating superior performance than\nnormal convolution. However, it increases the number of convolutional\nparameters by n times, and thus is not parameter efficient. This leads to no\nresearch progress that can allow researchers to explore the setting n>100 (an\norder of magnitude larger than the typical setting n<10) for pushing forward\nthe performance boundary of dynamic convolution while enjoying parameter\nefficiency. To fill this gap, in this paper, we propose KernelWarehouse, a more\ngeneral form of dynamic convolution, which redefines the basic concepts of\n``kernels\", ``assembling kernels\" and ``attention function\" through the lens of\nexploiting convolutional parameter dependencies within the same layer and\nacross neighboring layers of a ConvNet. We testify the effectiveness of\nKernelWarehouse on ImageNet and MS-COCO datasets using various ConvNet\narchitectures. Intriguingly, KernelWarehouse is also applicable to Vision\nTransformers, and it can even reduce the model size of a backbone while\nimproving the model accuracy. For instance, KernelWarehouse (n=4) achieves\n5.61%|3.90%|4.38% absolute top-1 accuracy gain on the\nResNet18|MobileNetV2|DeiT-Tiny backbone, and KernelWarehouse (n=1/4) with\n65.10% model size reduction still achieves 2.29% gain on the ResNet18 backbone.\nThe code and models are available at https://github.com/OSVAI/KernelWarehouse.", "paper_summary_zh": "\u52d5\u614b\u5377\u7a4d\u5b78\u7fd2 n \u500b\u975c\u614b\u6838\u7684\u7dda\u6027\u6df7\u5408\uff0c\u5176\u52a0\u6b0a\u65b9\u5f0f\u53d6\u6c7a\u65bc\u8f38\u5165\u76f8\u95dc\u7684\u6ce8\u610f\u529b\uff0c\u5c55\u793a\u51fa\u6bd4\u4e00\u822c\u5377\u7a4d\u66f4\u512a\u7570\u7684\u6548\u80fd\u3002\u7136\u800c\uff0c\u5b83\u5c07\u5377\u7a4d\u53c3\u6578\u7684\u6578\u91cf\u589e\u52a0\u4e86 n \u500d\uff0c\u56e0\u6b64\u53c3\u6578\u6548\u7387\u4e0d\u4f73\u3002\u9019\u5c0e\u81f4\u6c92\u6709\u7814\u7a76\u9032\u5c55\u53ef\u4ee5\u8b93\u7814\u7a76\u4eba\u54e1\u63a2\u7d22 n>100\uff08\u6bd4\u5178\u578b\u8a2d\u5b9a n<10 \u5927\u4e00\u500b\u6578\u91cf\u7d1a\uff09\u7684\u8a2d\u5b9a\uff0c\u4ee5\u5728\u4eab\u53d7\u53c3\u6578\u6548\u7387\u7684\u540c\u6642\uff0c\u63a8\u9032\u52d5\u614b\u5377\u7a4d\u7684\u6548\u80fd\u754c\u7dda\u3002\u70ba\u4e86\u586b\u88dc\u9019\u500b\u7f3a\u53e3\uff0c\u6211\u5011\u5728\u672c\u6587\u4e2d\u63d0\u51fa KernelWarehouse\uff0c\u9019\u662f\u4e00\u7a2e\u66f4\u901a\u7528\u7684\u52d5\u614b\u5377\u7a4d\u5f62\u5f0f\uff0c\u5b83\u900f\u904e\u5728 ConvNet \u7684\u540c\u4e00\u5c64\u548c\u76f8\u9130\u5c64\u5167\u5229\u7528\u5377\u7a4d\u53c3\u6578\u76f8\u4f9d\u6027\uff0c\u91cd\u65b0\u5b9a\u7fa9\u300c\u6838\u300d\u3001\u300c\u7d44\u88dd\u6838\u300d\u548c\u300c\u6ce8\u610f\u529b\u51fd\u6578\u300d\u7684\u57fa\u672c\u6982\u5ff5\u3002\u6211\u5011\u5728 ImageNet \u548c MS-COCO \u8cc7\u6599\u96c6\u4e0a\u4f7f\u7528\u5404\u7a2e ConvNet \u67b6\u69cb\uff0c\u8b49\u660e\u4e86 KernelWarehouse \u7684\u6709\u6548\u6027\u3002\u6709\u8da3\u7684\u662f\uff0cKernelWarehouse \u4e5f\u9069\u7528\u65bc\u8996\u89ba\u8f49\u63db\u5668\uff0c\u5b83\u751a\u81f3\u53ef\u4ee5\u5728\u63d0\u5347\u6a21\u578b\u7cbe\u78ba\u5ea6\u7684\u540c\u6642\uff0c\u7e2e\u5c0f\u4e3b\u5e79\u6a21\u578b\u7684\u5927\u5c0f\u3002\u4f8b\u5982\uff0cKernelWarehouse (n=4) \u5728 ResNet18|MobileNetV2|DeiT-Tiny \u4e3b\u5e79\u4e0a\u5206\u5225\u7372\u5f97 5.61%|3.90%|4.38% \u7684\u7d55\u5c0d\u9802\u7d1a 1 \u6e96\u78ba\u7387\u63d0\u5347\uff0c\u800c KernelWarehouse (n=1/4) \u5728\u6a21\u578b\u5927\u5c0f\u6e1b\u5c11 65.10% \u7684\u60c5\u6cc1\u4e0b\uff0c\u4ecd\u7372\u5f97 ResNet18 \u4e3b\u5e79\u4e0a 2.29% \u7684\u63d0\u5347\u3002\u7a0b\u5f0f\u78bc\u548c\u6a21\u578b\u53ef\u65bc https://github.com/OSVAI/KernelWarehouse \u53d6\u5f97\u3002", "author": "Chao Li et.al.", "authors": "Chao Li, Anbang Yao", "id": "2406.07879v1", "paper_url": "http://arxiv.org/abs/2406.07879v1", "repo": "https://github.com/osvai/kernelwarehouse"}}