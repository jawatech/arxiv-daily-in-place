{"2501.08165": {"publish_time": "2025-01-14", "title": "I Can Find You in Seconds! Leveraging Large Language Models for Code Authorship Attribution", "paper_summary": "Source code authorship attribution is important in software forensics,\nplagiarism detection, and protecting software patch integrity. Existing\ntechniques often rely on supervised machine learning, which struggles with\ngeneralization across different programming languages and coding styles due to\nthe need for large labeled datasets. Inspired by recent advances in natural\nlanguage authorship analysis using large language models (LLMs), which have\nshown exceptional performance without task-specific tuning, this paper explores\nthe use of LLMs for source code authorship attribution.\n  We present a comprehensive study demonstrating that state-of-the-art LLMs can\nsuccessfully attribute source code authorship across different languages. LLMs\ncan determine whether two code snippets are written by the same author with\nzero-shot prompting, achieving a Matthews Correlation Coefficient (MCC) of\n0.78, and can attribute code authorship from a small set of reference code\nsnippets via few-shot learning, achieving MCC of 0.77. Additionally, LLMs show\nsome adversarial robustness against misattribution attacks.\n  Despite these capabilities, we found that naive prompting of LLMs does not\nscale well with a large number of authors due to input token limitations. To\naddress this, we propose a tournament-style approach for large-scale\nattribution. Evaluating this approach on datasets of C++ (500 authors, 26,355\nsamples) and Java (686 authors, 55,267 samples) code from GitHub, we achieve\nclassification accuracy of up to 65% for C++ and 68.7% for Java using only one\nreference per author. These results open new possibilities for applying LLMs to\ncode authorship attribution in cybersecurity and software engineering.", "paper_summary_zh": "<paragraph>\u539f\u59cb\u78bc\u4f5c\u8005\u6b78\u5c6c\u5728\u8edf\u9ad4\u9451\u8b58\u3001\u6284\u8972\u5075\u6e2c\u548c\u4fdd\u8b77\u8edf\u9ad4\u4fee\u88dc\u7a0b\u5f0f\u5b8c\u6574\u6027\u65b9\u9762\u975e\u5e38\u91cd\u8981\u3002\u73fe\u6709\u6280\u8853\u901a\u5e38\u4f9d\u8cf4\u65bc\u76e3\u7763\u5f0f\u6a5f\u5668\u5b78\u7fd2\uff0c\u7531\u65bc\u9700\u8981\u5927\u91cf\u6a19\u7c64\u8cc7\u6599\u96c6\uff0c\u56e0\u6b64\u5728\u4e0d\u540c\u7684\u7a0b\u5f0f\u8a9e\u8a00\u548c\u7de8\u78bc\u98a8\u683c\u4e2d\u96e3\u4ee5\u6982\u5316\u3002\u53d7\u5230\u6700\u8fd1\u4f7f\u7528\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u9032\u884c\u81ea\u7136\u8a9e\u8a00\u4f5c\u8005\u5206\u6790\u7684\u9032\u5c55\u555f\u767c\uff0c\u9019\u4e9b\u6a21\u578b\u5728\u6c92\u6709\u7279\u5b9a\u4efb\u52d9\u8abf\u6574\u7684\u60c5\u6cc1\u4e0b\u8868\u73fe\u51fa\u8272\u7684\uff0c\u672c\u6587\u63a2\u8a0e\u4f7f\u7528 LLM \u9032\u884c\u539f\u59cb\u78bc\u4f5c\u8005\u6b78\u5c6c\u3002\n\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u9805\u5168\u9762\u7684\u7814\u7a76\uff0c\u8b49\u660e\u6700\u5148\u9032\u7684 LLM \u53ef\u4ee5\u8de8\u4e0d\u540c\u8a9e\u8a00\u6210\u529f\u6b78\u5c6c\u539f\u59cb\u78bc\u4f5c\u8005\u3002LLM \u53ef\u4ee5\u900f\u904e\u96f6\u6b21\u63d0\u793a\u4f86\u5224\u65b7\u5169\u500b\u7a0b\u5f0f\u78bc\u7247\u6bb5\u662f\u5426\u7531\u540c\u4e00\u4f4d\u4f5c\u8005\u64b0\u5beb\uff0c\u9054\u5230 0.78 \u7684\u99ac\u4fee\u65af\u76f8\u95dc\u4fc2\u6578 (MCC)\uff0c\u4e26\u4e14\u53ef\u4ee5\u900f\u904e\u5c11\u91cf\u53c3\u8003\u7a0b\u5f0f\u78bc\u7247\u6bb5\u900f\u904e\u5c11\u91cf\u5b78\u7fd2\u4f86\u6b78\u5c6c\u7a0b\u5f0f\u78bc\u4f5c\u8005\uff0c\u9054\u5230 0.77 \u7684 MCC\u3002\u6b64\u5916\uff0cLLM \u5c0d\u932f\u8aa4\u6b78\u5c6c\u653b\u64ca\u8868\u73fe\u51fa\u4e00\u4e9b\u5c0d\u6297\u5f48\u6027\u3002\n\u5118\u7ba1\u6709\u9019\u4e9b\u529f\u80fd\uff0c\u6211\u5011\u767c\u73fe\u7531\u65bc\u8f38\u5165\u6b0a\u6756\u9650\u5236\uff0cLLM \u7684\u5929\u771f\u63d0\u793a\u7121\u6cd5\u5f88\u597d\u5730\u64f4\u5c55\u5230\u5927\u91cf\u4f5c\u8005\u3002\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u7a2e\u9326\u6a19\u8cfd\u5f0f\u65b9\u6cd5\u9032\u884c\u5927\u898f\u6a21\u6b78\u5c6c\u3002\u5728 GitHub \u4e0a\u7684 C++\uff08500 \u4f4d\u4f5c\u8005\uff0c26,355 \u500b\u7bc4\u4f8b\uff09\u548c Java\uff08686 \u4f4d\u4f5c\u8005\uff0c55,267 \u500b\u7bc4\u4f8b\uff09\u7a0b\u5f0f\u78bc\u7684\u8cc7\u6599\u96c6\u4e0a\u8a55\u4f30\u6b64\u65b9\u6cd5\uff0c\u6211\u5011\u50c5\u4f7f\u7528\u6bcf\u4f4d\u4f5c\u8005\u4e00\u500b\u53c3\u8003\uff0c\u5c31\u9054\u5230\u9ad8\u9054 65% \u7684 C++ \u5206\u985e\u6e96\u78ba\u5ea6\u548c 68.7% \u7684 Java \u5206\u985e\u6e96\u78ba\u5ea6\u3002\u9019\u4e9b\u7d50\u679c\u70ba\u5c07 LLM \u61c9\u7528\u65bc\u7db2\u8def\u5b89\u5168\u548c\u8edf\u9ad4\u5de5\u7a0b\u4e2d\u7684\u7a0b\u5f0f\u78bc\u4f5c\u8005\u6b78\u5c6c\u958b\u555f\u4e86\u65b0\u7684\u53ef\u80fd\u6027\u3002</paragraph>", "author": "Soohyeon Choi et.al.", "authors": "Soohyeon Choi, Yong Kiam Tan, Mark Huasong Meng, Mohamed Ragab, Soumik Mondal, David Mohaisen, Khin Mi Mi Aung", "id": "2501.08165v1", "paper_url": "http://arxiv.org/abs/2501.08165v1", "repo": "null"}}