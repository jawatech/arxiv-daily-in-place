{"2409.19120": {"publish_time": "2024-09-27", "title": "Secure Multiparty Generative AI", "paper_summary": "As usage of generative AI tools skyrockets, the amount of sensitive\ninformation being exposed to these models and centralized model providers is\nalarming. For example, confidential source code from Samsung suffered a data\nleak as the text prompt to ChatGPT encountered data leakage. An increasing\nnumber of companies are restricting the use of LLMs (Apple, Verizon, JPMorgan\nChase, etc.) due to data leakage or confidentiality issues. Also, an increasing\nnumber of centralized generative model providers are restricting, filtering,\naligning, or censoring what can be used. Midjourney and RunwayML, two of the\nmajor image generation platforms, restrict the prompts to their system via\nprompt filtering. Certain political figures are restricted from image\ngeneration, as well as words associated with women's health care, rights, and\nabortion.\n  In our research, we present a secure and private methodology for generative\nartificial intelligence that does not expose sensitive data or models to\nthird-party AI providers. Our work modifies the key building block of modern\ngenerative AI algorithms, e.g. the transformer, and introduces confidential and\nverifiable multiparty computations in a decentralized network to maintain the\n1) privacy of the user input and obfuscation to the output of the model, and 2)\nintroduce privacy to the model itself. Additionally, the sharding process\nreduces the computational burden on any one node, enabling the distribution of\nresources of large generative AI processes across multiple, smaller nodes. We\nshow that as long as there exists one honest node in the decentralized\ncomputation, security is maintained. We also show that the inference process\nwill still succeed if only a majority of the nodes in the computation are\nsuccessful. Thus, our method offers both secure and verifiable computation in a\ndecentralized network.", "paper_summary_zh": "<paragraph>\u96a8\u8457\u751f\u6210\u5f0f AI \u5de5\u5177\u7684\u4f7f\u7528\u91cf\u6fc0\u589e\uff0c\u66b4\u9732\u7d66\u9019\u4e9b\u6a21\u578b\u548c\u96c6\u4e2d\u5f0f\u6a21\u578b\u63d0\u4f9b\u8005\u7684\u654f\u611f\u8cc7\u8a0a\u6578\u91cf\u4ee4\u4eba\u64d4\u6182\u3002\u4f8b\u5982\uff0c\u4f86\u81ea\u4e09\u661f\u7684\u6a5f\u5bc6\u539f\u59cb\u78bc\u767c\u751f\u8cc7\u6599\u5916\u6d29\uff0c\u56e0\u70ba ChatGPT \u7684\u6587\u5b57\u63d0\u793a\u9047\u5230\u4e86\u8cc7\u6599\u5916\u6d29\u3002\u7531\u65bc\u8cc7\u6599\u5916\u6d29\u6216\u6a5f\u5bc6\u6027\u554f\u984c\uff0c\u8d8a\u4f86\u8d8a\u591a\u7684\u516c\u53f8\u6b63\u5728\u9650\u5236\u4f7f\u7528 LLM\uff08Apple\u3001Verizon\u3001JPMorgan Chase \u7b49\uff09\u3002\u6b64\u5916\uff0c\u8d8a\u4f86\u8d8a\u591a\u7684\u96c6\u4e2d\u5f0f\u751f\u6210\u6a21\u578b\u63d0\u4f9b\u8005\u6b63\u5728\u9650\u5236\u3001\u904e\u6ffe\u3001\u8abf\u6574\u6216\u5be9\u67e5\u53ef\u4ee5\u4f7f\u7528\u4ec0\u9ebc\u3002Midjourney \u548c RunwayML \u662f\u5169\u500b\u4e3b\u8981\u7684\u5f71\u50cf\u751f\u6210\u5e73\u53f0\uff0c\u5b83\u5011\u900f\u904e\u63d0\u793a\u904e\u6ffe\u9650\u5236\u7cfb\u7d71\u7684\u63d0\u793a\u3002\u67d0\u4e9b\u653f\u6cbb\u4eba\u7269\u88ab\u7981\u6b62\u751f\u6210\u5f71\u50cf\uff0c\u4ee5\u53ca\u8207\u5a66\u5973\u4fdd\u5065\u3001\u6b0a\u5229\u548c\u58ae\u80ce\u76f8\u95dc\u7684\u5b57\u8a5e\u3002\n\u5728\u6211\u5011\u7684\u7814\u7a76\u4e2d\uff0c\u6211\u5011\u63d0\u51fa\u4e86\u4e00\u7a2e\u5b89\u5168\u4e14\u79c1\u5bc6\u7684\u751f\u6210\u5f0f\u4eba\u5de5\u667a\u6167\u65b9\u6cd5\uff0c\u4e0d\u6703\u5c07\u654f\u611f\u8cc7\u6599\u6216\u6a21\u578b\u66b4\u9732\u7d66\u7b2c\u4e09\u65b9 AI \u63d0\u4f9b\u8005\u3002\u6211\u5011\u7684\u7814\u7a76\u4fee\u6539\u4e86\u73fe\u4ee3\u751f\u6210\u5f0f AI \u6f14\u7b97\u6cd5\u7684\u4e3b\u8981\u5efa\u69cb\u5340\u584a\uff0c\u4f8b\u5982Transformer\uff0c\u4e26\u5728\u5206\u6563\u5f0f\u7db2\u8def\u4e2d\u5f15\u5165\u4e86\u6a5f\u5bc6\u4e14\u53ef\u9a57\u8b49\u7684\u591a\u65b9\u904b\u7b97\uff0c\u4ee5\u7dad\u8b77 1) \u4f7f\u7528\u8005\u8f38\u5165\u7684\u96b1\u79c1\u548c\u6a21\u578b\u8f38\u51fa\u7684\u6df7\u6dc6\uff0c\u4ee5\u53ca 2) \u70ba\u6a21\u578b\u672c\u8eab\u5f15\u5165\u96b1\u79c1\u3002\u6b64\u5916\uff0c\u5206\u7247\u8655\u7406\u6703\u964d\u4f4e\u4efb\u4f55\u4e00\u500b\u7bc0\u9ede\u7684\u904b\u7b97\u8ca0\u64d4\uff0c\u8b93\u5927\u578b\u751f\u6210\u5f0f AI \u8655\u7406\u7684\u8cc7\u6e90\u53ef\u4ee5\u5206\u5e03\u5728\u591a\u500b\u8f03\u5c0f\u7684\u7bc0\u9ede\u4e0a\u3002\u6211\u5011\u8868\u660e\uff0c\u53ea\u8981\u5728\u5206\u6563\u5f0f\u904b\u7b97\u4e2d\u5b58\u5728\u4e00\u500b\u8aa0\u5be6\u7684\u7bc0\u9ede\uff0c\u5c31\u80fd\u7dad\u6301\u5b89\u5168\u6027\u3002\u6211\u5011\u4e5f\u8868\u660e\uff0c\u5982\u679c\u904b\u7b97\u4e2d\u53ea\u6709\u591a\u6578\u7bc0\u9ede\u6210\u529f\uff0c\u63a8\u7406\u7a0b\u5e8f\u4ecd\u7136\u6703\u6210\u529f\u3002\u56e0\u6b64\uff0c\u6211\u5011\u7684\u6a21\u578b\u5728\u5206\u6563\u5f0f\u7db2\u8def\u4e2d\u63d0\u4f9b\u4e86\u5b89\u5168\u4e14\u53ef\u9a57\u8b49\u7684\u904b\u7b97\u3002</paragraph>", "author": "Manil Shrestha et.al.", "authors": "Manil Shrestha, Yashodha Ravichandran, Edward Kim", "id": "2409.19120v1", "paper_url": "http://arxiv.org/abs/2409.19120v1", "repo": "null"}}