{"2408.01055": {"publish_time": "2024-08-02", "title": "LLM as Runtime Error Handler: A Promising Pathway to Adaptive Self-Healing of Software Systems", "paper_summary": "Unanticipated runtime errors, lacking predefined handlers, can abruptly\nterminate execution and lead to severe consequences, such as data loss or\nsystem crashes. Despite extensive efforts to identify potential errors during\nthe development phase, such unanticipated errors remain a challenge to to be\nentirely eliminated, making the runtime mitigation measurements still\nindispensable to minimize their impact. Automated self-healing techniques, such\nas reusing existing handlers, have been investigated to reduce the loss coming\nthrough with the execution termination. However, the usability of existing\nmethods is retained by their predefined heuristic rules and they fail to handle\ndiverse runtime errors adaptively. Recently, the advent of Large Language\nModels (LLMs) has opened new avenues for addressing this problem. Inspired by\ntheir remarkable capabilities in understanding and generating code, we propose\nto deal with the runtime errors in a real-time manner using LLMs.\n  Specifically, we propose Healer, the first LLM-assisted self-healing\nframework for handling runtime errors. When an unhandled runtime error occurs,\nHealer will be activated to generate a piece of error-handling code with the\nhelp of its internal LLM and the code will be executed inside the runtime\nenvironment owned by the framework to obtain a rectified program state from\nwhich the program should continue its execution. Our exploratory study\nevaluates the performance of Healer using four different code benchmarks and\nthree state-of-the-art LLMs, GPT-3.5, GPT-4, and CodeQwen-7B. Results show\nthat, without the need for any fine-tuning, GPT-4 can successfully help\nprograms recover from 72.8% of runtime errors, highlighting the potential of\nLLMs in handling runtime errors.", "paper_summary_zh": "<paragraph>\u672a\u9810\u671f\u7684\u57f7\u884c\u6642\u9593\u932f\u8aa4\u7f3a\u4e4f\u9810\u5148\u5b9a\u7fa9\u7684\u8655\u7406\u5e38\u5f0f\uff0c\u53ef\u80fd\u6703\u7a81\u7136\u7d42\u6b62\u57f7\u884c\u4e26\u5c0e\u81f4\u56b4\u91cd\u5f8c\u679c\uff0c\u4f8b\u5982\u8cc7\u6599\u907a\u5931\u6216\u7cfb\u7d71\u5d29\u6f70\u3002\u5118\u7ba1\u5728\u958b\u767c\u968e\u6bb5\u5df2\u76e1\u529b\u627e\u51fa\u6f5b\u5728\u932f\u8aa4\uff0c\u4f46\u6b64\u985e\u672a\u9810\u671f\u7684\u932f\u8aa4\u4ecd\u96e3\u4ee5\u5b8c\u5168\u6d88\u9664\uff0c\u56e0\u6b64\u57f7\u884c\u6642\u9593\u7de9\u89e3\u63aa\u65bd\u5c0d\u65bc\u5c07\u5176\u5f71\u97ff\u964d\u81f3\u6700\u4f4e\u4ecd\u7136\u4e0d\u53ef\u6216\u7f3a\u3002\u5df2\u7814\u7a76\u81ea\u52d5\u81ea\u6211\u5fa9\u539f\u6280\u8853\uff0c\u4f8b\u5982\u91cd\u8907\u4f7f\u7528\u73fe\u6709\u8655\u7406\u5e38\u5f0f\uff0c\u4ee5\u6e1b\u5c11\u57f7\u884c\u7d42\u6b62\u9020\u6210\u7684\u640d\u5931\u3002\u7136\u800c\uff0c\u73fe\u6709\u65b9\u6cd5\u7684\u53ef\u7528\u6027\u53d7\u5176\u9810\u5148\u5b9a\u7fa9\u7684\u555f\u767c\u5f0f\u898f\u5247\u6240\u9650\uff0c\u4e14\u7121\u6cd5\u9748\u6d3b\u8655\u7406\u4e0d\u540c\u7684\u57f7\u884c\u6642\u9593\u932f\u8aa4\u3002\u6700\u8fd1\uff0c\u5927\u578b\u8a9e\u8a00\u6a21\u578b (LLM) \u7684\u51fa\u73fe\u70ba\u89e3\u6c7a\u6b64\u554f\u984c\u958b\u95e2\u4e86\u65b0\u9014\u5f91\u3002\u53d7\u5230 LLM \u5728\u7406\u89e3\u548c\u7522\u751f\u7a0b\u5f0f\u78bc\u65b9\u9762\u7684\u5353\u8d8a\u80fd\u529b\u6240\u555f\u767c\uff0c\u6211\u5011\u63d0\u8b70\u4f7f\u7528 LLM \u5373\u6642\u8655\u7406\u57f7\u884c\u6642\u9593\u932f\u8aa4\u3002\n\u5177\u9ad4\u4f86\u8aaa\uff0c\u6211\u5011\u63d0\u51fa Healer\uff0c\u9019\u662f\u7b2c\u4e00\u500b\u7531 LLM \u8f14\u52a9\u7684\u81ea\u6211\u5fa9\u539f\u67b6\u69cb\uff0c\u7528\u65bc\u8655\u7406\u57f7\u884c\u6642\u9593\u932f\u8aa4\u3002\u7576\u767c\u751f\u672a\u8655\u7406\u7684\u57f7\u884c\u6642\u9593\u932f\u8aa4\u6642\uff0cHealer \u5c07\u6703\u88ab\u555f\u52d5\uff0c\u4e26\u5728\u5167\u90e8 LLM \u7684\u5354\u52a9\u4e0b\u7522\u751f\u4e00\u6bb5\u932f\u8aa4\u8655\u7406\u7a0b\u5f0f\u78bc\uff0c\u4e14\u8a72\u7a0b\u5f0f\u78bc\u5c07\u5728\u67b6\u69cb\u64c1\u6709\u7684\u57f7\u884c\u6642\u9593\u74b0\u5883\u4e2d\u57f7\u884c\uff0c\u4ee5\u53d6\u5f97\u5df2\u4fee\u6b63\u7684\u7a0b\u5f0f\u72c0\u614b\uff0c\u800c\u7a0b\u5f0f\u61c9\u5f9e\u8a72\u72c0\u614b\u7e7c\u7e8c\u57f7\u884c\u3002\u6211\u5011\u7684\u63a2\u7d22\u6027\u7814\u7a76\u4f7f\u7528\u56db\u500b\u4e0d\u540c\u7684\u7a0b\u5f0f\u78bc\u57fa\u6e96\u548c\u4e09\u500b\u6700\u5148\u9032\u7684 LLM\uff08GPT-3.5\u3001GPT-4 \u548c CodeQwen-7B\uff09\u4f86\u8a55\u4f30 Healer \u7684\u6548\u80fd\u3002\u7d50\u679c\u986f\u793a\uff0c\u7121\u9700\u4efb\u4f55\u5fae\u8abf\uff0cGPT-4 \u4fbf\u80fd\u6210\u529f\u5354\u52a9\u7a0b\u5f0f\u5f9e 72.8% \u7684\u57f7\u884c\u6642\u9593\u932f\u8aa4\u4e2d\u5fa9\u539f\uff0c\u7a81\u986f\u4e86 LLM \u5728\u8655\u7406\u57f7\u884c\u6642\u9593\u932f\u8aa4\u65b9\u9762\u7684\u6f5b\u529b\u3002</paragraph>", "author": "Zhensu Sun et.al.", "authors": "Zhensu Sun, Haotian Zhu, Bowen Xu, Xiaoning Du, Li Li, David Lo", "id": "2408.01055v1", "paper_url": "http://arxiv.org/abs/2408.01055v1", "repo": "null"}}