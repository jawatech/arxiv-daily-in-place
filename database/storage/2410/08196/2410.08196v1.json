{"2410.08196": {"publish_time": "2024-10-10", "title": "MathCoder2: Better Math Reasoning from Continued Pretraining on Model-translated Mathematical Code", "paper_summary": "Code has been shown to be effective in enhancing the mathematical reasoning\nabilities of large language models due to its precision and accuracy. Previous\nworks involving continued mathematical pretraining often include code that\nutilizes math-related packages, which are primarily designed for fields such as\nengineering, machine learning, signal processing, or module testing, rather\nthan being directly focused on mathematical reasoning. In this paper, we\nintroduce a novel method for generating mathematical code accompanied with\ncorresponding reasoning steps for continued pretraining. Our approach begins\nwith the construction of a high-quality mathematical continued pretraining\ndataset by incorporating math-related web data, code using mathematical\npackages, math textbooks, and synthetic data. Next, we construct reasoning\nsteps by extracting LaTeX expressions, the conditions needed for the\nexpressions, and the results of the expressions from the previously collected\ndataset. Based on this extracted information, we generate corresponding code to\naccurately capture the mathematical reasoning process. Appending the generated\ncode to each reasoning step results in data consisting of paired natural\nlanguage reasoning steps and their corresponding code. Combining this data with\nthe original dataset results in a 19.2B-token high-performing mathematical\npretraining corpus, which we name MathCode-Pile. Training several popular base\nmodels with this corpus significantly improves their mathematical abilities,\nleading to the creation of the MathCoder2 family of models. All of our data\nprocessing and training code is open-sourced, ensuring full transparency and\neasy reproducibility of the entire data collection and training pipeline. The\ncode is released at https://github.com/mathllm/MathCoder2 .", "paper_summary_zh": "<paragraph>\u7a0b\u5f0f\u78bc\u5df2\u88ab\u8b49\u5be6\u80fd\u6709\u6548\u63d0\u5347\u5927\u578b\u8a9e\u8a00\u6a21\u578b\u7684\u6578\u5b78\u63a8\u7406\u80fd\u529b\uff0c\u56e0\u70ba\u5b83\u7cbe\u6e96\u4e14\u6e96\u78ba\u3002\u5148\u524d\u6d89\u53ca\u6301\u7e8c\u6578\u5b78\u9810\u8a13\u7df4\u7684\u7814\u7a76\uff0c\u901a\u5e38\u5305\u542b\u4f7f\u7528\u8207\u6578\u5b78\u76f8\u95dc\u5957\u4ef6\u7684\u7a0b\u5f0f\u78bc\uff0c\u9019\u4e9b\u5957\u4ef6\u4e3b\u8981\u8a2d\u8a08\u7d66\u5de5\u7a0b\u3001\u6a5f\u5668\u5b78\u7fd2\u3001\u8a0a\u865f\u8655\u7406\u6216\u6a21\u7d44\u6e2c\u8a66\u7b49\u9818\u57df\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5c08\u6ce8\u65bc\u6578\u5b78\u63a8\u7406\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5011\u4ecb\u7d39\u4e00\u7a2e\u65b0\u7684\u65b9\u6cd5\uff0c\u7528\u65bc\u7522\u751f\u6578\u5b78\u7a0b\u5f0f\u78bc\uff0c\u4e26\u9644\u4e0a\u5c0d\u61c9\u7684\u63a8\u7406\u6b65\u9a5f\uff0c\u4ee5\u6301\u7e8c\u9032\u884c\u9810\u8a13\u7df4\u3002\u6211\u5011\u7684\u505a\u6cd5\u5f9e\u5efa\u7acb\u4e00\u500b\u9ad8\u54c1\u8cea\u7684\u6578\u5b78\u6301\u7e8c\u9810\u8a13\u7df4\u8cc7\u6599\u96c6\u958b\u59cb\uff0c\u65b9\u6cd5\u662f\u7d0d\u5165\u8207\u6578\u5b78\u76f8\u95dc\u7684\u7db2\u8def\u8cc7\u6599\u3001\u4f7f\u7528\u6578\u5b78\u5957\u4ef6\u7684\u7a0b\u5f0f\u78bc\u3001\u6578\u5b78\u6559\u79d1\u66f8\u548c\u5408\u6210\u8cc7\u6599\u3002\u63a5\u4e0b\u4f86\uff0c\u6211\u5011\u900f\u904e\u5f9e\u5148\u524d\u6536\u96c6\u7684\u8cc7\u6599\u96c6\u4e2d\u8403\u53d6 LaTeX \u8868\u9054\u5f0f\u3001\u8868\u9054\u5f0f\u6240\u9700\u7684\u689d\u4ef6\uff0c\u4ee5\u53ca\u8868\u9054\u5f0f\u7684\u7d50\u679c\uff0c\u4f86\u5efa\u69cb\u63a8\u7406\u6b65\u9a5f\u3002\u6839\u64da\u9019\u4e9b\u8403\u53d6\u7684\u8cc7\u8a0a\uff0c\u6211\u5011\u7522\u751f\u5c0d\u61c9\u7684\u7a0b\u5f0f\u78bc\uff0c\u4ee5\u6e96\u78ba\u6355\u6349\u6578\u5b78\u63a8\u7406\u904e\u7a0b\u3002\u5c07\u7522\u751f\u7684\u7a0b\u5f0f\u78bc\u9644\u52a0\u5230\u6bcf\u500b\u63a8\u7406\u6b65\u9a5f\uff0c\u5c31\u6703\u7522\u751f\u7531\u6210\u5c0d\u7684\u81ea\u7136\u8a9e\u8a00\u63a8\u7406\u6b65\u9a5f\u53ca\u5176\u5c0d\u61c9\u7a0b\u5f0f\u78bc\u7d44\u6210\u7684\u8cc7\u6599\u3002\u5c07\u9019\u4e9b\u8cc7\u6599\u8207\u539f\u59cb\u8cc7\u6599\u96c6\u7d50\u5408\uff0c\u5c31\u6703\u7522\u751f\u4e00\u500b 19.2B \u500b\u7b26\u865f\u7684\u9ad8\u6548\u80fd\u6578\u5b78\u9810\u8a13\u7df4\u8a9e\u6599\u5eab\uff0c\u6211\u5011\u5c07\u5176\u547d\u540d\u70ba MathCode-Pile\u3002\u4f7f\u7528\u9019\u500b\u8a9e\u6599\u5eab\u8a13\u7df4\u5e7e\u500b\u71b1\u9580\u7684\u57fa\u672c\u6a21\u578b\uff0c\u5927\u5e45\u63d0\u5347\u4e86\u5b83\u5011\u7684\u6578\u5b78\u80fd\u529b\uff0c\u9032\u800c\u5275\u9020\u51fa MathCoder2 \u6a21\u578b\u5bb6\u65cf\u3002\u6211\u5011\u6240\u6709\u7684\u8cc7\u6599\u8655\u7406\u548c\u8a13\u7df4\u7a0b\u5f0f\u78bc\u90fd\u662f\u958b\u6e90\u7684\uff0c\u78ba\u4fdd\u6574\u500b\u8cc7\u6599\u6536\u96c6\u548c\u8a13\u7df4\u7ba1\u7dda\u7684\u5b8c\u5168\u900f\u660e\u5ea6\u548c\u5bb9\u6613\u91cd\u73fe\u6027\u3002\u7a0b\u5f0f\u78bc\u5df2\u65bc https://github.com/mathllm/MathCoder2 \u767c\u5e03\u3002</paragraph>", "author": "Zimu Lu et.al.", "authors": "Zimu Lu, Aojun Zhou, Ke Wang, Houxing Ren, Weikang Shi, Junting Pan, Mingjie Zhan, Hongsheng Li", "id": "2410.08196v1", "paper_url": "http://arxiv.org/abs/2410.08196v1", "repo": "https://github.com/mathllm/mathcoder2"}}